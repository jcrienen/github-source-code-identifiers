golomb
main
main
solved
runExample
maxExample
absExample
signExample
minimizeExample
elementExample
relationExample
neighborhoodSearchExample
main
ft06
ft10
la40
swv20
abz08
ta44
jssp
main
setColor
paint
actionPerformed
actionPerformed
setSolution
setStateWait
actionNext
actionQuit
waitAction
paint
main
parse
vsum
hsum
adjacentSum
setProblem
printSolution
solve
main
ft06
solve
main
pp
main
main
rightOf
nextTo
find
main
main
sum
sum
sum2
solve
main
sudoku
main
queens
main
magic
main
readString
runConsole
apply
convertSource
generateCommand
insertJavaCode
main
of
exampleFunction
main
main
main
createWhite
createWhite
main
main
main
main
image
main
main
create
main
image
main
main
main
create
create2
main
main
main
main
main
main
main
printResult
main
main
main
main
getData
getChildren
asciiDisplay
asciiTail
getIndentString
convert
main
main
main
main
main
main
main
generateFunctionStrings1
generateFunctionStrings2
generateFunctionStrings3
main
main
apply
appendSetDelayedToRule
appendSetDelayedToMatcher
convertList
convertListSerialized
convert
convertToRule
convertToMatcher
convertListExpr
convertSerialized
parseFileToList
generateFunctionStrings
isSpecialRuleList
createAutoHeader
createHeader
generateFunctionSerialized
main
main
printGithubSymjaFunctionLineNumber
buildURL
lineNumberOfClass
buildFileNameL
generateFunctionStrings
main
main
ast1
ast2
ast3
main
createJavadocFromFunctionDoc
main
parseFile
generateFunctionStrings
main
main
generateHTMLString
readString
main
add
compareTo
hashCode
equals
getStem
getTerms
getFrequency
getKeywordsList
getStemForm
find
extract
main
parseFileToList
writeFile
convert
appendSetDelayedToBuffer
addPredefinedSymbols
main
parseFileToList
writeFile
convert
convertExpr
addToFunctionSet
main
createSymbol
toRubiString
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
generateHTML
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
exampleFunction
main
main
main
printHierarchy
printHierarchy
traverseClasses
traverseClasses
main
main
parseFileToList
buildFileNameL
main
getFirst
getSecond
hashCode
equals
toString
timeDiffStr
timeStr
add
addAll
quickInsort
quickInsort
quickInsort
compare
add
add
addAll
addAll
addAll
remove
remove
removeAll
intersect
totalCount
toList
toString
equals
hashCode
start
capture
totalRuntime
initProject
repeat
formatLeft
formatRight
getPackageName
getMultiplier
test3nPlus1DroppingSequence
test3nPlus1RepeatSequence
addToLength2NMap
analyzeNStartSequences
findPeriod
addToProgressionToMaxLengthMap
analyzeProgressions
main
harmonic
harmonic_dbl
harmonic_upperBound
harmonic_lowerBound
hyperharmonic_closedForm
hyperharmonic_recurrent
_hyperharmonic_recurrent
harmonicPower
print
print
computeAndPrintHyperharmonic_recurrent
computeAndPrintHyperharmonic_closedForm
computeAndPrintHarmonicPowers
printHarmonic
main
add
computeExponent
computeSHCN
getX
getSHCN
getExponentSum
getPrimes
getExponents
add
computeExponent
computeCAN
getEpsilon
getCAN
getExponentSum
getPrimes
getExponents
main
next
next
test
testAssumingBealsConjecture
testCase2
main
EulerFormula
EulerFormula
EulerFormula
testCorrectness
testPerformance
main
modularSqrt
Tonelli_Shanks
Lagrange
case5Mod8
bruteForce
modularSqrtModPower
modularSqrt
Tonelli_Shanks
Lagrange
case5Mod8
bruteForce
modularSqrtModPower
createPArray
createNArray
testCorrectness
testPerformance
main
modPow
modPow
modPow
modularSqrt
Tonelli_Shanks
Lagrange
case5Mod8
modularSqrtModSquare_v01
modularSqrtModSquare_v02
modularSqrtModPower
jacobiSymbol_v01
jacobiSymbol_v02
jacobiSymbol
jacobiSymbol
jacobiSymbol
jacobiSymbol
kroneckerSymbol
gcd_euclid_withDivision
gcd_euclid_withoutDivision
gcd_binary1
gcd
gcd
gcd
lcm
lcm
lcm
toString
computeAll
computeHalf
modularInverse_v1
modularInverse
toString
computeAll
computeHalf
modularInverse_v1
modularInverse_v2
modularInverse
gcd_euclid_withDivision
gcd_binary1
gcd
gcd
gcd_euclid_withDivision
gcd_binary1
gcd
gcd
hasNext
next
partitionsOf
printNumberOfPartitions
main
getDim
getCardinality
getElem
setElem
firstNonZeroPartIndex
subtract
complement
div2
maxNextPart
compareTo
hashCode
equals
toString
iterator
hasNext
next
remove
hasNext
next
partitionsOf
numberOfPartitionsOf
numberOfFactorizationsOf
printNumberOfMultipartitePartitions
main
createFrom
valueOf
getPrime
main
getDim
getCardinality
getElem
setElem
firstNonZeroPartIndex
subtract
complement
div2
maxNextPart
compareTo
sum
getNumberOfRealizations
toString
printNumberOfFactorizations
printNumberOfFactorizationsRecords
printNumberOfFactorizationsRecordsPerBit
printNumberOfFactorialFactorizations
printHyperPartitions
main
hasNext
next
toString
create
addSubvalues
getSubvaluesLessOrEqual
accessStats
getPrime
getName
findSingleFactor
findSingleFactor
main
getName
findSingleFactor
findSingleFactor
computeS
main
getName
findSingleFactor
findSingleFactor
adjustAForOddK
main
findSingleFactor
testRange
main
getName
findSingleFactor
test
adjustAForOddK
getName
findSingleFactor
findSingleFactor
adjustA
main
getName
findSingleFactor
findSingleFactor
adjustAForOddK
main
getName
findSingleFactor
findSingleFactor
main
getName
findSingleFactor
findSingleFactor
main
getFactor
getName
submod
addmod
u64div
spMulMod
spGCD
spRand
add
dup
prac70
prac85
prac
modinv_64
build
tinyecm
ecm_stage1
ecm_stage2
montMul63
check_factor
findSingleFactor
main
getName
factor
searchFactors
findSingleFactor
isProbablePrime
addToMapDependingOnPrimeTest
addToMap
computeMaxCurvesForN
fnECM
GenerateSieve
prac
lucas_cost
duplicate
add3
LongToBigNbr
BigNbrToBigInt
BigNbrToBigInt
computeNumberLength
AddBigNbr
AddBigNbr32
AddBigNbrModN
SubtractBigNbr
SubtractBigNbr32
SubtractBigNbrModN
MultBigNbrByLongModN
MultBigNbrModN
AdjustModN
DivBigNbrByLong
BigNbrAreEqual
BigNbrIsZero
ChSignBigNbr
Convert31To32Bits
Convert32To31Bits
GcdBigNbr
ModInvBigNbr
BigIntToBigNbr
BigIntToBigNbr
BigNbrToString
BigNbrToString
main
setNumberLength
testInOutConversion32
testInOutConversion31
testRandomNumbers
testSpecialNumbers
main
mul
getName
submod
addmod
u64div
spMulMod
spGCD
spRand
add
dup
prac70
prac85
prac
modinv_64
build
tinyecm
ecm_stage1
ecm_stage2
setUpMontgomeryMult_v1
setUpMontgomeryMult_v2
montMul64
check_factor
findSingleFactor
main
getName
submod
addmod
u64div
spMulMod
spGCD
spRand
add
dup
prac70
prac85
prac
modinv_64
build
tinyecm
ecm_stage1
ecm_stage2
montMul64
check_factor
findSingleFactor
main
getName
submod
addmod
u64div
spMulMod
spGCD
spRand
add
dup
prac70
prac85
prac
modinv_64
build
tinyecm
ecm_stage1
ecm_stage2
montMul64
montSqr64
check_factor
findSingleFactor
main
getName
findSingleFactor
test
verifyCongruence
addModN
mulModN
testInput
main
getName
findSingleFactor
test
verifyCongruence
addModN
mulModN
getName
initialize
initialize
test
getName
initialize
initialize
test
bitLength
getName
initialize
initialize
test
getName
initialize
initialize
test
getName
initialize
initialize
test
factor_recurrent
getName
initialize
initialize
test
factor_recurrent
bitLength
getName
initialize
initialize
test
factor_recurrent
computeMultiplier
getName
factor
factor
searchFactors
findSingleFactor
getName
searchFactors
findSingleFactor
findSingleFactorInternal
computeLogPArray
testSieve
logResults
cleanUp
main
getName
initializeForN
initializeForAParameter
sieve
initializeSieveArray
getReport
cleanUp
computeBestBlockCount
getName
initializeForN
initializeForAParameter
sieve
sievePositiveXBlock
sieveNegativeXBlock
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
sievePositiveXBlock
sieveNegativeXBlock
initializeSieveArray
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
sievePositiveXBlock
sieveNegativeXBlock
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
sievePositiveXBlock
sieveNegativeXBlock
initializeSieveArray
getReport
cleanUp
computeInitializerValue
getInitializerBlock
getName
initializeForN
initializeForAParameter
sieve
initializeSieveArray
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
initializeSieveArray
getReport
cleanUp
add
getTotalDuration
getPhaseTimings
getName
initializeForN
initializeForAParameter
sieve
sievePositiveXBlock
sieveNegativeXBlock
initializeSieveArray
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
sieveXBlock
initializeSieveArray
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
getReport
cleanUp
getName
initializeForN
initializeForAParameter
sieve
sievePositiveXBlock
sieveNegativeXBlock
getReport
cleanUp
getName
addPowers
equals
hashCode
compareTo
addPowers
findPowers
mergePrimesAndPowers
getName
findPowers
getName
addPowers
getName
findPowers
computeMultiplier
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
addCommonFactorsToSmallFactors
getReport
cleanUp
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
addCommonFactorsToSmallFactors
getReport
cleanUp
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
factor_recurrent
addCommonFactorsToSmallFactors
getReport
cleanUp
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
addCommonFactorsToSmallFactors
getReport
cleanUp
add
getOperationDetails
getTotalDuration
getPhaseTimings
getQRestSizes
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
getReport
cleanUp
getName
initializeForN
initializeForAParameter
setBParameter
testList
getReport
cleanUp
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
factor_recurrent
addCommonFactorsToSmallFactors
getReport
cleanUp
getName
initializeForN
initializeForAParameter
setBParameter
testList
test
addCommonFactorsToSmallFactors
getReport
cleanUp
computeTArray
computeFirstBParameter
computeNextBParameter
main
getName
initializeForN
nextPolynomial
computeFirstBParameter
computeFirstXArrays
computeNextXArrays
getReport
cleanUp
getName
initialize
estimateQCount
computeAParameter
getBestIndex
findFreeQIndex
computeNextAParameter
getSharedQCount
getQCount
getQTArray
getQArray
cleanUp
getName
initialize
computeNextAParameter
getQCount
getQArray
getQTArray
cleanUp
filter
getName
filter
getName
filter
getName
filter
getName
add
getOperationDetails
getTotalDuration
getPhaseTimings
computeTArray
getName
searchFactors
findSingleFactor
findSingleFactorInternal
computeLogPArray
logResults
cleanUp
main
getName
findSingleFactor
findSingleFactor
bitLength
test
reverseIteration
main
getName
findSingleFactor
findSingleFactor
test
reverseIteration
main
getName
findSingleFactor
findSingleFactor
bitLength
test
reverseIteration
main
getName
findSingleFactor
findSingleFactor
addModN
squareModN
main
getName
findSingleFactor
addModN
main
getName
findSingleFactor
addModN
getName
findSingleFactor
findSingleFactor
setUpMontgomeryMult
montMul63
main
getName
findSingleFactor
addModN
getName
findSingleFactor
findSingleFactor
setUpMontgomeryMult
montMul64
main
getName
findSingleFactor
findSingleFactor
setUpMontgomeryMult
montgomeryMult
addModN
main
getName
findSingleFactor
addModN
squareModN
generate
main
main
getName
findSingleFactor
searchFactors
main
testInput
testArgs
test
testRange
testAndGetCorrectFactors
main
getName
factor
factor
findSingleFactor
findSingleFactor
getName
factor
factor
findSingleFactor
findSingleFactor
getName
factor
findSingleFactor
findSingleFactor
getName
setTestLimit
factor
searchFactors
findSingleFactor
addToMap
getName
setTestLimit
factor
findSingleFactor
findSingleFactor
getName
setTestLimit
factor
findSingleFactor
findSingleFactor
main
main
test
run
fetchUnsafe
getUnsafe
allocateMemory
freeMemory
getName
testForFactor
getAString
getQString
computeBlockLanczos
MatrixMultAdd
MatrixMultiplication
MatrTranspMult
MatrixAddition
MatrMultBySSt
MultiplyAByMatrix
colexchange
coladd
add
contains
last
isEmpty
addXor
toList
equals
hashCode
toString
getName
testForFactor
getRowIndexHistoryAsList
getBiggestColumnIndex
addXor
isNullVector
hashCode
equals
toString
getName
solve
createMatrix
createColumnIndexSetFromCongruence
createRowIndexHistory
getName
solve
getName
initialize
solve
removeSingletons
addToColumn2RowMap
removeFromColumn2RowMap
createFactor2ColumnIndexMap
solve
processNullVector
getTestedNullVectorCount
cleanUp
countIndependentCycles
insertEdge
getRoot
getCycleCountResult
testRoots
findIndependentCycles
getAllQFactors
getNumberOfLargeQFactors
getName
solve
removeSingletons
addToColumn2RowMap
removeFromColumn2RowMap
createFactor2ColumnIndexMap
solve
createMatrix
createColumnIndexSetFromCongruence
createRowIndexHistory
cleanUp
getAllQFactors
getNumberOfLargeQFactors
getA
getAllQFactors
getSmallQFactors
getNumberOfLargeQFactors
hashCode
equals
toString
getLargeFactorsWithOddExponent
getAllQFactors
getLargeFactorsWithOddExponent
getNumberOfLargeQFactors
initialize
add
findRelatedPartials
addSmooth
addPartial
dropPartial
getSmoothCongruenceCount
getSmoothCongruences
getPartialCongruenceCount
getReport
getCycleCountResult
cleanUp
initialize
collectAndProcessAQPairs
getCollectDuration
getSolverDuration
getSolverRunCount
getOperationDetails
getPartialBigFactorSizes
getSmoothBigFactorSizes
getSmoothBigFactorPercentiles
getNonIntFactorPercentages
getPartialQSignCounts
getSmoothQSignCounts
getAQPairs
addMyAQPairsViaXor
getMatrixElements
isExactSquare
hashCode
equals
toString
create
isExactSquare
getMatrixElements
getAQPairs
addMyAQPairsViaXor
getAQPairs
addMyAQPairsViaXor
getMatrixElements
isExactSquare
getAllQFactors
getLargeFactorsWithOddExponent
getNumberOfLargeQFactors
getAllQFactors
getNumberOfLargeQFactors
getAllQFactors
getLargeFactorsWithOddExponent
getNumberOfLargeQFactors
toString
reset
add
add
get
getExponent
size
copyFactors
copyExponents
toString
computeReducedPrimeBase
reset
add
get
getExponent
size
copyFactors
copyExponents
toString
findSingleFactor
testRange
main
findSingleFactor
main
addToArray
getName
findSingleFactor
findSingleFactor
test
correctionLoop
main
findSingleFactor
test
createListArray
computeHypotheticalACounts
main
findSingleFactor
test
analyzeProgression
main
findSingleFactor
testRange
main
findSingleFactor
testRange
main
findSingleFactor
main
getName
findSingleFactor
findSingleFactor
main
findSingleFactor
testRange
main
testRange
main
toString
findSingleFactor
test
main
toString
findSingleFactor
testSmallK
test
main
getName
findSingleFactor
findSingleFactor
getName
findSingleFactor
findSingleFactor
lehmanOdd
lehmanEven
main
getName
createThread
run
setFinishNow
cleanUp
getPolyReport
getSieveReport
getTDivReport
getName
searchFactors
findSingleFactor
findSingleFactorInternal
computeLogPArray
createThread
killThread
logResults
getName
createThread
getName
createThread
main
lnSeriesExpansion
ln2SeriesExpansion
ln2ElementarySeriesExpansion
ln2
ln
lnSimpleReduction
lnReciprocalSimpleReduction
lnAgm
lnSimplePlusAgmReduction
ln
lnRootReduction
lnSimplePlusRootReduction
lnReciprocalSimplePlusRootReduction
test
main
expSeriesExpansion
expSimpleReduction
exp
exp
expBrent
test
main
agm
getResultMagnitude
main
gamma
gamma_v1
gamma_v2
main
pi
testPi
main
moebius
main
getInsertPosition
testSingleArg
main
test_v01
test
testCorrectness
testPerformance
testInputs
main
pow2
mulPow2
divPow2
pow
pow
nnPowJava
nnPowJavaTrunc
pow
powJavaTrunc
ithRoot
getInitialApproximation
ithRoot
main
iSqrt
iSqrt
createTestSet
testCorrectness
testCorrectness
testPerformance
main
squareRestsMod4095
squareRestsMod3553
squareRestsMod3901
squareRestsMod3937
squareRestsMod2479
squareRestsMod3841
squareRestsMod2623
squareRestsMod3161
squareRestsMod97
toHashSet
exactSqrt
sqrt
getInitialApproximation
sqrt
main
ithRoot
ithRoot_bitwise
ithRoot_Heron1
ithRoot_Heron2
computeInitialGuess
createTestSet
testCorrectness
testPerformance
main
greedyCount
main
fallingFactorial
byFactorials
simpleProduct
testSmall
testPerformance
main
standard
inverse
binomial
core
main
stirling1
absStirling1
stirling1Recurrent
stirling1byStirling2
stirling1byGF
stirling1WithMemory
stirling1WithHashedMemory
stirling2
rStirling1
stirling1Diag
nextStirling1Diag
testDiagonal
printFirstStirlings
testPerformance
main
simpleProduct
withStartResult
factorial
primeSwing
main
multinomial
getA004215
getA004215_v2
getA004215_v3
main
isQuadraticResidueModBPowN
isQuadraticResidueModBPowN_v2
getQuadraticResiduesModBPowN_testAll
getQuadraticResiduesModBPowN_testAll_v2
getQuadraticResiduesModBPowN
getBaseResidues
powerUp
isQuadraticResidueMod3PowN
getQuadraticResiduesMod3PowN_testAll
getQuadraticResiduesMod3PowN
main
main
getQuadraticResidues
getEvenQuadraticResidues
getNumberOfQuadraticResiduesMod2PowN
isQuadraticResidueMod2PowN
isQuadraticResidueMod2PowN_v1
isQuadraticResidueMod2PowN
getQuadraticResiduesMod2PowN_testAll_big
getQuadraticResiduesMod2PowN_testAll
getQuadraticResiduesMod2PowN_testAll_v2
getQuadraticResiduesMod2PowN
getQuadraticResiduesMod2PowN
getComplementOfQuadraticResiduesMod2PowN
main
powerUp
main
main
of
of
of
of
of
of
digits_fromBigDecimal2
digits_toString
digits_toString2
digits_mulTest
digits_approximate
digits_multiplier
digits_multiplier2
bitsOf
decimalToBinary
binaryToDecimal
valueOf
of
of
of
add
multiply
applyTo
digits
toString
equals
hashCode
compareTo
valueOf
of
of
of
add
multiply
applyTo
getErrorBound
digits
toString
equals
hashCode
compareTo
acoshAbs
acosh1
asinh
atanh
acoth
ChebyshevT
ChebyshevU
main
nextInt
nextLong
nextLong
add
add
subtract
multiply
multiply
multiply
multiply
divide
divide
divide
divide
frac
roundInt
ceilInt
floorInt
compare
fromDouble
fromDoubleMulPow2
bitString
test
test
main
stringToList
sum
absSum
product
get
set
addRow
getRow
getRowSum
getRowSums
toList
toString
set
safeConversion
isZero
isOne
intLength
bitLength
divideAndRemainder_v1
divideAndRemainder
mod
equals
hashCode
intValue
longValue
toBigInteger
toString
toBinaryString
createTestSet
testCorrectness
testPerformance
main
stringToList
max
add
subtract
multiply
multiply
divide
divide
abs
negate
reciprocal
normalize
expandTo
getNumerator
getDenominator
signum
floorInt
ceilInt
compareTo
compareTo
equals
equals
hashCode
byteValue
intValue
longValue
floatValue
doubleValue
toBigDecimal
toBigDecimal
toString
toString
add
getNumberOfColumns
getRows
toString
toList
set
multiply
at
degree
getHigh
getLow
add_v1
add
add_getHigh
subtract
mul63
mul64_v1
mul64
square64
mul64_getLow
spDivide
divideUnsignedLong
shiftLeft
shiftRight
and
doubleValue
toBigInteger
toString
testCorrectness
testPerformance
main
oneAsSet
getDivisors_v1
getDivisors_v2
getDivisors
getDivisorsTopDown
getDivisors
getDivisorsWithoutOneAndX
getSmallDivisors_v1
getSmallDivisors
getSmallDivisors
sumOfDivisors_v1
sumOfDivisors
sumOfDivisors
getDivisorCount
getDivisorCount
getBiggestDivisorBelowSqrtN
getBiggestDivisorBelowSqrtN_small
getBiggestDivisorBelowSqrtN_big
getBiggestDivisorBelowSqrtN
testSumOfDivisorsForSmallIntegers
testSumOfDivisorsForFactorials
testDivisors
testSmallDivisors
testBiggestDivisorBelowSqrtN
main
run
processPrime
main
sieve
main
sieve
main
testCorrectness
testPerformance
main
get
ensurePrimeCount
ensureLimit
getInsertPosition
getPrime
fetchPrimes
processPrime
processPrime
getCount
genPGparameters
setSieveParameters
sozpg
printprms
nextp_init
twins_sieve
twinprimes_ssoz
main
countProcessors
epochTime
Bsqrt
mod
on
processPrime
processPrime
runRobinsRHTest
runLagariasRHTest
toSortedMultiset
main
getInstance
isPrime
