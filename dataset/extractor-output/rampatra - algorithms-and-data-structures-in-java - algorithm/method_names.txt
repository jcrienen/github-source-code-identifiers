titleToNumber
main
minTotalDistanceBrutForce
minTotalDistance
main
reverse
main
findKthLargest
heapSortUntilK
maxHeapify
buildMaxHeap
findKthLargestUsingPriorityQueue
swap
main
topKFrequent
main
print
detectCycle
addOne
reverse
main
maxProfit
maxProfitSimplified
main
majorityElement
main
multiply
main
merge
isOverlap
compare
main
generatePascalsTriangle
main
findShortestDistance
main
canPlaceFlowers
main
mergeSimple
merge
main
mySqrt
main
myPowNaive
myPow
main
nextGreatestLetter
main
searchInsert
main
rotate
reverse
main
knows
findCelebrity
main
triangleNumberUsingBinarySearch
binarySearch
triangleNumber
main
insert
main
findShortestDistance
main
numIslands
drownTheIsland
main
maxProfit
main
removeDuplicatesInSortedArray
main
minCost
main
minCost
main
maxSubArray
maxSubArrayDivideAndConquer
maxSubArrayDivideAndConquer
main
maxProduct
main
getFlattenedList
next
hasNext
main
nestedSum
main
nestedSum
nestedSum
main
isInteger
getInteger
setInteger
getList
add
isValidTree
hasCycle
isValidTreeUsingUnionFind
findRoot
main
ladderLength
ladderLengthOptimized
main
findLadders
dfs
main
insert
longestWord
longestWord
main
findAllAnagramsInTextNaive
findAllAnagramsInText
main
canConstruct
main
isPalindrome
isAlphaNumeric
main
longestCommonPrefix
main
reverseStr
reverse
main
findFirstUniqueCharacterInString
main
strStr
main
reverseVowels
isVowel
main
compress
main
countAndSay
main
evalRPN
main
exclusiveTime
main
lengthOfLongestSubstring
lengthOfLongestSubstringNoMap
main
minWindow
main
lengthOfLongestSubstringKDistinct
main
findShortestDistance
findShortestDistance
getWordsToIndexesMap
main
put
get
remove
main
add
remove
contains
main
add
find
main
findRepeatedDnaSequences
computeHash
main
containsDuplicates
containsDuplicatesWithoutSet
main
isIsomorphic
isIsomorphicWithoutMaps
main
get
put
main
inc
dec
getMaxKey
getMinKey
main
removeEldestEntry
get
put
main
hit
getHits
main
insert
remove
getRandom
main
upsideDownBinaryTreeUsingStack
upsideDownBinaryTree
main
closestKValues
inOrder
closestKValuesOptimized
inOrder
main
findLeavesOfBinaryTree
findLeavesOfBinaryTree
main
findSecondMinimumValueIterative
findSecondMinimumValue
findSecondMinimumValue
main
serialize
removeExtraNulls
deserialize
main
toString
zigzagLevelOrder
main
closestValue
closestValue
main
isSymmetric
isSymmetric
isSymmetricIterative
main
isLoopPresent
isLoopPresentUsingHashMap
main
segregateEvenOddNumbers
main
partition
quickSort
quickSort
getLastNode
main
isPalindrome
isPalindromeRecursive
main
getLength
inOrder
sortedDLLToBBST
sortedDLLToBBST
main
flatten
printList
main
insert
main
reverseList
main
mergeSort
divideInTwoHalves
mergeTwoSortedLists
main
getRandomNode
main
deleteMnodesAfterNnodes
main
swap
main
getIntersectionNode
main
getIntersectionList
main
removeMiddlePointsFromLineSegments
main
toString
compareTo
detectAndRemoveLoop
main
push
pop
getMiddleElement
print
main
mergeSort
divideInTwoHalves
mergeTwoSortedLists
main
moveLastNodeToFirst
main
removeEldestEntry
add
get
print
main
reverseLinkedListInGroups
main
deleteNode
main
pairWiseSwap
main
deleteAlternateNodes
deleteAlternateNodes
main
isIdentical
main
maximumSumLinkedList
main
reverseAlternateNodesAndAppendAtEnd
main
divideIntoTwoHalves
main
rotateCounterClockwise
rotateClockwise
main
mergeTwoLinkedListAlternatively
main
getIntersectionAndUnion
main
clone
main
mergeTwoSortedLists
mergeTwoSortedLists
main
deleteLesserNodes
deleteLesserNodes
main
swapKthNodeFromStartWithKthNodeFromEnd
main
sort
main
sort
main
findTripletWithSumEqualsTo
main
getMiddleNode
main
removeDuplicates
removeDuplicatesFromUnsortedList
main
reverseLinkedListInAltGroups
main
insert
main
addWithNode1LSD
addWithNode1MSD
printSumWithNode1LSD
convertToInt
main
getNthNodeFromLast
main
reverseList
recursiveReverseList
printListInReverse
main
printAllPermutations
main
getStringPermutationsCount
main
printAllPermutations
main
printUppercaseLowercasePermutations
isNumber
main
isValidMove
isValidKnightTour
printKnightTour
print2DMatrix
main
isValidMove
isValidPath
printMazePath
print2DMatrix
main
isLittleEndian
main
getNextHigherNumberWithSameSetBits
main
isPowerOf2
isPowerOf2UsingANDoperator
isPowerOf2FromRandomClass
main
isMultipleOf3
main
getNmoduloD
main
getNumberFromSubBits
main
nextHigherPowerOf2
nextHigherPowerOf2_V2
nextHigherPowerOf2_V1
nextLowerPowerOf2
main
main
countSetBitsFromMinusNtoN
main
add
add
addNaive
addByFlip
main
countSetBits
countSetBits
main
getNumberByReversingBits
getNumberByReversingBitsV1
getNumberByReversingBitsV2
main
isPowerOf4
main
isEvenParity
isEvenParityByCountingSetBits
main
swapEvenOddBits
swapEvenOddBits_V1
swapBitRangeInNumber
main
isOppositeSign
main
getNumberByFlippingBits
getNumberByFlippingBits_V1
main
multiplyWith3point5
multiplyWith3point5_V1
multiplyWith7
multiplyWith8
main
abs
main
getBitsToConvertAToB
main
getRightmostSetBitPosition
unsetRightmostSetBit
main
toBinaryString
main
add
add_V1
main
change1To0InArray
main
getElementOccurringOnceInElementsRepeatedThreeTimes
main
main
leftRotateBits
rightRotateBits
main
findBinaryGap
findMaxNoOf0sBetweenTwo1s
main
min
getSmallest
getSmallest_V1
main
compareStringIgnoreCase
main
getTwoNonRepeatingElementsInArray
main
getMinWithoutBranching
getMaxWithoutBranching
main
maxInAllSubArraysOfSizeKNaive
maxInAllSubArraysOfSizeK
main
getProductArray
main
getInversionCountNaiveApproach
getInversionCount
mergeSort
merge
main
getEquilibriumIndex
main
numberOfDistinctPairs
main
getTwoElementsWhoseSumIsClosestToZero
main
getOccurrencesInSortedArray
getFirstIndexOf
getLastIndexOf
main
segregate0s1sAnd2s
swap
main
getMedianOfStream
printMedianOfStream
compare
main
countDivisorsInRange
main
getSmallerElementsCountOnRHSNaive
main
findMissingAndRepeatingElements
main
areConsecutiveElements
areConsecutiveElementsInO1Space
main
findCandidate
majorityElement
main
getSymmetricDifference
main
getRandom
f
main
push
pop
printStack
main
segregate0sAnd1s
main
getMinimumDistanceBetweenTwoNos
main
nextGreaterElements
main
median
median
main
getSmallestAndSecondSmallest
main
pivotedBinarySearch
findPivotIndex
main
getAllLeaders
main
getLongestBitonicSubArrayLength
main
maxDiff
main
findNthSmallestNumber
main
maximumSumNonAdjacentSubSequence
main
printSortedSubSequenceOfSize3
main
rotateNaiveApproach
rotateReversal
rotateGCD
gcd
main
getMaxMinWithMinComparisons
main
getKthLargestElementNaive
getKthLargestElement
main
printMatrixInSpiral
main
findFixedPoint
main
getTwoRepeatingElements
findTwoRepeatingElements
main
getKRandomNumbers
main
linearSearchNaive
linearSearch
print2DMatrix
main
getIntersectionAndUnionOf2SortedArrays
main
findDuplicatesInArrayWithinKDistance
main
findLengthOfLongestConsecutiveSubsequence
main
findNextLargerNumber
swap
main
moveElementsToEnd
merge
main
maxSpan
main
getUnsortedSubArray
main
isMajorityElement
getFirstIndexOf
main
printMaximumSizeSquareSubMatrix
main
reverse
reverseRecursive
main
getTripletOfSum
main
findDuplicatesInArray
main
arrangeArrayOfNosToFormBiggestNo
main
modifyBooleanMatrix
print2DMatrix
main
flattenArray
main
numberOccurringOddTimes
main
pairSum
pairSum
main
haveAcquaintance
findCelebrity
main
getLargestProductContiguousSubArray
main
pairDiff
pairDiff
main
findIndexOfRotationPoint
findIndexOfRotationPoint
main
printSubArrayOfSum
main
getKLargestElements
main
smallestMissingNumber
main
segregateEvenAndOddNos
main
rotateMatrixBy90DegreesRight
print2DMatrix
main
isSubsetOfArray
main
getLargestSumOfContiguousSubArray
getLargestSumOfContiguousSubArrayWhenAllNosNegative
main
missingNumber
missingNumberUsingXOR
main
getMaxDiffWithLargerElementAfterSmallerElement
main
getMinimumJumpsToReachEndNaive
main
getMaxRectangleSizeOf1s
main
getLongestIncreasingSubSequenceLength
main
getFirstKFibonacciNumbers
main
getName
getCity
toString
getTrader
getYear
getValue
toString
getTransactionsIn2011SortedByValue
findUniqueCities
getAllTradersFromCambridgeAndSortByName
getAllTraderNamesAndSortByName
areAnyTradersFromMilan
getAllTransValuesFromTradersInCambridge
findHighestTransactionValue
getSmallestTransaction
main
countTotalIngredientsInAllDishes
main
getName
setName
getCalories
setCalories
getIngredients
setIngredients
testScopeOfLambda
main
accept
getCurrentTimestampFromInstant
addTwoDays
main
getIndex
setIndex
getPreviousHash
setPreviousHash
getTimestamp
setTimestamp
getData
setData
getHash
setHash
getNonce
setNonce
toString
getMessageType
getLatestBlock
getBlockchain
aMessage
withMessageType
withLatestBlock
withBlockchain
build
startServer
stopServer
getLatestBlockFromPeers
sendMessageToPeers
mine
getBlockchain
setBlockchain
getPort
toString
getBlocks
getSize
getLatestBlock
addBlock
mine
isValidChain
getGenesisBlock
getNextBlock
isValidNextBlock
isValidHashDifficulty
calculateHashForBlock
bytesToHex
toString
run
handleMessage
sendMessage
handleLatestBlock
handleBlockchain
addPeer
removePeer
removePeer
removeAllPeers
getPeer
getPeers
showPeers
showPeersWithBlockchain
main
run
main
run
run
printNameUsingMultipleThreads
main
produce
consume
isFull
isEmpty
main
main
run
produce
consume
main
partition
quickSort
quickSort
main
bubbleSort
swap
main
sort
reverse
main
mergeSort
merge
main
heapSort
maxHeapify
buildMaxHeap
swap
main
wiggleSortEasyWay
swap
main
selectionSort
swap
main
isSorted
main
mergeSort
mergeSort
merge
main
removeExtraSpaces
main
isMatch
main
keepOnlyKConsecutiveLetters
main
removeDuplicatesAndArrangeLettersLexicographically
removeDuplicatesAndArrangeLettersLexicographically_Java8
main
isStringRotation
main
getStringFromInteger
getStringSize
main
getIntegerFromString
main
compress
main
isStringPalindromeByChangingOneChar
main
isSubString
main
withoutString
main
printAllSubStrings
printAllSubStringsRecursive
main
printAnagramsTogether
main
printAnagramsTogether
main
main
isWellFormed
readFile
main
push
pop
peek
isEmpty
getMaxRectangleArea
main
put
put
preOrder
preOrder
inOrder
inOrder
postOrder
postOrder
breadthFirstTraversal
printLevel
delete
delete
deleteChildren
height
height
size
size
isEmpty
diameter
diameter
width
width
printValue
main
add
remove
element
size
isEmpty
print
addEdge
hasPathDFS
hasPathDFS
hasPathBFS
hasPathBFS
print
main
maxHeapify
buildMaxHeap
insert
findMax
extractMax
getSize
getHeap
printHeap
swap
main
add
remove
element
size
isEmpty
print
add
add
addFirst
addLast
clear
clone
contains
get
getFirst
getLast
remove
remove
removeItem
set
size
printList
printList
getLinkedList
getPredecessorNode
getPredecessorNode
getNode
getNode
isLinkedListEmpty
isElementIndex
isPositionIndex
add
add
addFirst
addLast
clear
clone
contains
get
getFirst
getLast
printList
remove
remove
removeItem
set
size
push
pop
peek
size
isEmpty
print
add
add
addFirst
addLast
clear
clone
contains
get
getFirst
getLast
remove
remove
removeItem
set
size
printList
printList
getLinkedList
getPredecessorNode
getPredecessorNode
getNode
getNode
isLinkedListEmpty
isElementIndex
isPositionIndex
minHeapify
buildMinHeap
insert
findMin
extractMin
getSize
getHeap
printHeap
swap
main
equals
push
pop
peek
size
print
isEmpty
add
add
addFirst
addLast
clear
clone
contains
get
getFirst
getLast
remove
remove
removeItem
set
size
printList
printList
getLinkedList
getPredecessorNode
getPredecessorNode
getNode
getNode
isLinkedListEmpty
isElementIndex
isPositionIndex
insert
search
main
put
put
min
min
printList
leastCommonAncestor
leastCommonAncestor
main
toString
findSwappedNodes
traverseInOrder
main
getSecondSmallestNode
main
isHeightBalanced
isHeightBalanced
main
isBST
isBST
isBST
main
constructTreeWithInOrderAndPreOrder
main
doubleTree
main
inOrder
inOrderWithoutStackAndRecursion
main
spiralTraversal
spiralTraversal
spiralTraversalUsingStacks
main
inOrderUsingStack
main
rootToLeafPaths
rootToLeafPaths
rootToLeafPaths
rootToLeafPathsSum
main
toString
connectNodes
main
countLeafNodes
main
breadthFirstTraversalUsingQueue
breadthFirstTraversalUsingQueue
printValue
breadthFirstTraversalUsingQueueIterative
main
toString
findLCA
main
mirror
main
treeToList
treeToList
addToList
main
isChildrenSum
toChildrenSum
increment
main
isIdentical
main
getRandomNode
main
getReverse
isPalindrome
isNegative
reverseAddAndCheck
readFile
main
main
m
main
go
m
m
readFile
readFile
readLargeFile
readFileOldWay
main
main
replaceAll
main
main
count
mapper
reducer
printPopulation
main
main
run
main
randInt
randInt
randInts
main
finalize
main
join
append
treeToList
treeInsert
printTree
printList
main
go
goB2
main
main
go
adder
validateLatLong
main
getIPWithMaxHitCount
compare
main
get
put
main
go
go
go
go
go
go
go
go
main
reverse
reverseRecursive
reverse
reverseRecursive
main
add
main
binarySearch
binarySearch
binarySearchNonRecursive
main
search
main
JavaInheritance
main
add
getValue
getColor
getDepth
accept
accept
addChild
accept
getResult
visitNode
visitLeaf
getResult
visitNode
visitLeaf
getResult
visitNode
visitLeaf
getResult
visitNode
visitLeaf
solve
main
main
solve
main
enqueue
peek
dequeue
main
partition
printArray
main
insertionSortPart2
main
printArray
insertIntoSorted
main
printArray
insertionSort
printArray
main
insertionSortPart2
main
printArray
partition
quickSort
main
search
main
superDigit
main
lonelyInteger
main
maxXor
main
calcPalindromeSteps
main
calcHeight
main
flipBits
main
main
main
main
main
makeAnagrams
main
isSubstringInBoth
main
isPangram
main
makePalindrome
isPalindrome
main
countDeletions
main
isPowerOf2
nextLowerPowerOf2
computeWinner
main
main
getHammingWeight
bitCountToNum
countSetBitsInRange
main
swapToSort
swap
main
hourglassSum
main
minimumBribes
main
repeatedString
main
jumpingOnClouds
main
luckBalance
main
minimumAbsoluteDifference
main
main
findLCA
depth
goUpBy
main
getInOrderSuccessor
getLeftmostNode
main
findFCA
main
constructBSTWithMinimalHeight
inOrderTraversal
main
isT2SubtreeOfT1
matchTree
main
isBST
isBST
isBSTApproach2
isBSTApproach2
main
isBalanced
height
checkHeightAndBalance
isBalancedOptimized
main
addEdge
isRoutePresent
main
toString
addProjects
addDependency
getBuildOrder
getProjectsWithNoDependencies
removeDependency
main
listOfDepths
listOfDepths
printAllDepths
main
isStringRotation
isSubString
main
isOneEditAway
isOneCharacterDiffAtMax
checkForMaxOneInsertOrDeleteInS1
main
isPermutationOfPalindrome
isPermutationOfPalindromeViaBits
getIndex
toggleBitAt
main
urlify
main
hasAllUniqueCharacters
hasAllUniqueCharactersWhenStringContainsAllLowercase
main
rotateImage
main
zeroMatrix
makeRowColumnZero
printMatrix
main
compressString
main
isOnePermutationOfOther
isOnePermutationOfOtherGivenThatStringsContainOnlyAscii
main
isPalindrome
isPalindromeOptimized
main
print
sumLists
sumListsWithMostSignificantDigitAtHead
main
findLoopStartNode
main
partition
main
deleteMiddleNode
main
findIntersectingNode
main
getKthToLastElement
printKthToLastElement
main
removeDuplicatesFromUnsortedList
main
fibonacciTopDown
fibonacciBottomUp
fibonacciBottomUpOptimized
main
sortStack
printStack
main
push
pop
getLastStack
isFull
print
main
push
pop
min
minPush
minPop
main
add
remove
print
main
findLongestSequence
main
decimalFractionToBinaryString
main
hasOneSetBit
main
drawLine
main
getNoOfBitsToFlipToConvertAToB
countSetBits
getNoOfBitsToFlipToConvertAToBWithoutRightShift
main
swapBits
main
insertMIntoN
main
getNextLargerAndSmallerNumber
getNextLarger
getNextSmaller
main
