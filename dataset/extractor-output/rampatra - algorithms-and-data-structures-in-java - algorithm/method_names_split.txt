title
To
Number
main
min
Total
Distance
Brut
Force
min
Total
Distance
main
reverse
main
find
Kth
Largest
heap
Sort
Until
K
max
Heapify
build
Max
Heap
find
Kth
Largest
Using
Priority
Queue
swap
main
top
K
Frequent
main
print
detect
Cycle
add
One
reverse
main
max
Profit
max
Profit
Simplified
main
majority
Element
main
multiply
main
merge
is
Overlap
compare
main
generate
Pascals
Triangle
main
find
Shortest
Distance
main
can
Place
Flowers
main
merge
Simple
merge
main
my
Sqrt
main
my
Pow
Naive
my
Pow
main
next
Greatest
Letter
main
search
Insert
main
rotate
reverse
main
knows
find
Celebrity
main
triangle
Number
Using
Binary
Search
binary
Search
triangle
Number
main
insert
main
find
Shortest
Distance
main
num
Islands
drown
The
Island
main
max
Profit
main
remove
Duplicates
In
Sorted
Array
main
min
Cost
main
min
Cost
main
max
Sub
Array
max
Sub
Array
Divide
And
Conquer
max
Sub
Array
Divide
And
Conquer
main
max
Product
main
get
Flattened
List
next
has
Next
main
nested
Sum
main
nested
Sum
nested
Sum
main
is
Integer
get
Integer
set
Integer
get
List
add
is
Valid
Tree
has
Cycle
is
Valid
Tree
Using
Union
Find
find
Root
main
ladder
Length
ladder
Length
Optimized
main
find
Ladders
dfs
main
insert
longest
Word
longest
Word
main
find
All
Anagrams
In
Text
Naive
find
All
Anagrams
In
Text
main
can
Construct
main
is
Palindrome
is
Alpha
Numeric
main
longest
Common
Prefix
main
reverse
Str
reverse
main
find
First
Unique
Character
In
String
main
str
Str
main
reverse
Vowels
is
Vowel
main
compress
main
count
And
Say
main
eval
RPN
main
exclusive
Time
main
length
Of
Longest
Substring
length
Of
Longest
Substring
No
Map
main
min
Window
main
length
Of
Longest
Substring
K
Distinct
main
find
Shortest
Distance
find
Shortest
Distance
get
Words
To
Indexes
Map
main
put
get
remove
main
add
remove
contains
main
add
find
main
find
Repeated
Dna
Sequences
compute
Hash
main
contains
Duplicates
contains
Duplicates
Without
Set
main
is
Isomorphic
is
Isomorphic
Without
Maps
main
get
put
main
inc
dec
get
Max
Key
get
Min
Key
main
remove
Eldest
Entry
get
put
main
hit
get
Hits
main
insert
remove
get
Random
main
upside
Down
Binary
Tree
Using
Stack
upside
Down
Binary
Tree
main
closest
K
Values
in
Order
closest
K
Values
Optimized
in
Order
main
find
Leaves
Of
Binary
Tree
find
Leaves
Of
Binary
Tree
main
find
Second
Minimum
Value
Iterative
find
Second
Minimum
Value
find
Second
Minimum
Value
main
serialize
remove
Extra
Nulls
deserialize
main
to
String
zigzag
Level
Order
main
closest
Value
closest
Value
main
is
Symmetric
is
Symmetric
is
Symmetric
Iterative
main
is
Loop
Present
is
Loop
Present
Using
Hash
Map
main
segregate
Even
Odd
Numbers
main
partition
quick
Sort
quick
Sort
get
Last
Node
main
is
Palindrome
is
Palindrome
Recursive
main
get
Length
in
Order
sorted
DLL
To
BBST
sorted
DLL
To
BBST
main
flatten
print
List
main
insert
main
reverse
List
main
merge
Sort
divide
In
Two
Halves
merge
Two
Sorted
Lists
main
get
Random
Node
main
delete
Mnodes
After
Nnodes
main
swap
main
get
Intersection
Node
main
get
Intersection
List
main
remove
Middle
Points
From
Line
Segments
main
to
String
compare
To
detect
And
Remove
Loop
main
push
pop
get
Middle
Element
print
main
merge
Sort
divide
In
Two
Halves
merge
Two
Sorted
Lists
main
move
Last
Node
To
First
main
remove
Eldest
Entry
add
get
print
main
reverse
Linked
List
In
Groups
main
delete
Node
main
pair
Wise
Swap
main
delete
Alternate
Nodes
delete
Alternate
Nodes
main
is
Identical
main
maximum
Sum
Linked
List
main
reverse
Alternate
Nodes
And
Append
At
End
main
divide
Into
Two
Halves
main
rotate
Counter
Clockwise
rotate
Clockwise
main
merge
Two
Linked
List
Alternatively
main
get
Intersection
And
Union
main
clone
main
merge
Two
Sorted
Lists
merge
Two
Sorted
Lists
main
delete
Lesser
Nodes
delete
Lesser
Nodes
main
swap
Kth
Node
From
Start
With
Kth
Node
From
End
main
sort
main
sort
main
find
Triplet
With
Sum
Equals
To
main
get
Middle
Node
main
remove
Duplicates
remove
Duplicates
From
Unsorted
List
main
reverse
Linked
List
In
Alt
Groups
main
insert
main
add
With
Node1LSD
add
With
Node1MSD
print
Sum
With
Node1LSD
convert
To
Int
main
get
Nth
Node
From
Last
main
reverse
List
recursive
Reverse
List
print
List
In
Reverse
main
print
All
Permutations
main
get
String
Permutations
Count
main
print
All
Permutations
main
print
Uppercase
Lowercase
Permutations
is
Number
main
is
Valid
Move
is
Valid
Knight
Tour
print
Knight
Tour
print2D
Matrix
main
is
Valid
Move
is
Valid
Path
print
Maze
Path
print2D
Matrix
main
is
Little
Endian
main
get
Next
Higher
Number
With
Same
Set
Bits
main
is
Power
Of2
is
Power
Of2Using
AN
Doperator
is
Power
Of2From
Random
Class
main
is
Multiple
Of3
main
get
Nmodulo
D
main
get
Number
From
Sub
Bits
main
next
Higher
Power
Of2
next
Higher
Power
Of2
V2
next
Higher
Power
Of2
V1
next
Lower
Power
Of2
main
main
count
Set
Bits
From
Minus
Nto
N
main
add
add
add
Naive
add
By
Flip
main
count
Set
Bits
count
Set
Bits
main
get
Number
By
Reversing
Bits
get
Number
By
Reversing
Bits
V1
get
Number
By
Reversing
Bits
V2
main
is
Power
Of4
main
is
Even
Parity
is
Even
Parity
By
Counting
Set
Bits
main
swap
Even
Odd
Bits
swap
Even
Odd
Bits
V1
swap
Bit
Range
In
Number
main
is
Opposite
Sign
main
get
Number
By
Flipping
Bits
get
Number
By
Flipping
Bits
V1
main
multiply
With3point5
multiply
With3point5
V1
multiply
With7
multiply
With8
main
abs
main
get
Bits
To
Convert
A
To
B
main
get
Rightmost
Set
Bit
Position
unset
Rightmost
Set
Bit
main
to
Binary
String
main
add
add
V1
main
change1To0In
Array
main
get
Element
Occurring
Once
In
Elements
Repeated
Three
Times
main
main
left
Rotate
Bits
right
Rotate
Bits
main
find
Binary
Gap
find
Max
No
Of0s
Between
Two1s
main
min
get
Smallest
get
Smallest
V1
main
compare
String
Ignore
Case
main
get
Two
Non
Repeating
Elements
In
Array
main
get
Min
Without
Branching
get
Max
Without
Branching
main
max
In
All
Sub
Arrays
Of
Size
K
Naive
max
In
All
Sub
Arrays
Of
Size
K
main
get
Product
Array
main
get
Inversion
Count
Naive
Approach
get
Inversion
Count
merge
Sort
merge
main
get
Equilibrium
Index
main
number
Of
Distinct
Pairs
main
get
Two
Elements
Whose
Sum
Is
Closest
To
Zero
main
get
Occurrences
In
Sorted
Array
get
First
Index
Of
get
Last
Index
Of
main
segregate0s1s
And2s
swap
main
get
Median
Of
Stream
print
Median
Of
Stream
compare
main
count
Divisors
In
Range
main
get
Smaller
Elements
Count
On
RHS
Naive
main
find
Missing
And
Repeating
Elements
main
are
Consecutive
Elements
are
Consecutive
Elements
In
O1Space
main
find
Candidate
majority
Element
main
get
Symmetric
Difference
main
get
Random
f
main
push
pop
print
Stack
main
segregate0s
And1s
main
get
Minimum
Distance
Between
Two
Nos
main
next
Greater
Elements
main
median
median
main
get
Smallest
And
Second
Smallest
main
pivoted
Binary
Search
find
Pivot
Index
main
get
All
Leaders
main
get
Longest
Bitonic
Sub
Array
Length
main
max
Diff
main
find
Nth
Smallest
Number
main
maximum
Sum
Non
Adjacent
Sub
Sequence
main
print
Sorted
Sub
Sequence
Of
Size3
main
rotate
Naive
Approach
rotate
Reversal
rotate
GCD
gcd
main
get
Max
Min
With
Min
Comparisons
main
get
Kth
Largest
Element
Naive
get
Kth
Largest
Element
main
print
Matrix
In
Spiral
main
find
Fixed
Point
main
get
Two
Repeating
Elements
find
Two
Repeating
Elements
main
get
K
Random
Numbers
main
linear
Search
Naive
linear
Search
print2D
Matrix
main
get
Intersection
And
Union
Of2Sorted
Arrays
main
find
Duplicates
In
Array
Within
K
Distance
main
find
Length
Of
Longest
Consecutive
Subsequence
main
find
Next
Larger
Number
swap
main
move
Elements
To
End
merge
main
max
Span
main
get
Unsorted
Sub
Array
main
is
Majority
Element
get
First
Index
Of
main
print
Maximum
Size
Square
Sub
Matrix
main
reverse
reverse
Recursive
main
get
Triplet
Of
Sum
main
find
Duplicates
In
Array
main
arrange
Array
Of
Nos
To
Form
Biggest
No
main
modify
Boolean
Matrix
print2D
Matrix
main
flatten
Array
main
number
Occurring
Odd
Times
main
pair
Sum
pair
Sum
main
have
Acquaintance
find
Celebrity
main
get
Largest
Product
Contiguous
Sub
Array
main
pair
Diff
pair
Diff
main
find
Index
Of
Rotation
Point
find
Index
Of
Rotation
Point
main
print
Sub
Array
Of
Sum
main
get
K
Largest
Elements
main
smallest
Missing
Number
main
segregate
Even
And
Odd
Nos
main
rotate
Matrix
By90Degrees
Right
print2D
Matrix
main
is
Subset
Of
Array
main
get
Largest
Sum
Of
Contiguous
Sub
Array
get
Largest
Sum
Of
Contiguous
Sub
Array
When
All
Nos
Negative
main
missing
Number
missing
Number
Using
XOR
main
get
Max
Diff
With
Larger
Element
After
Smaller
Element
main
get
Minimum
Jumps
To
Reach
End
Naive
main
get
Max
Rectangle
Size
Of1s
main
get
Longest
Increasing
Sub
Sequence
Length
main
get
First
K
Fibonacci
Numbers
main
get
Name
get
City
to
String
get
Trader
get
Year
get
Value
to
String
get
Transactions
In2011Sorted
By
Value
find
Unique
Cities
get
All
Traders
From
Cambridge
And
Sort
By
Name
get
All
Trader
Names
And
Sort
By
Name
are
Any
Traders
From
Milan
get
All
Trans
Values
From
Traders
In
Cambridge
find
Highest
Transaction
Value
get
Smallest
Transaction
main
count
Total
Ingredients
In
All
Dishes
main
get
Name
set
Name
get
Calories
set
Calories
get
Ingredients
set
Ingredients
test
Scope
Of
Lambda
main
accept
get
Current
Timestamp
From
Instant
add
Two
Days
main
get
Index
set
Index
get
Previous
Hash
set
Previous
Hash
get
Timestamp
set
Timestamp
get
Data
set
Data
get
Hash
set
Hash
get
Nonce
set
Nonce
to
String
get
Message
Type
get
Latest
Block
get
Blockchain
a
Message
with
Message
Type
with
Latest
Block
with
Blockchain
build
start
Server
stop
Server
get
Latest
Block
From
Peers
send
Message
To
Peers
mine
get
Blockchain
set
Blockchain
get
Port
to
String
get
Blocks
get
Size
get
Latest
Block
add
Block
mine
is
Valid
Chain
get
Genesis
Block
get
Next
Block
is
Valid
Next
Block
is
Valid
Hash
Difficulty
calculate
Hash
For
Block
bytes
To
Hex
to
String
run
handle
Message
send
Message
handle
Latest
Block
handle
Blockchain
add
Peer
remove
Peer
remove
Peer
remove
All
Peers
get
Peer
get
Peers
show
Peers
show
Peers
With
Blockchain
main
run
main
run
run
print
Name
Using
Multiple
Threads
main
produce
consume
is
Full
is
Empty
main
main
run
produce
consume
main
partition
quick
Sort
quick
Sort
main
bubble
Sort
swap
main
sort
reverse
main
merge
Sort
merge
main
heap
Sort
max
Heapify
build
Max
Heap
swap
main
wiggle
Sort
Easy
Way
swap
main
selection
Sort
swap
main
is
Sorted
main
merge
Sort
merge
Sort
merge
main
remove
Extra
Spaces
main
is
Match
main
keep
Only
K
Consecutive
Letters
main
remove
Duplicates
And
Arrange
Letters
Lexicographically
remove
Duplicates
And
Arrange
Letters
Lexicographically
Java8
main
is
String
Rotation
main
get
String
From
Integer
get
String
Size
main
get
Integer
From
String
main
compress
main
is
String
Palindrome
By
Changing
One
Char
main
is
Sub
String
main
without
String
main
print
All
Sub
Strings
print
All
Sub
Strings
Recursive
main
print
Anagrams
Together
main
print
Anagrams
Together
main
main
is
Well
Formed
read
File
main
push
pop
peek
is
Empty
get
Max
Rectangle
Area
main
put
put
pre
Order
pre
Order
in
Order
in
Order
post
Order
post
Order
breadth
First
Traversal
print
Level
delete
delete
delete
Children
height
height
size
size
is
Empty
diameter
diameter
width
width
print
Value
main
add
remove
element
size
is
Empty
print
add
Edge
has
Path
DFS
has
Path
DFS
has
Path
BFS
has
Path
BFS
print
main
max
Heapify
build
Max
Heap
insert
find
Max
extract
Max
get
Size
get
Heap
print
Heap
swap
main
add
remove
element
size
is
Empty
print
add
add
add
First
add
Last
clear
clone
contains
get
get
First
get
Last
remove
remove
remove
Item
set
size
print
List
print
List
get
Linked
List
get
Predecessor
Node
get
Predecessor
Node
get
Node
get
Node
is
Linked
List
Empty
is
Element
Index
is
Position
Index
add
add
add
First
add
Last
clear
clone
contains
get
get
First
get
Last
print
List
remove
remove
remove
Item
set
size
push
pop
peek
size
is
Empty
print
add
add
add
First
add
Last
clear
clone
contains
get
get
First
get
Last
remove
remove
remove
Item
set
size
print
List
print
List
get
Linked
List
get
Predecessor
Node
get
Predecessor
Node
get
Node
get
Node
is
Linked
List
Empty
is
Element
Index
is
Position
Index
min
Heapify
build
Min
Heap
insert
find
Min
extract
Min
get
Size
get
Heap
print
Heap
swap
main
equals
push
pop
peek
size
print
is
Empty
add
add
add
First
add
Last
clear
clone
contains
get
get
First
get
Last
remove
remove
remove
Item
set
size
print
List
print
List
get
Linked
List
get
Predecessor
Node
get
Predecessor
Node
get
Node
get
Node
is
Linked
List
Empty
is
Element
Index
is
Position
Index
insert
search
main
put
put
min
min
print
List
least
Common
Ancestor
least
Common
Ancestor
main
to
String
find
Swapped
Nodes
traverse
In
Order
main
get
Second
Smallest
Node
main
is
Height
Balanced
is
Height
Balanced
main
is
BST
is
BST
is
BST
main
construct
Tree
With
In
Order
And
Pre
Order
main
double
Tree
main
in
Order
in
Order
Without
Stack
And
Recursion
main
spiral
Traversal
spiral
Traversal
spiral
Traversal
Using
Stacks
main
in
Order
Using
Stack
main
root
To
Leaf
Paths
root
To
Leaf
Paths
root
To
Leaf
Paths
root
To
Leaf
Paths
Sum
main
to
String
connect
Nodes
main
count
Leaf
Nodes
main
breadth
First
Traversal
Using
Queue
breadth
First
Traversal
Using
Queue
print
Value
breadth
First
Traversal
Using
Queue
Iterative
main
to
String
find
LCA
main
mirror
main
tree
To
List
tree
To
List
add
To
List
main
is
Children
Sum
to
Children
Sum
increment
main
is
Identical
main
get
Random
Node
main
get
Reverse
is
Palindrome
is
Negative
reverse
Add
And
Check
read
File
main
main
m
main
go
m
m
read
File
read
File
read
Large
File
read
File
Old
Way
main
main
replace
All
main
main
count
mapper
reducer
print
Population
main
main
run
main
rand
Int
rand
Int
rand
Ints
main
finalize
main
join
append
tree
To
List
tree
Insert
print
Tree
print
List
main
go
go
B2
main
main
go
adder
validate
Lat
Long
main
get
IP
With
Max
Hit
Count
compare
main
get
put
main
go
go
go
go
go
go
go
go
main
reverse
reverse
Recursive
reverse
reverse
Recursive
main
add
main
binary
Search
binary
Search
binary
Search
Non
Recursive
main
search
main
Java
Inheritance
main
add
get
Value
get
Color
get
Depth
accept
accept
add
Child
accept
get
Result
visit
Node
visit
Leaf
get
Result
visit
Node
visit
Leaf
get
Result
visit
Node
visit
Leaf
get
Result
visit
Node
visit
Leaf
solve
main
main
solve
main
enqueue
peek
dequeue
main
partition
print
Array
main
insertion
Sort
Part2
main
print
Array
insert
Into
Sorted
main
print
Array
insertion
Sort
print
Array
main
insertion
Sort
Part2
main
print
Array
partition
quick
Sort
main
search
main
super
Digit
main
lonely
Integer
main
max
Xor
main
calc
Palindrome
Steps
main
calc
Height
main
flip
Bits
main
main
main
main
main
make
Anagrams
main
is
Substring
In
Both
main
is
Pangram
main
make
Palindrome
is
Palindrome
main
count
Deletions
main
is
Power
Of2
next
Lower
Power
Of2
compute
Winner
main
main
get
Hamming
Weight
bit
Count
To
Num
count
Set
Bits
In
Range
main
swap
To
Sort
swap
main
hourglass
Sum
main
minimum
Bribes
main
repeated
String
main
jumping
On
Clouds
main
luck
Balance
main
minimum
Absolute
Difference
main
main
find
LCA
depth
go
Up
By
main
get
In
Order
Successor
get
Leftmost
Node
main
find
FCA
main
construct
BST
With
Minimal
Height
in
Order
Traversal
main
is
T2Subtree
Of
T1
match
Tree
main
is
BST
is
BST
is
BST
Approach2
is
BST
Approach2
main
is
Balanced
height
check
Height
And
Balance
is
Balanced
Optimized
main
add
Edge
is
Route
Present
main
to
String
add
Projects
add
Dependency
get
Build
Order
get
Projects
With
No
Dependencies
remove
Dependency
main
list
Of
Depths
list
Of
Depths
print
All
Depths
main
is
String
Rotation
is
Sub
String
main
is
One
Edit
Away
is
One
Character
Diff
At
Max
check
For
Max
One
Insert
Or
Delete
In
S1
main
is
Permutation
Of
Palindrome
is
Permutation
Of
Palindrome
Via
Bits
get
Index
toggle
Bit
At
main
urlify
main
has
All
Unique
Characters
has
All
Unique
Characters
When
String
Contains
All
Lowercase
main
rotate
Image
main
zero
Matrix
make
Row
Column
Zero
print
Matrix
main
compress
String
main
is
One
Permutation
Of
Other
is
One
Permutation
Of
Other
Given
That
Strings
Contain
Only
Ascii
main
is
Palindrome
is
Palindrome
Optimized
main
print
sum
Lists
sum
Lists
With
Most
Significant
Digit
At
Head
main
find
Loop
Start
Node
main
partition
main
delete
Middle
Node
main
find
Intersecting
Node
main
get
Kth
To
Last
Element
print
Kth
To
Last
Element
main
remove
Duplicates
From
Unsorted
List
main
fibonacci
Top
Down
fibonacci
Bottom
Up
fibonacci
Bottom
Up
Optimized
main
sort
Stack
print
Stack
main
push
pop
get
Last
Stack
is
Full
print
main
push
pop
min
min
Push
min
Pop
main
add
remove
print
main
find
Longest
Sequence
main
decimal
Fraction
To
Binary
String
main
has
One
Set
Bit
main
draw
Line
main
get
No
Of
Bits
To
Flip
To
Convert
A
To
B
count
Set
Bits
get
No
Of
Bits
To
Flip
To
Convert
A
To
B
Without
Right
Shift
main
swap
Bits
main
insert
M
Into
N
main
get
Next
Larger
And
Smaller
Number
get
Next
Larger
get
Next
Smaller
main
