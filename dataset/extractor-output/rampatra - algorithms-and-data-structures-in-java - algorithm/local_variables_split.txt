min
Distance
home
Coordinates
i
j
i
j
distance
k
reverse
pop
count
i
largest
left
Index
right
Index
i
priority
Queue
num
Count
pq
curr
slow
fast
curr
Orig
curr
Res
res
sum
carry
rem
prev
curr
next
node
valley
peak
max
Profit
i
max
Profit
i
count
maj
Elem
i
AB
Bcol
Arow
sum
Acol
merged
Intervals
last
Merged
Index
i
pascals
Triangle
first
Row
prev
Row
i
curr
Row
j
index
Word1
index
Word2
min
Distance
i
i
count
i
j
k
i
nums1
nums2
low
high
mid
res
abs
N
i
res
abs
N
low
hi
mid
low
high
mid
temp
i
j
arr
celebrity
Index
i
i
find
The
Celebrity
no
Of
Triangles
i
k
j
mid
no
Of
Triangles
i
k
j
merged
Intervals
j
i
index
Word1
index
Word2
min
Distance
i
count
i
j
profit
buy
Price
i
insert
Index
i
arr
i
last
Row
i
j
min
k
min
Cost
i
consecutive
Sum
max
Sum
i
mid
left
SA
Sum
right
SA
Sum
left
Sum
right
Sum
sum
i
i
max
Prod
max
Until
Index
min
Until
Index
i
prev
Max
Until
Index
flattened
List
weighted
Sum
unweighted
Sum
next
Level
ni
sum
i
adjacency
List
i
i
visited
i
i
node2
roots
i
i
L
transformed
To
Original
Word
Map
queue
transformed
Word
i
visited
curr
Pair
word
level
transformed
Word
i
L
ladders
transformed
To
Original
Word
Map
queue
transformed
Word
i
min
Distance
visited
connected
Nodes
curr
Pair
word
level
transformed
Word
i
c
curr
i
i
longest
Word
curr
stack
longest
Word
indexes
text
Len
pattern
Len
pattern
Chars
pattern
Sorted
sub
Text
sub
Text
Chars
sub
Text
Sorted
i
indices
text
Len
pattern
Len
text
Char
Count
In
Window
pattern
Char
Count
i
i
char
Count
i
i
chars
left
right
i
row
col
chars
len
i
temp
i
j
char
Count
i
i
i
j
chars
temp
left
right
s
sb
count
i
operand1
operand2
stack
times
stack
l
id
operation
timestamp
left
right
longest
Substring
Len
chars
In
Window
left
right
longest
Substring
Len
chars
In
Window
left
right
begin
window
Size
chars
In
Window
dict
T
i
ch
dict
Window
right
Char
right
Char
Count
left
Char
left
Char
Count
length
letter
Count
In
Window
left
right
ch
first
Char
first
Char
Count
min
Distance
i
j
words
To
Indexes
Map
i
shortest
Word
Dist
bucket
entry
bucket
entry
bucket
entry
curr
map
new
Entry
bucket
bucket
entry
curr
bucket
entry
set
num1
num2
two
Sum
III
repeated
Sequences
hash
To
String
Map
hash
Of
Sequence
pow
i
sub
String
hash
i
num
Set
i
s
To
T
Char
Map
t
To
S
Char
Map
i
ch
From
S
ch
From
T
mapped
Ch
From
S
To
T
char
Map
i
ch
From
S
ch
From
T
val
prev
Count
key
To
Evict
prev
Count
lfu
Cache
all
One
val
cache
bucket
total
Hits
i
counter
index
last
Value
randomized
Set
curr
curr
Parent
new
Root
stack
new
Root
tree
upside
Down
Tree
count
closest
K
Values
predecessors
successors
closest
K
Values
root
levels
left
Height
right
Height
height
root
min
second
Min
stack
node
ans
sb
queue
node
i
values
root
queue
i
curr
Node
left
Node
right
Node
tree
tree2
level
No
curr
Level
level
Order
Traversal
queue
tree
Node
tree
root
queue
t1
t2
root
slow
fast
map
curr
linked
List
curr
prev
end
separator
linked
List
partition
pivot
curr
curr
Next
pivot
Next
head
partition
curr
linked
List
head
curr
stack
is
Palindrome
linked
List
l
curr
left
root
right
linked
List
curr
tail
curr
head
node
linked
List
curr
temp
linked
List
middle
Node
head1
head2
slow
fast
prev
curr1
curr2
head
curr
linked
List
result
curr
i
rand
linked
List
curr1
curr2
i
i
linked
List
head
curr1
curr2
temp
linked
List
curr1
curr2
diff
Length
linked
List1
linked
List2
curr1
curr2
intersected
List
linked
List1
linked
List2
curr1
curr2
linked
List
linked
List2
is
Loop
Present
slow
fast
linked
List
top
Node
curr
stack
middle
Node
head1
head2
slow
fast
prev
curr1
curr2
head
curr
linked
List
curr
prev
linked
List
iterator
cache
curr
prev
next
i
linked
List
linked
List
next
Node
next
Of
Next
Node
linked
List
linked
List
curr1
curr2
linked
List1
linked
List2
is
List1
head
node
curr1
curr2
linked
List1
linked
List2
curr
end
curr
Next
end
Next
linked
List
middle
Node
last
Node
second
Head
linked
List
linked
Lists
clockwise
K
i
curr
end
linked
List
curr1
curr2
temp1
temp2
linked
List1
linked
List2
list2
curr1
curr2
intersection
List
union
List
linked
List1
linked
List2
first
Node
curr
clone
Head
dup
Node
linked
List
cloned
List
curr1
curr2
intersected
List
linked
List1
linked
List2
merged
List
max
curr
prev
next
linked
List
i
head
curr
slow
fast
temp
linked
List
second
List
curr
next
linked
List
count
curr
i
j
linked
List
curr1
curr2
curr3
s
linked
List1
linked
List2
linked
List3
slow
fast
linked
List
curr
curr
prev
items
In
List
linked
List
linked
List2
i
curr
prev
next
linked
List
node
curr
linked
List
sum
carry
curr1
curr2
result
List
a
b
result
List
num
base
Value
temp
linked
List1
linked
List2
slow
fast
i
linked
List
linked
List2
linked
List3
curr
prev
next
next
Node
new
Head
linked
List
i
len
i
next
I
next
J
k
tour
x
Moves
y
Moves
i
j
next
I
next
J
k
x
Moves
y
Moves
path
i
j
left
Pattern
right
Pattern
count
odd
Count
even
Count
p
c
c
i
p
n
carry
carry
sum
c
x
LSB
y
LSB
mask
count
i
count
in
n
m
reverse
Num
i
no
Of
Bits
reverse
zero
Bit
Count
parity
set
Bits
Count
even
Bits
odd
Bits
i
even
Bit
odd
Bit
xor
set1
set2
xor
mask
position
sb
i
result
i
sum
j
v1
v2
gap
max
Gap
c
n1
n2
min
i
c1
c2
xor
set
Bit
x
y
i
i
max
Elements
k
Elements
i
max
Heap
i
j
result
deque
prod
i
temp
i
count
i
j
x
y
len
A
len
B
k
sorted
Array
i
j
total
Sum
left
Sum
i
i
num
Set
pair
Set
i
pair
min
Diff
n1
n2
i
j
first
Index
mid
mid
low
mid
high
temp
ar
m
max
Heap
min
Heap
i
b
a
result
i
i
min
max
visited
Array
i
i
min
max
i
i
candidate
count
i
candidate
count
i
index
res
i
j
random
result
in
i
i
pop
pop
two
Stack
i
j
ar
start
Index
end
Index
min
Diff
i
i
stack
pop
ar
l
l1
l2
m1
m2
smallest
second
Smallest
i
pivot
mid
i
j
leaders
len
bitonic
Length
increasing
Sequence
decreasing
Sequence
i
i
i
max
Diff
left
Min
right
Max
i
i
i
j
temp
last
Bigger
i
incl
excl
prev
Incl
i
len
min
max
smaller
larger
i
i
i
temp
i
j
gcd
temp
i
j
p
ar
min
max
i
max
Heap
ar
row
col
r
c
x
i
j
i
j
i
j
i
j
low
high
mid
xor
right
Most
Set
Bit
x
y
i
i
i
i
repeating
Elements
i
j
i
reservoir
rand
stream
x
i
j
i
j
ar
length
x
y
intersection
union
i
j
a1
a2
result
index
duplicates
hash
Set
i
longest
Subseq
Count
subseq
Count
curr
Elem
num
Set
str
len
a
min
Index
i
i
j
builder
k
temp
i
j
i
j
k
m
Plus
N
n
largest
Span
i
j
start
end
min
max
unsorted
Array
i
i
i
i
i
i
j
l
start
Index
mid
size
max
I
max
J
max
Sub
Matrix
Size
aux
Matrix
i
j
i
j
i
j
i
j
ar
ar1
temp
i
j
temp
ar
len
i
j
k
duplicates
i
j
row
Flag
col
Flag
i
j
i
j
j
i
i
j
ar
flattened
Array
res
i
len
i
j
i
possible
Celebrities
i
j
first
Person
second
Person
len
i
j
i
mid
curr
Sum
start
Index
i
k
Elements
min
Heap
i
mid
i
j
ar
ar1
rows
columns
rotated
Matrix
i
j
i
j
ar
i
j
max
Sum
max
Sum
Till
Index
i
max
Sum
max
Sum
Till
Index
i
sum
array
Sum
i
n
XOR
array
XOR
i
i
min
Element
max
Diff
i
min
Jumps
i
jumps
ar
area
max
Area
hist
row
col
len
max
Lis
Length
lis
i
i
j
i
fib
i
ingredients
dishes
l
now
after
Two
Days
sb
message
peers
client
out
latest
Block
sb
previous
Block
next
Block
list
Iterator
timestamp
nonce
data
hash
index
timestamp
nonce
hash
next
Block
Hash
i
digest
encodedhash
hex
String
i
hex
sb
message
type
latest
Block
With
Current
Peer
peer
peer
iterator
iterator
peer
i
i
menu
Choice
peer
Index
data
s
blockchain
p
obj1
obj2
thread1
thread2
thread
MX
Bean
deadlock
i
i
print
First
Name
print
Last
Name
first
Thread
second
Thread
obj
producer
Task
i
consumer
Task
i
producer
consumer
r
i
t1
t2
t3
executor
Service
producer
Task
i
consumer
Task
i
pivot
temp
i
partition
ar
i
j
temp
ar
max
Index
unsorted
Index
j
temp
i
ar
x
y
len
A
len
B
k
sorted
Array
i
j
ar
i
largest
left
Index
right
Index
i
ar
i
ar
ar1
ar2
ar3
min
Index
i
j
temp
ar
i
is
Ascending
mid
k
i
j
i
arr
c
j
i
text
Index
pattern
Index
sb
count
i
char
Set
chars
c1
c2
l1
l2
i
j
k
is
Negative
size
chars
rem
i
i
number
digit
ch
weight
is
Negative
i
sb
letter
Count
i
diff
Count
i
j
c1
c2
l1
l2
i
j
original
base
Len
remove
Len
sb
i
j
i
j
i
hash
Map
tree
Set
i
space
Removed
Str
chars
indexes
anagrams
i
in
strings
s
hash
Map
i
chars
indexes
i
k1
k2
in
stack
queue
single
Linked
List
double
Linked
List
circular
Single
Linked
List
input
input
item
index
item
index
item
index
len
stack
i
char
At
I
line
item
stack
area
max
Area
curr
Max
Index
i
new
Node
parent
Node
height
level
diameter
level
Width
bt
item
count
node
node
node
adj
Node
s
d
visited
s
d
visited
to
Visit
node
visited
iterator
node
graph
largest
left
Index
right
Index
i
i
parent
Index
min
i
Max
i
b
temp
a
max
Heap
new
Node
curr
node
At
Prev
Index
new
Node
new
Node
node
node
next
item
last
Node
prev
Node
del
Node
last
Node
prev
Node
last
Node
node
curr
linked
List
curr
prev
curr
curr
i
curr
new
Node
curr
node
At
Prev
Index
new
Node
new
Node
node
next
item
prev
Node
del
Node
prev
Node
node
curr
linked
List
curr
prev
curr
curr
i
curr
min
Index
left
Index
right
Index
i
i
parent
Index
min
i
Max
i
b
temp
a
min
Heap
graph
Node
item
count
node
node
new
Node
curr
prev
Node
next
Node
new
Node
new
Node
node
next
item
prev
Node
next
Node
del
Node
prev
Node
next
Node
node
curr
linked
List
curr
curr
i
curr
c
curr
i
curr
i
trie
new
Node
current
bst
in
Order
Traversal
first
Swapped
Node
second
Swapped
Node
plausible
Swapped
Node
i
tree
Root
curr
tree
Root
bst
left
right
left
right
binary
Search
Tree
binary
Tree
i
new
Node
bt
curr
pre
bst
stack1
stack2
left
Child
right
Child
right
Child
left
Child
bt
stack
curr
top
bst
path
List
i
i
sum
i
bt
queue
all
Nodes
connected
Nodes
At
Level
node
tree
Root
bt
queue
q
node
bt
left
right
tree
Root
temp
Node
bt
a
List
b
List
a
List
Last
b
List
Last
bst
left
Child
Value
right
Child
Value
node
Value
left
Child
Value
right
Child
Value
diff
bt
bst
random
Num
tree
Root
additions
original
is
Negative
reverse
line
result
list
iterator
i
hash
Map
iterator1
entry
lines
data
result
line
builder
current
Line
paragraph
iterator
sentences
counter
last
Index
first
Index
sentence
country
To
Population
Map
persons
my
URL
executor
Service
start
i
my
URL
Connection
user
Agent
buffered
Reader
line
content
diff
r
diff
random
random
rand
Int
rand
Ints
i
j
s1
s2
a
Last
b
Last
a
List
b
List
current
root
head
n
b2
size
regex
coords
compiled
Pattern2
matcher2
in
t
in
ar
i
hash
Map
i
input
ip
list
input
List
entry
entry
map
With
Timestamp
timestamp1
timestamp2
timestamp3
b
s
l
f
len
char
Array
rev
Char
Array
i
c
rev
rev
List
i
item
Recursive
Warmup
list1
list2
list3
string
Array
List
mid
low
high
mid
low
high
mid
s
num
Of
Nodes
node
Values
node
Colors
parent
To
Child
Map
child
To
Parent
Map
i
i
i
parent
Index
child
Index
children
nodes
i
depth
parent
root
vis1
vis2
vis3
res1
res2
res3
sc
n
s
i
input
compare
i
magazine
Words
note
Words
c
i
i
scanner
m
n
s
queue
scan
n
i
operation
pivot
j
ar
Copy
i
i
in
n
ar
i
c
i
V
j
in
s
ar
i
V
i
in
s
ar
i
i
value
j
in
n
ar
i
i
V
j
in
s
ar
i
pivot
temp
i
j
p
i
in
n
ar
i
in
search
Val
arr
Size
arr
next
next
split

a
i
sum
num
i
buffered
Writer
nk
n
k
result
map
in
res

a
size

a

a
item
next
next
split

a
i
res
i
j
in
res

l

r
steps
length
a
b
i
j
in
t
s
i
i
h
i
in
t
n
i
i
in
t
in
ar
i
in
n
res
i
in
n
grid
grid
i
i
j
grid
i
in
t
a0
R
C
G
G
i
r
c
P
P
i
grid
i
j
pattern
i
j
G
i
G
j
P
i
P
j
in
h
m
time
In
Words
words
i
j
c
s1
s2
alphabets
i
in
t
input
i
i
c
alphabets
i
i
in
s
index
l
i
sb
str
l
i
j
in
t
s
i
i
count
index
i
in
t
input
i
i
p
louise
Turn
in
t
in
ar
i
i
sb
br
T
temp
A
B
bits
count
count
b
x
count
i
in
t
in
ar
i
swaps
i
swap
Index
j
temp
buffered
Writer
n
a
a
Items
i
a
Item
result
max
Sum
hourglass
Sum
i
j
buffered
Writer
arr
i
arr
Row
Items
j
arr
Item
result
bribes
i
j
t
t
Itr
n
q
q
Items
i
q
Item
extra
Letters
total
Count
count
string
Length
i
i
buffered
Writer
s
n
result
jumps
i
buffered
Writer
n
c
c
Items
i
c
Item
result
lucks
lucks
For
Important
Contests
i
i
buffered
Writer
nk
n
k
contests
i
contests
Row
Items
j
contests
Item
result
min
Diff
diff
i
buffered
Writer
n
arr
arr
Items
i
arr
Item
result
in
t
depth
A
depth
B
shallow
Node
deeper
Node
d
c
tree
Root
curr
curr
tree
Root
left
right
tree
Root
mid
root
root
tree
Root
tree
Root2
tree
Root3
tree
Root4
tree
Root
is
Balanced
left
Height
right
Height
tree
Root
n1
n2
queue
visited
n1
n2
n
g
p1
p2
projects
Built
next
Projects
To
Build
un
Built
Projects
With
Zero
Dependencies
build
Order
list
Of
Depths
list
Of
Nodes
At
Current
Depth
list
Of
Nodes
At
Previous
Depth
list
Of
Nodes
At
Depth
i
tree
Root
found
Diff
i
i
j
s1Len
s2Len
char
Counts
freq
odd
Counts
i
c
bit
Vector
index
i
a
z
chars
curr
insert
Index
char
Set
i
char
Val
checker
i
char
Value
s
rows
To
Zero
cols
To
Zero
i
j
c
r
i
j
m
compressed
Sb
count
Consecutive
i
c1
c2
chars
i
i
curr
stack
slow
fast
stack
l1
curr
carry
sum
sum
List
curr
l1
l2
slow
fast
l1
left
Partition
Head
left
Partition
Curr
right
Partition
Head
right
Partition
Curr
curr
l1
next
l1
curr1
curr2
len1
len2
i
i
l1
l2
slow
fast
i
index
l1
l2
l3
values
In
List
curr
prev
l1
l2
l3
l4
l5
memo
i
a
b
res
i
temp
Stack
item
unsorted
Stack
last
Stack
temp
Stack
queue
prev
Ones
Len
curr
Ones
Len
max
Ones
Len
binary
Bit
sb
start
Offset
start
Full
Byte
end
Offset
end
Full
Byte
i
start
Byte
Mask
end
Byte
Mask
screen
count
count
c
mask
i
result
rightmost
Non
Trailing
Zero
no
Of
Zeros
no
Of
Ones
temp
rightmost
Non
Trailing
One
no
Of
Zeros
no
Of
Ones
temp
of0
of2
of5
of7
of8
of15
