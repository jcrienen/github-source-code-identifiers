install
set
Up
backup
All
Books
get
Backup
List
when
No
Backups
Have
Been
Done
should
Return
Empty
Backup
List
create
New
Book
With
Default
Accounts
set
Up
test
With
No
Transactions
To
Export
should
Not
Create
Any
File
test
Generate
OFX
Export
set
Up
should
Create
Backup
File
Name
load
Default
Accounts
test
Parse
Split
Amount
should
Fail
To
Parse
Wrongly
Formatted
Input
test
Format
Split
Amount
set
Up
test
With
No
Transactions
To
Export
should
Not
Create
Any
File
test
Generate
QIF
Export
multi
Currency
Transactions
should
Result
In
Multiple
Zipped
Qif
Files
memo
And
Description
should
Be
Exported
read
File
Content
set
Up
tear
Down
test
Parse
Integer
Amount
parse
Decimal
Amount
parse
Decimal
Amount
With
Different
Separator
with
Garbage
At
The
Beginning
should
Fail
With
Exception
with
Garbage
At
The
End
should
Fail
With
Exception
empty
String
should
Fail
With
Exception
should
Get
Last
Export
Time
Default
Value
should
Get
Last
Export
Time
Current
Value
should
Get
Utc
String
From
Timestamp
should
Get
Timestamp
From
Epoch
Zero
should
Get
Timestamp
From
Utc
String
should
Get
Timestamp
From
Now
set
Smallest
Fraction
should
Not
Use
Digits
test
Smallest
Fraction
Digits
creating
From
Exchange
Rate
Should
Get
Precision
Right
to
String
should
Use
Default
Locale
to
String
should
Not
Fail
For
Infinitely
Long
Decimal
Expansion
get
Numerator
should
Reduce
Automatically
get
Denominator
should
Reduce
Automatically
test
Account
Uses
Default
Currency
test
Account
Always
Has
UID
test
Transactions
Have
Same
Currency
As
Account
test
Set
Invalid
Color
Code
test
Set
Color
With
Alpha
Component
should
Set
Full
Name
When
Created
setting
Name
Should
Not
Change
Full
Name
new
Instance
should
Return
Non
Null
Values
amounts
should
Be
Stored
Unsigned
test
Adding
Split
To
Transaction
test
Cloning
should
Create
Inverse
Pair
should
Generate
Valid
Csv
should
Parse
Csv
setting
Start
Time
should
Set
Recurrence
Start
setting
End
Time
should
Set
Recurrence
End
setting
Recurrence
should
Set
Scheduled
Action
Start
Time
setting
Recurrence
should
Set
End
Time
test
Computing
Next
Scheduled
Execution
test
Computing
Time
Of
Last
Schedule
multi
Day
Of
Week
Weekly
Actions
should
Be
Due
On
Each
Day
Of
Week
Set
weekly
Actions
With
Multiplier
should
Be
Due
On
The
Day
Of
Week
Set
weekly
Actions
Without
Day
Of
Week
Set
should
Return
Date
In
The
Future
get
Time
In
Millis
setting
Count
should
Compute
Correct
End
Time
test
Recurrence
Count
Computation
not
Setting
End
Date
should
Return
Special
Count
Value
adding
Budget
Amount
should
Set
Budget
UID
should
Compute
Absolute
Amount
Sum
should
Not
Compact
Budget
Amounts
With
Different
Amounts
adding
Same
Amounts
should
Compact
On
Retrieval
adding
Negative
Period
Num
should
Expand
On
Retrieval
test
Get
Number
Of
Accounts
test
Cloning
Transaction
adding
Splits
Should
Set
Transaction
UID
setting
UID
should
Set
Transaction
Uid
Of
Splits
test
Create
Auto
Balance
Split
set
Up
test
Creation
test
Addition
test
Addition
With
Incompatible
Currency
test
Subtraction
test
Subtraction
With
Different
Currency
test
Multiplication
test
Multiplication
With
Different
Currencies
test
Division
test
Division
With
Different
Currency
test
Negation
test
Fraction
Parts
non
Matching
Commodity
Fraction
should
Throw
Exception
test
Printing
validate
Immutability
init
start
set
Up
import
Gnu
Cash
Xml
set
Up
Db
Adapters
accounts
Import
simple
Transaction
Import
transaction
With
Non
Default
Splits
Import
multi
Currency
Transaction
Import
simple
Scheduled
Transaction
Import
importing
Scheduled
Action
should
Set
By
Days
bug562
scheduled
Transaction
Imported
With
Imbalanced
Splits
create
Accounts
make
Accounts
set
Up
disabled
Scheduled
Actions
should
Not
Run
future
Scheduled
Actions
should
Not
Run
exceeded
Execution
Counts
should
Not
Run
missed
Scheduled
Transactions
should
Be
Generated
end
Time
In
The
Future
should
Execute
Only
Until
Present
scheduled
Transactions
With
End
Time
In
Past
should
Be
Executed
recurring
Transactions
should
Have
Scheduled
Action
UID
scheduled
Backups
should
Run
Only
Once
scheduled
Backups
should
Not
Run
Before
Next
Scheduled
Execution
scheduled
Backups
should
Not
Include
Transactions
Previous
To
The
Last
Run
set
Transaction
In
Db
Modified
Timestamp
scheduled
Backups
should
Include
Transactions
After
The
Last
Run
tear
Down
set
Up
should
Have
Account
In
Database
should
Have
Transaction
In
Database
test
Add
Split
adding
Split
Should
Unset
Exported
Flag
Of
Transaction
tear
Down
should
Subtract
Time
Zone
Offset
set
Up
should
Fetch
Only
Enabled
Scheduled
Actions
every
Scheduled
Action
Should
Have
Recurrence
test
Generate
Repeat
String
test
Add
Get
Record
should
Only
Save
One
Price
Per
Commodity
Pair
set
Up
init
Adapters
should
Be
Alphabetically
Sorted
By
Default
bulk
Add
Accounts
Should
Not
Modify
Transactions
should
Add
Accounts
To
Database
should
Delete
Splits
When
Account
Deleted
should
Create
Default
Root
Account
should
Update
Full
Name
After
Parent
Change
should
Add
Transactions
And
Splits
When
Adding
Accounts
should
Clear
All
Tables
When
Deleting
All
Accounts
simple
Account
List
Should
Not
Contain
Transactions
should
Compute
Account
Balance
Correctly
should
Create
Account
Hierarchy
should
Recursively
Delete
Account
should
Get
Descendant
Accounts
should
Reassign
Descendant
Accounts
should
Create
Imbalance
Account
On
Demand
editing
Account
Should
Not
Delete
Template
Splits
should
Set
Default
Transfer
Column
To
Null
When
The
Account
Is
Deleted
importing
Xml
should
Set
Default
Currency
From
Xml
load
Default
Accounts
tear
Down
set
Up
tear
Down
test
Adding
Budget
test
Bulk
Add
Budgets
test
Get
Account
Budgets
bulk
Create
Budgets
saving
Budget
should
Require
Existing
Account
saving
Budget
should
Require
Recurrence
saving
Budget
should
Require
Budget
Amount
set
Up
add
Book
saving
Book
requires
Root
Account
GUID
delete
Book
set
Book
Active
test
Generated
Display
Name
deleting
Book
should
Delete
Db
File
test
Generated
Display
Names
should
Be
Unique
recover
From
No
Active
Book
Found
recover
From
Empty
Database
create
New
Book
With
Default
Accounts
set
Up
test
Transactions
Are
Time
Sorted
deleting
Transactions
Should
Delete
Splits
should
Balance
Transactions
On
Save
test
Compute
Balance
tear
Down
export
Slots
export
Accounts
export
Template
Accounts
export
Transactions
export
Scheduled
Transactions
serialize
Date
export
Commodities
export
Prices
export
Recurrence
export
Budgets
generate
Export
generate
Export
get
Export
Mime
Type
format
Date
parse
Date
parse
Split
Amount
format
Split
Amount
format
Template
Split
Amount
get
Extension
to
String
on
Pre
Execute
do
In
Background
run
on
Post
Execute
dismiss
Progress
Dialog
get
Exporter
move
To
Target
move
Export
To
Uri
move
Export
To
Google
Drive
move
Export
To
Dropbox
move
Export
To
Own
Cloud
get
File
Last
Modified
Timestamp
move
Export
To
SD
Card
strip
Path
Part
backup
And
Delete
Transactions
share
Files
convert
File
Paths
To
Uris
report
Success
refresh
Views
get
Formatted
Current
Time
get
Ofx
Formatted
Time
generate
Ofx
generate
Ofx
Export
generate
Export
write
get
Export
Mime
Type
sanitize
Filename
build
Export
Filename
get
Export
Time
generate
Export
purge
Directory
get
Export
Cache
File
Path
get
Export
Folder
Path
get
Export
Mime
Type
write
write
Token
escape
write
End
Token
generate
Export
write
Splits
To
Csv
generate
Export
generate
Export
generate
Export
retrieve
And
Save
Token
get
Client
has
Token
generate
Export
zip
Qifs
split
QIF
get
Export
Mime
Type
format
Date
get
Qif
Header
get
Qif
Header
get
Description
get
Export
Format
set
Export
Format
get
Export
Start
Time
set
Export
Start
Time
should
Delete
Transactions
After
Export
set
Delete
Transactions
After
Export
get
Export
Target
set
Export
Target
get
Export
Location
set
Export
Location
get
Csv
Separator
set
Csv
Separator
to
String
to
Csv
parse
Csv
darken
on
Create
initialize
Database
Adapters
get
Accounts
Db
Adapter
get
Transaction
Db
Adapter
get
Splits
Db
Adapter
get
Scheduled
Event
Db
Adapter
get
Commodities
Db
Adapter
get
Prices
Db
Adapter
get
Budget
Db
Adapter
get
Recurrence
Db
Adapter
get
Budget
Amounts
Db
Adapter
get
Books
Db
Adapter
get
Active
Db
get
App
Context
is
Crashlytics
Enabled
is
Double
Entry
Enabled
should
Save
Opening
Balances
get
Default
Currency
Code
set
Default
Currency
Code
get
Default
Locale
start
Scheduled
Action
Execution
Service
set
Up
User
Voice
on
Create
View
on
Activity
Created
on
Create
Loader
on
Load
Finished
on
Loader
Reset
on
Resume
refresh
refresh
on
Click
Budget
edit
Budget
delete
Budget
on
Activity
Result
on
Bind
View
Holder
Cursor
on
Click
on
Create
View
Holder
on
Click
on
Menu
Item
Click
load
In
Background
new
Instance
on
Create
View
on
Create
on
Activity
Created
on
Create
Options
Menu
on
Options
Item
Selected
can
Save
save
Budget
Amounts
load
Budget
Amount
Views
add
Budget
Amount
View
setup
Account
Spinner
Adapter
extract
Budget
Amounts
on
Item
Selected
on
Nothing
Selected
on
Click
bind
Views
get
Content
View
get
Title
Res
on
Create
on
Create
Budget
Click
get
Budget
Progress
Color
new
Instance
on
Create
View
on
Activity
Created
bind
Views
on
Resume
refresh
refresh
on
Create
Options
Menu
on
Options
Item
Selected
on
Activity
Result
on
Create
View
Holder
on
Bind
View
Holder
on
Click
generate
Chart
Data
get
Item
Count
on
Create
View
on
Create
on
Activity
Created
init
Views
extract
Budget
Amounts
can
Save
save
Budget
on
Create
Options
Menu
on
Options
Item
Selected
on
Click
Budget
Start
Date
on
Open
Budget
Amount
Editor
on
Recurrence
Set
on
Date
Set
on
Activity
Result
toggle
Amount
Input
Visibility
on
Radio
Button
Clicked
on
Create
View
on
Create
Options
Menu
on
Options
Item
Selected
on
Activity
Created
on
Resume
on
Pause
start
Export
bind
View
Listeners
on
Item
Selected
on
Nothing
Selected
on
Click
on
Click
on
Checked
Changed
on
Click
set
Export
Uri
Text
select
Export
File
on
Recurrence
Set
on
Activity
Result
on
Date
Set
on
Time
Set
expand
apply
Transformation
will
Change
Bounds
collapse
apply
Transformation
will
Change
Bounds
get
Title
get
Layout
Resource
get
Report
Type
on
Activity
Created
get
Data
get
Empty
Data
get
Start
Date
get
End
Date
float
List
To
Array
generate
Report
display
Report
set
Custom
Legend
on
Prepare
Options
Menu
on
Options
Item
Selected
on
Value
Selected
get
Layout
Resource
get
Title
on
Activity
Created
get
Report
Type
get
Data
get
Empty
Data
get
Entry
List
calculate
Earliest
And
Latest
Timestamps
requires
Account
Type
Options
generate
Report
display
Report
on
Time
Range
Updated
on
Grouping
Updated
on
Prepare
Options
Menu
on
Options
Item
Selected
on
Value
Selected
on
Time
Range
Updated
on
Grouping
Updated
on
Account
Type
Updated
get
Layout
Resource
get
Title
get
Report
Type
on
Activity
Created
requires
Account
Type
Options
requires
Time
Range
Options
generate
Report
display
Report
on
Prepare
Options
Menu
load
Account
Views
on
Create
get
Layout
Resource
get
Title
get
Report
Type
requires
Account
Type
Options
requires
Time
Range
Options
on
Activity
Created
on
Prepare
Options
Menu
generate
Report
get
Data
display
Report
get
Empty
Data
on
Click
Chart
Type
Button
set
Button
Tint
on
Activity
Created
get
Title
get
Report
Type
get
Layout
Resource
generate
Report
display
Report
get
Data
get
Empty
Data
bubble
Sort
on
Prepare
Options
Menu
on
Options
Item
Selected
group
Smaller
Slices
on
Value
Selected
on
Item
Selected
on
Nothing
Selected
get
Content
View
get
Title
Res
on
Create
on
Item
Selected
on
Nothing
Selected
on
Attach
Fragment
load
Fragment
update
Report
Type
Spinner
toggle
Toolbar
Title
Visibility
set
App
Bar
Color
update
Date
Range
On
Fragment
update
Account
Type
On
Fragments
update
Grouping
On
Fragments
on
Create
Options
Menu
on
Options
Item
Selected
on
Item
Selected
on
Nothing
Selected
on
Date
Set
on
Date
Range
Set
get
Account
Type
get
Report
Period
End
get
Report
Period
Start
on
Key
Up
refresh
refresh
on
Save
Instance
State
get
Title
Color
get
Report
Names
get
Fragment
get
Title
get
Layout
Resource
get
Report
Type
requires
Account
Type
Options
requires
Time
Range
Options
generate
Report
display
Report
on
Create
on
Create
View
on
Activity
Created
on
Start
on
Resume
on
Attach
on
Detach
toggle
Base
Reporting
Options
Visibility
get
Date
Diff
get
Quarter
on
Create
Options
Menu
refresh
on
Pre
Execute
do
In
Background
on
Post
Execute
refresh
on
Grouping
Updated
on
Time
Range
Updated
on
Account
Type
Updated
on
Value
Selected
on
Nothing
Selected
on
Create
Preferences
on
Create
on
Resume
on
Preference
Click
on
Preference
Change
toggle
Dropbox
Preference
toggle
Own
Cloud
Preference
toggle
Google
Drive
Preference
toggle
Dropbox
Sync
toggle
Google
Drive
Sync
toggle
Own
Cloud
Sync
get
Google
Api
Client
on
Connected
on
Result
on
Connection
Suspended
on
Connection
Failed
restore
Backup
on
Click
on
Click
on
Click
on
Click
on
Click
on
Activity
Result
on
Create
Preferences
on
Create
on
Resume
on
Preference
Click
on
Preference
Click
on
Click
on
Click
on
Preference
Click
select
Export
File
on
Preference
Change
show
Delete
Accounts
Dialog
on
Activity
Result
on
Create
View
on
Create
on
Activity
Created
on
Resume
on
Create
Options
Menu
on
Options
Item
Selected
refresh
refresh
on
Create
Loader
on
Load
Finished
on
Loader
Reset
bind
View
on
Click
set
Up
Menu
on
Click
on
Menu
Item
Click
handle
Menu
Delete
Book
handle
Menu
Rename
Book
on
Click
on
Click
set
Last
Exported
Text
set
Statistics
Text
load
In
Background
get
Dialog
Builder
on
Click
on
Start
set
Up
Confirm
Check
Box
on
Checked
Changed
on
Negative
Button
new
Instance
on
Create
Dialog
on
Click
new
Instance
on
Create
Dialog
on
Click
new
Instance
on
Create
on
Create
View
on
Activity
Created
save
Button
save
check
Data
on
Remote
Operation
Finish
set
Listeners
on
Click
on
Click
new
Instance
on
Create
Dialog
on
Click
on
Create
Preferences
on
Create
on
Resume
on
Preference
Change
on
Preference
Click
on
Preference
Change
on
Activity
Result
on
Create
on
Create
Preferences
on
Resume
on
Preference
Click
on
Preference
Change
show
Delete
Transactions
Dialog
set
Imbalance
Accounts
Hidden
set
Localized
Summary
on
Create
Preferences
on
Create
on
Panel
Slide
on
Panel
Opened
on
Panel
Closed
on
Preference
Start
Fragment
load
Fragment
on
Options
Item
Selected
get
Active
Book
Shared
Preferences
get
Book
Shared
Preferences
on
Back
Pressed
on
Create
Preferences
on
Create
on
Resume
on
Preference
Click
do
In
Background
on
Post
Execute
parse
parse
End
Time
parse
By
Day
on
Click
on
Task
Complete
new
Instance
on
Create
Dialog
new
Instance
new
Instance
on
Create
View
on
Click
on
Click
on
Create
Dialog
on
Date
Range
Set
new
Instance
on
Create
Dialog
init
on
Bind
View
Holder
on
Bind
View
Holder
Cursor
get
Item
Count
get
Item
Id
get
Cursor
change
Cursor
swap
Cursor
convert
To
String
run
Query
On
Background
Thread
get
Filter
get
Filter
Query
Provider
set
Filter
Query
Provider
on
Content
Changed
deliver
Self
Notifications
on
Change
on
Changed
on
Invalidated
convert
To
String
run
Query
On
Background
Thread
get
Cursor
change
Cursor
convert
Result
To
String
perform
Filtering
publish
Results
layout
Depends
On
on
Dependent
View
Changed
get
Toolbar
Height
check
If
Empty
on
Changed
on
Item
Range
Inserted
on
Item
Range
Removed
set
Adapter
set
Empty
View
on
Finish
Inflate
find
Checkable
View
set
Checked
is
Checked
toggle
init
before
Text
Changed
on
Text
Changed
after
Text
Changed
bind
Listeners
on
Focus
Change
on
Click
on
Touch
bind
Listeners
get
Calculator
Keyboard
get
Calculator
Keyboard
View
set
Calculator
Keyboard
View
get
Calculator
Keys
Layout
set
Calculator
Keys
Layout
set
Calculator
Keyboard
get
Commodity
set
Commodity
evaluate
is
Input
Valid
get
Clean
String
is
Input
Modified
get
Value
set
Value
on
Key
on
Press
on
Release
on
Text
swipe
Left
swipe
Right
swipe
Down
swipe
Up
is
Haptic
Feedback
Enabled
is
Custom
Keyboard
Visible
show
Custom
Keyboard
hide
Custom
Keyboard
on
Back
Pressed
get
Context
set
Account
Type
set
Amount
Formatting
Listener
add
On
Checked
Change
Listener
set
Checked
get
Account
Type
get
Transaction
Type
on
Checked
Changed
set
Selection
on
Navigation
Item
Selected
on
Create
on
Click
on
Click
on
Resume
get
Content
View
get
Title
Res
get
Progress
Bar
set
Up
Navigation
Drawer
on
Drawer
Closed
on
Drawer
Opened
on
Post
Create
on
Configuration
Changed
on
Options
Item
Selected
update
Active
Book
Name
on
Drawer
Menu
Item
Clicked
on
Activity
Result
on
Menu
Item
Click
on
Click
App
Title
on
Click
Book
on
Create
on
Options
Item
Selected
get
Current
Account
UID
show
Account
Form
Fragment
show
Transaction
Form
Fragment
show
Export
Form
Fragment
show
Split
Editor
Fragment
show
Budget
Form
Fragment
show
Budget
Amount
Editor
Fragment
show
Form
Fragment
set
On
Back
Listener
on
Back
Pressed
refresh
refresh
on
Create
on
Page
Strip
Selected
on
Page
Selected
on
Click
on
Click
create
Wizard
Model
create
Accounts
And
Finish
on
Page
Tree
Changed
update
Bottom
Bar
on
Activity
Result
on
Task
Complete
on
Destroy
on
Save
Instance
State
on
Get
Model
on
Edit
Screen
After
Review
on
Page
Data
Changed
on
Get
Page
recalculate
Cut
Off
Page
get
Item
get
Item
Position
set
Primary
Item
get
Count
set
Cut
Off
Page
get
Cut
Off
Page
on
Create
View
create
Fragment
get
Review
Items
is
Completed
on
New
Root
Page
List
new
Instance
on
Create
View
on
Create
on
Activity
Created
on
Attach
on
Detach
on
List
Item
Click
create
Fragment
get
Review
Items
new
Instance
initialize
set
Arguments
set
On
Color
Selected
Listener
on
Create
on
Create
Dialog
on
Color
Selected
show
Palette
View
show
Progress
Bar
View
set
Colors
set
Colors
set
Selected
Color
refresh
Palette
get
Colors
get
Selected
Color
on
Save
Instance
State
init
create
Table
Row
draw
Palette
add
Swatch
To
Row
set
Swatch
Description
create
Blank
Space
create
Color
Swatch
compare
on
Color
Selected
set
Color
set
Checked
on
Click
on
State
Change
get
Pressed
Color
is
Stateful
set
Background
Color
on
Create
bind
Listeners
on
Item
Selected
on
Nothing
Selected
on
Click
on
Click
configure
Widget
remove
Widget
Configuration
load
Old
Preferences
update
Widget
update
All
Widgets
run
on
Resume
on
Pause
is
Session
Active
on
Create
on
Passcode
Entered
on
Back
Pressed
on
Passcode
Entered
on
Create
View
on
Click
on
Click
on
Click
on
Click
on
Click
on
Click
on
Click
on
Click
on
Click
on
Click
on
Click
on
Attach
add
run
on
Create
on
Passcode
Entered
new
Instance
on
Create
on
Create
View
on
Activity
Created
set
Listeners
on
Checked
Changed
on
Checked
Changed
on
Click
on
Click
get
Item
destroy
Item
get
Page
Title
get
Count
get
Current
Account
List
Fragment
get
Content
View
get
Title
Res
on
Create
on
Tab
Selected
on
Tab
Unselected
on
Tab
Reselected
on
Click
on
Start
handle
Open
File
Intent
on
New
Intent
set
Current
Tab
init
on
Destroy
has
New
Features
show
Whats
New
Dialog
on
Click
open
Export
Fragment
on
Create
Options
Menu
on
Options
Item
Selected
create
Default
Accounts
on
Task
Complete
start
Xml
File
Chooser
start
Xml
File
Chooser
import
Xml
File
From
Intent
start
account
Selected
remove
First
Run
Flag
account
Selected
on
Color
Selected
new
Instance
on
Create
on
Create
View
before
Text
Changed
on
Text
Changed
after
Text
Changed
on
Item
Selected
on
Nothing
Selected
on
Checked
Changed
on
Checked
Changed
on
Click
on
Activity
Created
initialize
Views
With
Account
initialize
Views
set
Account
Type
Selection
set
Default
Transfer
Account
Inputs
Visible
set
Selected
Currency
set
Parent
Account
Selection
set
Default
Transfer
Account
Selection
get
Account
Color
Options
show
Color
Picker
Dialog
on
Create
Options
Menu
on
Options
Item
Selected
load
Default
Transfer
Account
List
load
Parent
Account
List
get
Allowed
Parent
Account
Types
get
Account
Type
String
List
load
Account
Types
List
finish
Fragment
on
Destroy
save
Account
get
Selected
Account
Type
get
Entered
Name
new
Instance
on
Create
View
on
Create
on
Activity
Created
on
Start
on
Resume
on
Attach
on
List
Item
Click
on
Activity
Result
try
Delete
Account
show
Confirmation
Dialog
on
Create
Options
Menu
refresh
refresh
on
Save
Instance
State
on
Destroy
open
Create
Or
Edit
Activity
on
Create
Loader
on
Load
Finished
on
Loader
Reset
on
Query
Text
Submit
on
Query
Text
Change
on
Close
load
In
Background
on
Create
View
Holder
on
Bind
View
Holder
Cursor
on
Click
on
Click
on
Click
on
Click
on
Menu
Item
Click
on
Create
Action
Mode
on
Prepare
Action
Mode
on
Destroy
Action
Mode
on
Action
Item
Clicked
set
Default
Status
Bar
Color
get
Instance
on
Create
on
Create
View
on
Activity
Created
refresh
List
on
Resume
on
Create
Options
Menu
on
Options
Item
Selected
on
List
Item
Click
open
Transaction
For
Edit
on
Create
Loader
on
Load
Finished
on
Loader
Reset
finish
Edit
Mode
set
Action
Mode
Title
uncheck
All
Items
start
Action
Mode
stop
Action
Mode
on
Activity
Result
get
View
on
Checked
Changed
run
bind
View
get
View
on
Checked
Changed
run
bind
View
load
In
Background
load
In
Background
transfer
Complete
new
Instance
on
Create
View
on
Activity
Created
on
Configuration
Changed
load
Split
Views
on
Create
Options
Menu
on
Options
Item
Selected
add
Split
View
init
Args
transfer
Complete
set
Listeners
on
Click
on
Checked
Changed
get
Amount
Value
set
Selected
Transfer
Account
update
Transfer
Accounts
List
can
Save
save
Splits
extract
Splits
From
View
before
Text
Changed
on
Text
Changed
after
Text
Changed
on
Item
Selected
on
Nothing
Selected
on
Create
on
Save
Instance
State
on
Create
View
on
Activity
Created
refresh
refresh
on
Resume
on
List
Item
Click
on
Create
Options
Menu
on
Prepare
Options
Menu
on
Options
Item
Selected
on
Create
Loader
on
Load
Finished
on
Loader
Reset
load
In
Background
on
Create
View
Holder
get
Item
View
Type
on
Bind
View
Holder
Cursor
on
Click
on
Click
on
Click
on
Menu
Item
Click
on
Item
Selected
on
Nothing
Selected
get
Item
destroy
Item
get
Page
Title
get
Count
prepare
Sub
Accounts
List
Fragment
prepare
Transactions
List
Fragment
refresh
refresh
get
Content
View
get
Title
Res
on
Create
on
Tab
Selected
on
Tab
Unselected
on
Tab
Reselected
on
Click
on
Resume
set
Title
Indicator
Color
setup
Action
Bar
Navigation
update
Navigation
Selection
on
Prepare
Options
Menu
on
Options
Item
Selected
on
Activity
Result
on
Destroy
get
Current
Account
UID
display
Balance
get
Pretty
Date
Format
create
New
Transaction
edit
Transaction
account
Selected
get
Instance
on
Create
View
on
Checked
Changed
on
Checked
Changed
on
Click
on
Click
on
Click
on
Create
Dialog
transfer
Funds
before
Text
Changed
on
Text
Changed
after
Text
Changed
new
Instance
on
Create
Dialog
on
Click
on
Click
new
Instance
on
Create
View
on
Create
on
Activity
Created
set
Listeners
on
Click
on
Click
create
New
Transaction
edit
Transaction
on
Create
View
on
Click
start
Transfer
Funds
on
Configuration
Changed
on
Activity
Created
on
Item
Selected
remove
Favorite
Icon
From
Selected
View
on
Nothing
Selected
bind
View
init
Transaction
Name
Autocomplete
convert
To
String
run
Query
on
Item
Click
initialize
Views
With
Transaction
set
Double
Entry
Views
Visibility
toggle
Amount
Input
Entry
Mode
on
Click
initalize
Views
update
Transfer
Accounts
List
open
Split
Editor
set
Listeners
on
Click
on
Click
set
Selected
Transfer
Account
extract
Splits
From
View
get
Transfer
Account
UID
extract
Transaction
From
View
split
Editor
Used
is
Multi
Currency
Transaction
save
New
Transaction
schedule
Recurring
Transaction
on
Destroy
View
on
Create
Options
Menu
on
Options
Item
Selected
can
Save
set
Split
List
finish
on
Date
Set
on
Time
Set
strip
Currency
Formatting
transfer
Complete
on
Recurrence
Set
on
Activity
Result
on
Create
bind
Views
refresh
remove
Split
Item
Views
edit
Transaction
on
Options
Item
Selected
on
Activity
Result
get
Content
View
get
Title
Res
on
Create
on
Tab
Selected
on
Tab
Unselected
on
Tab
Reselected
get
Page
Title
get
Item
get
Count
set
Last
Export
Time
set
Last
Export
Time
get
Last
Export
Time
get
Last
Export
Time
zip
Files
move
File
move
File
enqueue
Work
on
Handle
Work
bind
View
get
Position
get
Utc
String
From
Timestamp
get
Timestamp
From
Epoch
Zero
get
Timestamp
From
Utc
String
get
Timestamp
From
Now
parse
activate
Book
load
Book
bind
View
copy
recursive
Move
run
backup
All
Books
backup
Active
Book
backup
Book
get
Backup
File
Path
get
Backup
Folder
Path
get
Book
Backup
File
Uri
get
Backup
List
schedule
Periodic
Backups
get
Budget
UID
set
Budget
UID
get
Account
UID
set
Account
UID
get
Period
Num
set
Period
Num
get
Amount
set
Amount
describe
Contents
write
To
Parcel
create
From
Parcel
new
Array
get
Period
Type
set
Period
Type
get
Period
Start
set
Period
Start
get
Period
get
Repeat
String
get
Rule
String
get
Days
Left
In
Current
Period
get
Number
Of
Periods
get
Text
Of
Current
Period
get
By
Days
set
By
Days
get
Count
set
Period
End
get
Period
End
set
Period
End
get
Multiplier
set
Multiplier
get
Frequency
Repeat
String
from
Legacy
Period
get
Instance
get
Namespace
set
Namespace
get
Mnemonic
get
Currency
Code
set
Mnemonic
get
Fullname
set
Fullname
get
Cusip
set
Cusip
get
Local
Symbol
get
Symbol
set
Local
Symbol
get
Smallest
Fraction
get
Smallest
Fraction
Digits
set
Smallest
Fraction
get
Quote
Flag
set
Quote
Flag
to
String
equals
hash
Code
get
Name
set
Name
get
Description
set
Description
get
Recurrence
set
Recurrence
get
Budget
Amounts
set
Budget
Amounts
add
Budget
Amount
get
Amount
get
Amount
get
Amount
Sum
get
Number
Of
Periods
get
Startof
Current
Period
get
End
Of
Current
Period
get
Start
Of
Period
get
End
Of
Period
set
Number
Of
Periods
get
Number
Of
Accounts
get
Compacted
Budget
Amounts
get
Expanded
Budget
Amounts
has
Debit
Normal
Balance
get
Normal
Balance
Type
get
Zero
Instance
get
Big
Decimal
create
Zero
Instance
get
Commodity
with
Currency
set
Commodity
set
Commodity
get
Numerator
get
Denominator
get
Scale
as
Big
Decimal
as
Double
as
String
formatted
String
formatted
String
negate
set
Amount
add
subtract
divide
divide
multiply
multiply
multiply
is
Negative
to
Plain
String
to
Locale
String
to
String
hash
Code
equals
compare
To
abs
is
Amount
Zero
get
Message
set
Name
get
Name
get
Full
Name
set
Full
Name
get
Description
set
Description
get
Account
Type
set
Account
Type
add
Transaction
set
Transactions
get
Transactions
get
Transaction
Count
get
Balance
get
Color
get
Color
Hex
String
set
Color
set
Color
is
Favorite
set
Favorite
get
Commodity
set
Commodity
set
Parent
UID
get
Parent
UID
is
Placeholder
Account
is
Hidden
set
Hidden
set
Place
Holder
Flag
get
Default
Transfer
Account
UID
set
Default
Transfer
Account
UID
convert
To
Ofx
Account
Type
to
Ofx
generate
UID
get
UID
set
UID
get
Created
Timestamp
set
Created
Timestamp
get
Modified
Timestamp
set
Modified
Timestamp
equals
hash
Code
invert
get
Value
set
Value
get
Quantity
set
Quantity
get
Transaction
UID
set
Transaction
UID
get
Account
UID
set
Account
UID
get
Type
set
Type
get
Memo
set
Memo
create
Pair
clone
is
Pair
Of
get
Formatted
Value
get
Formatted
Quantity
get
Formatted
Amount
get
Reconcile
State
is
Reconciled
set
Reconcile
State
get
Reconcile
Date
set
Reconcile
Date
to
String
to
Csv
parse
Split
is
Equivalent
To
equals
hash
Code
describe
Contents
write
To
Parcel
create
From
Parcel
new
Array
get
Frequency
Description
get
By
Parts
get
Commodity
UID
set
Commodity
UID
get
Currency
UID
set
Currency
UID
get
Date
set
Date
get
Source
set
Source
get
Type
set
Type
get
Value
Num
set
Value
Num
get
Value
Denom
set
Value
Denom
reduce
to
String
init
Defaults
create
Auto
Balance
Split
set
UID
get
Splits
get
Splits
set
Splits
add
Split
get
Balance
get
Imbalance
compute
Balance
get
Currency
Code
get
Commodity
set
Commodity
get
Description
set
Description
set
Note
get
Note
set
Time
set
Time
get
Time
Millis
get
Type
For
Balance
should
Decrease
Balance
set
Exported
is
Exported
is
Template
set
Template
to
OFX
get
Scheduled
Action
UID
set
Scheduled
Action
UID
create
Intent
get
Action
Type
set
Action
Type
get
Action
UID
set
Action
UID
get
Last
Run
Time
get
Time
Of
Last
Schedule
compute
Next
Count
Based
Scheduled
Execution
Time
compute
Next
Time
Based
Scheduled
Execution
Time
compute
Next
Scheduled
Execution
Time
Starting
At
compute
Next
Weekly
Execution
Starting
At
convert
Calendar
Day
Of
Week
To
Joda
set
Last
Run
get
Period
get
Start
Time
set
Start
Time
get
End
Time
set
End
Time
get
Tag
set
Tag
is
Enabled
set
Enabled
get
Total
Planned
Execution
Count
set
Total
Planned
Execution
Count
get
Execution
Count
set
Execution
Count
should
Auto
Create
set
Auto
Create
should
Auto
Notify
set
Auto
Notify
get
Advance
Create
Days
set
Advance
Create
Days
get
Advance
Notify
Days
set
Advance
Notify
Days
get
Template
Account
UID
set
Template
Account
UID
get
Repeat
String
get
Rule
String
get
Recurrence
set
Recurrence
set
Recurrence
parse
Scheduled
Action
to
String
init
get
Root
Account
UID
set
Root
Account
UID
get
Root
Template
UID
set
Root
Template
UID
is
Active
set
Active
get
Source
Uri
set
Source
Uri
get
Display
Name
set
Display
Name
get
Last
Sync
set
Last
Sync
init
start
Element
end
Element
characters
end
Document
save
To
Database
get
Book
UID
get
Commodity
For
Account
handle
End
Of
Template
Numeric
Slot
generate
Missed
Scheduled
Transactions
set
Minimal
Scheduled
Action
By
Days
parse
on
Pre
Execute
do
In
Background
run
on
Post
Execute
start
Element
end
Document
on
Receive
on
Update
on
Enabled
on
Deleted
on
Receive
on
Receive
on
Receive
enqueue
Work
on
Handle
Work
process
Scheduled
Actions
execute
Scheduled
Event
execute
Backup
should
Execute
Scheduled
Backup
execute
Transactions
load
In
Background
register
Content
Observer
deliver
Result
on
Start
Loading
on
Stop
Loading
on
Canceled
on
Reset
on
Release
Resources
get
Fully
Qualified
Account
Name
get
Gnu
Cash
Root
Account
UID
move
File
run
import
Commodities
upgrade
Db
To
Version2
upgrade
Db
To
Version3
upgrade
Db
To
Version4
upgrade
Db
To
Version5
upgrade
Db
To
Version6
upgrade
Db
To
Version7
upgrade
Db
To
Version8
upgrade
Db
To
Version9
upgrade
Db
To
Version10
upgrade
Db
To
Version11
subtract
Time
Zone
Offset
upgrade
Db
To
Version12
upgrade
Db
To
Version13
reschedule
Service
Alarm
move
Directory
upgrade
Db
To
Version14
run
upgrade
Db
To
Version15
create
Updated
At
Trigger
on
Create
on
Open
on
Upgrade
create
Database
Tables
on
Create
get
Database
insert
Book
migrate
Backup
Files
on
Upgrade
get
Instance
build
Model
Instance
set
Bindings
get
Budget
Amounts
For
Budget
delete
Budget
Amounts
For
Budget
get
Budget
Amounts
get
Budget
Amount
Sum
get
Instance
build
Model
Instance
set
Bindings
delete
Book
set
Active
is
Active
get
Active
Book
UID
get
No
Active
Book
Found
Exception
Info
fix
Books
Database
recover
Book
Records
get
Root
Account
UID
set
First
Book
As
Active
get
Book
Databases
is
Book
Database
get
All
Book
UI
Ds
get
Active
Book
Display
Name
generate
Default
Book
Name
get
Instance
get
Split
Db
Adapter
add
Record
bulk
Add
Records
set
Bindings
fetch
All
Transactions
For
Account
fetch
Scheduled
Transactions
For
Account
delete
Transactions
For
Account
delete
Transactions
With
No
Splits
fetch
All
Scheduled
Transactions
get
All
Transactions
For
Account
get
All
Transactions
fetch
Transactions
With
Splits
fetch
Transactions
Modified
Since
fetch
Transactions
With
Splits
With
Transaction
Account
get
Records
Count
get
Records
Count
build
Model
Instance
get
Balance
move
Transaction
get
Transactions
Count
get
Template
Transactions
Count
get
Scheduled
Transactions
For
Account
get
Split
Count
fetch
Transaction
Suggestions
update
Transaction
get
Num
Currencies
delete
All
Non
Template
Transactions
get
Timestamp
Of
Earliest
Transaction
get
Timestamp
Of
Latest
Transaction
get
Timestamp
Of
Last
Modification
get
Timestamp
get
Instance
add
Record
bulk
Add
Records
build
Model
Instance
set
Bindings
fetch
Budgets
For
Account
get
Account
Budgets
get
Account
Sum
get
Instance
add
Record
bulk
Add
Records
set
Bindings
mark
As
Exported
update
All
Accounts
update
Account
reassign
Descendant
Accounts
recursive
Delete
Account
build
Model
Instance
build
Simple
Account
Instance
get
Parent
Account
UID
get
Account
Color
Code
get
Account
Type
get
Simple
Account
List
get
Simple
Account
List
get
Exportable
Accounts
get
Or
Create
Imbalance
Account
UID
get
Imbalance
Account
UID
create
Account
Hierarchy
get
Or
Create
Opening
Balance
Account
UID
find
Account
Uid
By
Full
Name
fetch
All
Records
fetch
All
Records
Ordered
By
Full
Name
fetch
Accounts
fetch
Accounts
Ordered
By
Full
Name
fetch
Accounts
Ordered
By
Favorite
And
Full
Name
get
Account
Balance
get
Account
Balance
get
Account
Balance
get
Account
Balance
compute
Balance
get
Accounts
Balance
get
Descendant
Account
UI
Ds
fetch
Sub
Accounts
fetch
Top
Level
Accounts
fetch
Recent
Accounts
fetch
Favorite
Accounts
get
Or
Create
Gnu
Cash
Root
Account
UID
get
Sub
Account
Count
get
Currency
Code
get
Account
Name
get
Default
Transfer
Account
ID
get
Fully
Qualified
Account
Name
get
Account
Full
Name
is
Placeholder
Account
is
Hidden
Account
is
Favorite
Account
get
All
Opening
Balance
Transactions
get
Imbalance
Account
Prefix
get
Imbalance
Account
Name
get
Opening
Balance
Account
Full
Name
get
Active
Account
Color
Resource
get
Commodities
In
Use
delete
All
Records
delete
Record
get
Transaction
Max
Split
Num
get
Instance
add
Record
bulk
Add
Records
update
Recurrence
Attributes
set
Bindings
build
Model
Instance
get
Scheduled
Actions
With
UID
get
All
Enabled
Scheduled
Actions
get
Action
Instance
Count
get
Instance
set
Bindings
build
Model
Instance
get
Price
create
Temp
View
is
Open
add
Record
add
Record
do
Add
Models
bulk
Add
Records
bulk
Add
Records
build
Model
Instance
get
Replace
Statement
get
Update
Statement
get
Insert
Statement
set
Bindings
get
Record
get
Record
get
All
Records
extract
Base
Model
Attributes
populate
Base
Model
Attributes
fetch
Record
fetch
Record
fetch
All
Records
fetch
All
Records
delete
Record
delete
All
Records
get
ID
get
UID
get
Account
Currency
Code
get
Commodity
UID
get
Account
Type
update
Record
update
Record
update
Record
update
Records
delete
Record
get
Attribute
get
Attribute
get
Records
Count
begin
Transaction
set
Transaction
Successful
enable
Foreign
Key
end
Transaction
get
Instance
add
Record
set
Bindings
build
Model
Instance
compute
Split
Balance
compute
Split
Balance
calculate
Split
Balance
get
Splits
For
Transaction
get
Splits
For
Transaction
get
Splits
For
Transaction
In
Account
fetch
Splits
fetch
Splits
For
Transaction
fetch
Splits
For
Account
fetch
Splits
For
Transaction
And
Account
get
Transaction
UID
delete
Record
get
Transaction
ID
get
Instance
build
Model
Instance
set
Bindings
by
Days
To
String
string
To
By
Days
get
Instance
set
Bindings
build
Model
Instance
fetch
All
Records
fetch
All
Records
get
Commodity
get
Currency
Code
install
is
Robo
Unit
Test
prepare
Test
Case
set
Up
validate
Transaction
List
Displayed
get
Transaction
Count
validate
Time
Input
test
Add
Transaction
Should
Require
Amount
sleep
assert
Toast
Displayed
validate
Edit
Transaction
Fields
test
Add
Transaction
test
Add
Multi
Currency
Transaction
test
Edit
Transaction
test
Auto
Balance
Transactions
test
Split
Editor
set
Double
Entry
Enabled
test
Default
Transaction
Type
set
Default
Transaction
Type
child
Accounts
Should
Use
Parent
Transfer
Account
Setting
test
Toggle
Transaction
Type
test
Open
Transaction
Edit
Should
Not
Modify
Transaction
test
Delete
Transaction
test
Move
Transaction
editing
Split
should
Not
Set
Amount
To
Zero
test
Duplicate
Transaction
test
Legacy
Intent
Transaction
Recording
opening
And
Saving
Multi
Currency
Transaction
should
Not
Modify
The
Splits
test
Editing
Transfer
Account
Of
Multi
Currency
Transaction
editing
Transfer
Account
should
Keep
Split
Amounts
Consistent
click
On
View
refresh
Transactions
List
run
tear
Down
set
Up
test
Create
Backup
assert
Toast
Displayed
tear
Down
on
Create
on
Destroy
disable
Animation
enable
Animation
reflectively
Disable
Animation
apply
evaluate
set
Animation
Scale
Factors
set
Up
has
Active
Internet
Connection
Own
Cloud
Credentials
Own
Cloud
Export
assert
Toast
Displayed
sleep
set
Up
should
Run
Wizard
To
End
should
Display
Full
Currency
List
prep
Test
Case
should
Open
Book
Manager
test
Load
Book
From
Book
Manager
creating
New
Accounts
should
Created
New
Book
test
Create
New
Book
test
Delete
Book
sleep
prep
Test
set
Up
prevent
First
Run
Dialogs
test
Display
Accounts
List
test
Search
Accounts
test
Create
Account
should
Include
Future
Transactions
In
Account
Balance
test
Change
Parent
Account
should
Hide
Parent
Account
View
When
No
Parents
Exist
test
Edit
Account
editing
Account
Should
Not
Delete
Transactions
sleep
test
Delete
Simple
Account
test
Delete
Account
With
Subaccounts
test
Delete
Account
Moving
Subaccounts
account
Exists
test
Intent
Account
Creation
should
Show
Wizard
On
First
Run
run
tear
Down
refresh
Accounts
List
run
first
matches
Safely
describe
To
prepare
Test
Case
set
Up
add
Transaction
For
Current
Month
add
Transaction
For
Previous
Month
test
No
Data
test
Selecting
Value
test
Spinner
click
XY
calculate
Coordinates
get
Position
get
Position
get
Position
get
Position
refresh
Report
run
tear
Down
cleanup
prep
Test
Case
set
Up
test
Showing
Hiding
Of
Calculator
Keyboard
click
On
View
tear
Down
cleanup
