main
dfs
check
main
perm
validate
recurMin
recurMax
compare
main
main
findNumbers
isSatisfied
listToString
main
dfs
compare
input
rec_func
pro
main
main
searchString
main
casesCount
checkAnnular
main
makeString
print
main
findNumberOfCases
main
getParent
union
main
traverseMap
getDirection
getNumber
main
init
findMinSafeZone
findDir
main
searchSticker
main
getStickers
initScores
main
takeSticker
main
main
main
main
main
main
shoveled
main
clearAllSnows
cleanTwoHouses
main
cleanSnow
input
clean
cleanSnow
pro
main
main
main
main
findMinCost
init
calCost
main
main
stackToString
checkBomb
removeString
main
main
stackToString
isSame
pop
getAnswer
main
input
removeAllBomb
removeBomb
main
main
makeSet
union
findRoot
printTreeCount
main
getTreeCount
isTree
main
printAnswer
countTree
main
markCycle
findParent
union
findAll
computeTree
main
dfs
printResult
main
countTree
makeEdge
main
chaseAwaySharks
moveShark
checkSpace
checkBoundary
checkEmpty
checkOwnSmell
checkMeetShark
main
init
spreadSmell
move
getNextMove
arrayBoundsValidation
reduceSmell
main
countTime
countEnd
moveSharkEmpty
moveSharkSmell
moveShark
sharkOut
setOrder
main
moveSharks
spreadSmells
decreaseSmells
isInBoard
main
init
sharksMove
sharkMove
fight
mapUpdate
checkEmptyPlace
checkMyPlace
sharkOutMap
input
main
moveUntilShark1Left
moveStart
isIn
fightAndFindWinner
reduceTraces
checkAllMap
removeTraces
findNextPos
moveShark
main
getMovingPeriod
searchPopulation
checkPopulation
unionNations
main
getMovementCount
getPopulation
move
diffPopulation
arrayBoundsValidation
main
findUnion
open
movePopulation
copyMap
isSame
main
markMove
isIn
main
populationMovement
union
isOutMap
main
makeUnion
movePopulation
isIn
main
main
init
findMinSize
main
playGame
main
getMinCount
main
playGame
main
move
main
findMinimumCount
main
init
findMinRollCnt
main
main
main
getMax
main
main
main
hackComputers
main
init
hacking
countInfectedComputers
countTime
main
init
startHacking
findAnswer
main
main
getSection
