mouseI
mouseJ
catI
catJ
i
j
mT
jump
x
y
i
j
nx
ny
res
costDiff
n
ans
pre
i
bit
sum
i
lo
hi
mid
ans
result
minRank
neighRank
recursiveRank
sortedU
sortedV
i
u
v
sortedU
sortedV
m
n
ans
y2
cherries
dd
dr
rr
rd
max
counter
max
curr
repeated
builder
lower
curr
l
i
len
arr
i
j
res
i
max
rects
ans
i
count
y
lo
hi
id
mid
len
list
indexCopy
i
memo
i
j
val
currNode
idxInInorder
root
i
ans
sum
diff
n
m
dp
last
i
p
now
j
k
c
q
r
i
j
s
r
eightN
maxTriangular
ways
triangular
m
difference
minDiff
result
w
l
diff
map
i
freqArr
i
freq
i
first
second
mul1
mul2
ans
temp
freq
i
val
i
hs
i
list
index
flag
graph
i
visited
res
prev
count
i
a
b
n
visited
dfsVisited
adj
i
adj
i
tmp
treelist
mid
node
res
i
n
one
two
i
nums
df
i
j
val
i
res
i
i
j
odd
result
temp
sumfirst
sumsecond
sumtarget
n
ans
i
ans
k
num
n
a
b
numerators
i
j
i
factors
j
ans
n
first
second
ans
left
pos
low
dirs
grid
count
x
y
x
y
x
y
subsets
i
n
m
left
up
dp
i
j
i
j
minHeight
k
res
i
j
prefix
res
i
i
type
day
cap
maxDay
minDay
old
state
where
res
i
i
a
n
i
j
map
i
x
max
c
summ
rem
i
j
count
k
res
i
j
count
i
rowdash
coldash
flag
i
res
carry
mod
i
res
len
count
b
a
x
pq
time
map
i
map
n
res
power
i
prices
i
flightsMap
flightSrc
flightDst
flightPrice
flightsList
q
tempPrices
i
size
i
curSrc
curPrice
curFlightsList
flightDst
flightPrice
newPrice
i
totalPrice
res
mod
i
m
counts
output
map
i
a
b
c
t
s
s
left
ptr
mid
depth
n
res
n
ans
M
E
next
prev
dp
i
j
k
i
j
cur
k
k
ch
len
i
firstIndex
allowedSet
i
count
i
i
map
ans
tempAns
temp
x
start
sb
i
digit
curr
curr
ans
visited
i
a
b
c
i
ans
a
b
m
diff1
y
z
w
f
i
r
diff2
i
r
result
i
start
end
mid
start
end
mid
ans
ds
ans
freq
i
k
target
freq
min
i
c
idx
lo
hi
mid
add
left_bound
i
i
trie
cnt
i
cnt1
cnt2
cur
i
bit
low_cnt
cur
i
bit
req
map
children
parent
child
isLeft
parentNode
childNode
root
n
dp
res
queue
j
i
idx
hs
i
ans
pow
temp
prev
pres
Next
hm
i
sum
mult
count
ans
pre
val
n
count
set
sAr
m
ans
i
tAr
k
s
j
str
m
n
noOfLayers
layerNo
perimeter
layer
count
r
c
i
i
i
i
len
count
i
i
i
i
m
res
i
i
m
n
vis
count
dir
i
j
queue
flag
vtx
k
x
y
m
n
c
count
r
cur
result
i
ans
counter
choiceFiller
m
n
visited
irregularities
length
i
ans
hm
gcd1
rem
n
indices
i
B
i
L
left
right
i
R
i
ans
i
c
i
ans
i
left
right
count
i
m
n
ans
pq
visited
i
j
reg
containReg
spreadReg
di
dj
m
n
dp
j
i
i
j
t1
t2
map1
map2
count
n
k
indexes
i
roomIdsSoFar
ans
i
floor
ceiling
ansAbs
ans
m
n
dp
res
i
j
i
j
m
n
res
j
i
i
j
sum
i
j
res
seats
availableSlots
row
col
slots
taken
left
right
answer
incLow
indx
answer
willBeZero
newisBounded
limit
dig
diff
i
i
i
j
count
i
mbox
i
cbox
xl
yl
j
cbox
xl
yl
c
i
j
sq
r
res
res
tl
tr
bl
br
i
j
i
j
minX
maxX
minY
maxY
max
res
i
j
sum
d
hm
index
list
rankings
pairedWith
i
rank
j
unhappy
a
b
a
b
x
i
ans
N
inv
fact
factinv
i
i
tmp
map
j
gain
min
max
count
result
i
k
c
count
i
count
minLen
i
lastN
i
m
sortedQueries
i
idx
res
i
q
w
e
u
v
uQuery
vQuery
id
uParent
vParent
sum
max
tree
cost
i
current_value
strictly_less
strictly_greater
graph
i
i
u
v
darr
mask
d
maxd
i
q
dist
curr
l
z1
pq
i
j
ans
curr
temp
dis
n
m
vis
queue
dis
len
temp
r
c
ans
i
root
mid
i
i
j
parents
count
i
parent
child
i
curChild
correctChildsChild
maxPower
threePower
i
i
i
isForward
slow
fast
direction
nextIndex
direction
nr
nc
sc
ec
sr
er
res
i
j
insidePipe
count
i
memo
b
h
h1
i
i
diff
count
parent
i
u
v
parentU
parentV
groups
i
group
count
isComplete
end
queue
currentNode
arr
i
pq
i
updatetime
fleet
rem
map
i
count
odd
n
res
stack
i
c1
j
c2
dist
v
say
count
cache
cntr
i
mapper
map
arr
len
i
start
diff
seen
ci
memo
ans
i
mid
root
left_array
right_array
s1Array
s2Array
counter
i
s
ss
stack
prev
number
m
n
rev
i
j
m
n
res
i
j
cnt
total
i
j
k
count
i
sum
check
count
i
j
z
zo
zot
mod
answer
finalString
hm
i
actualChar
i
actualChar
j
stack
arr
i
vow
n
set
i
j
ch
countS
countT
prev
after
i
s1
t1
j
j
i
j
sc
tc
i
dp
i
a
e
i
o
u
k
B
A
x1
y1
x2
y2
slope
i
j
y
x
l
mid
r
val1
val2
i
set
c
done
i
j
graph
list
nmin
nmax
count
list
n
map
i
j
l
r
k
count
i
res
path
visited
i
curr
aCount
aMax
i
bCount
bMax
i
condition3
globalMin
aTillCurrent
bTillCurrent
i
dp
i
y
str
i
j
i
curNode
root
inRoot
nodesValues
rootVal
i
n
num
i
hs
hs1
m
k
j
n
possibleOpens
fixedCloses
i
possibleCloses
fixedOpens
i
c
bin
res
seen
count
i
diff
dupMap
map
ans
count
min
max
indexes
j
hi
i
ttl
t
h
i
N
res
i
t
count
t
count
answer
x
y
r
xx
yy
map
res
i
MOD
ans
size
overlap
notOverlap
tillMax
idx
idx
result
i
fuel_cost
next_trip
answer
rCount
cCount
len
i
i
prevRunLength
curRunLength
count
stack
i
stackTemp
sb
i
c
map
n
less
great
pivot
i
i
count
i
key
v1
v2
i
i1
i2
result
i
matrix
i
row
col
j
j
counter
i
j
row
col
i
counter
k
val
k
val
n
countPairs
low
high
sum
m
n
op
graph
inDegree
i
bfsContainer
i
count
ans
curr
newNode
copy
visited
count
i
val
k
left
i
right
i
sum
i
val1
val2
val3
val4
maxConsecutive
counterConsecutive
i
result
start
prev
i
frequency
i
curr
trie
i
j
i
j
sb
curr
i
c
curr
c
que
totsum
i
max
rem
maxprev
hMap
count
i
l
v
ans
mn
mx
i
d
add
i
i
add2
ans
i
one
two
sb
a
b
res
i
stack
i
sb
i
n
fact
invFact
inv
i
map
i
ans
sum
cur
root
breakPoint
left
right
currSum
currCount
key
n
count
num
rep
i
res
i
count
num
left
right
res
mid
totalDays
totalWeight
i
destinationToPassengers
currPassengersAtPickup
currPassengersAtDrop
currPassengers
maxsum
dp
i
parentSet
q
len
i
parent
gcd
i
t
i
pick
unpicked
ans
count
sorted
res
i
idx
s
e
m
map
minHeap
min
i
hset
total
counts
i
h
n
i
hlen
n
l
r
m
i
n
res
i
nodeRob
l
r
nodeRob
t
i
k
i
pick
notpick
prevHouseIdx
i
from
to
j
lo
hi
mid
ans
dupheights
count
i
len
i
n
j
ans
i
cnt
b
list
L
R
left
right
mid
index
i
i
ori
q
child
lock
cur
cc
leadCount
leadPerson
i
newCount
leadPerson
low
high
mid
i
j
k
sb
sb
i
list
arr
i
result
len
minjmp
maxjmp
map
evjmp
oddjmp
i
minpos
maxpos
res
i
n
ans
i
arr
span
pStock
result
evenHalf
evenHalfPtr
t
visited
q
level
size
elem
i
num1
num2
idx
count
mp
m
i
c
index
x
x
count
i
i
j
ch
bno
obno
obno
count
i
xl
yl
res
i
copyA
count
repeat
i
arr
n
temp
i
result
i
ans
set
minBracket
remove
i
L
R
stack
i
x
row
col
res
i
j
i
j
curRow
encodeLen
i
prevPrefixSum
r
m
map
i
ch
freq
map
i
a
b
temp
arrivals
vis
i
st
sb
i
ch
n
m
offset
n
si
gi
i
tree
tree
leftMost
rightMost
spaces
words
nWords
sb
spacesToApply
extraSpaces
i
j
j
i
index
index
temp
i
ans
i
word
mat
prev_upper
prev_lower
uppersum
lowersum
i
ans
i
j
orderedFreqMap
orderedDigitMap
i
unique
ui
freqs
i
strings
index
value
count
sb
list
bender
start
i
orientationChanged
location
i
temp
len
frontlen
first
second
count
blockActive
result
builder
i
c
ch
d
str
i
str
left
right
l
countN
num
i
arr
countFresh
q
i
j
count
temp
r
c
t
i
a
n
curr
temp
next
digits
i
stringWithoutDigit
N
diffList
i
diff
map1
i
map
tmp
i
low
high
rand
idx
tail
count
p
i
rows
cols
i
j
res
n
parent
e2
e1
twopt
from
to
i
res
from
to
fromlead
iscycle
from
to
fromlead
words
i
res
i
temp
j
sum
min
n
i
temp
freq
freq2
min
ans
charArray
hashMap
queue
i
occurence
tmpQueue
sizeQueue
stringLength
startSub
endSub
lastLetter
letterAdded
i
letter
ch
start
end
hash
i
i
temp
ans
stack
j
sb
res
index
count
i
ql
i
ans
k
i
j
temp
greatElement
i
temp
number
i
root
str
bk
j
divide
left
right
res
node
chs
i
ch
iToPairs
start
n
writeIdx
restored
next
pq
i
ans
i
k
i
num
left
right
mid
n
dq
sb
i
newString
count
c
locate
i
res
i
i
result
uf
i
rootX
rootY
map
i
j
k
sb
list
index
point
entry
rectPoint
rect
size
deletedSize
countIteration
hashMap
queue
i
totalOccurence
parentAlice
parentBob
i
mergeAlice
mergeBob
removeEdge
cat
u
v
tempAlice
tempBob
tempBob
tempAlice
temp
lx
ly
oldvalue
temp
mid
left
right
mid
x1
y1
x2
y2
area
R1
R2
overlap
pq
res
a
change
al
i
size
idx
curr
group
temp
k
t
k
t
curr
k
max
number
i
temp
dp
ind
i
tempList
i
index
start
end
mid
n
dp
i
j
k
m
ans
len
i
j
k
s1
s2
s3
s4
i
rectangeCoordinates
length
breadth
key
rectangle
length
breadth
x
y
up
rt
i
len
monthArray
year
month
day
sb
i
t
idx
m
n
answer
map
i
j
xy
val
minX
minY
list
lSize
i
xMap
yMap
i
xy
x
y
xList
i
yList
i
group
i
grp
max
sublist
x
y
x
y
pa
pb
pa
temp
i
times_repeat
str
j
x1
y1
x2
y2
x3
y3
x4
y4
valMap
i
mapSize
opsCount
slow
fast
list1
list2
l1Next
l2Next
newHead
currNode
backup
n
coorx
coory
compressx
compressy
mapx
i
mapy
i
grid
x
y
res
i
j
n
teams
map
chars
i
team
i
round
j
l1
l2
i
sb
st
i
ch
ans
temp
last
array
i
i
n
result
i
minLine
maxLine
i
diff
i
i
ac
cm
i
min
m
missingCount
res
a
temp
n
i
j
i
j
n
mid
n1
n2
a
b
i
j
idx
i
j
k
ans
mid
res
map
i
rank
al
n1
idx
t
t
hcf
graph
heap
ans
vis
info
nearestNodeId
maxMovesRemaining
i
movesTaken
mask
smask
j
rev
i
numOfNodes
ptr
start
end
f
count
temp
n
i
temp
count
ch
cnt
i
sb
ans
str
start
end
temp
ans
i
j
k
l
max
min
minInd
maxInd
n
i
count
count1
count
count1
n
i
ans
i
k
bool1
bool2
m
words
resultBuilder
i
numOfNodes
ptr
start
end
f
count
temp
n
i
temp
count
dp
j
j
i
sum
steps
set
str
left
right
temp
queue
visited
item
currPos
currSpeed
distance
nextPos
nextSpeed
posSpeed
cntA
cntB
i
n
ans
excess
cnt
i
j
n
i
last
present
i
finalEnd
prev
next
i
length
first
curr
node
n
i
dummy
prefix
curr
seen
str
i
a
asci
c
rows
cols
i
j
res
map
i
stringBuilder
i
j
res
resIdx
posIdx
minusIdx
i
map
count
freq
res
beforeSum
i
currNum
sum1
sum2
i
result
i
lastIndex
i
seen
st
i
curr
sb
map
i
arr
ind
i
j
j
result
c
d
ans
i
a
b
minRow
minCol
l1
l2
l
l1
l2
ans
used
i
po
ao
i
i
ans
i
j
ar
out
i
in
j
level
upper
parent
i
min
max
ans
N
res
i
j
j
l
r
res
tmp
count
i
n
count
i
j
stop
cont
n
dp
sub
c
sub
state
letters
fav
set
i
i
j
ans
result
left
right
i
curr1
curr2
prev
max
memo
i
tempk
half1
half2
temp
p
key
max
c
i
adj
indegree
completionTime
i
u
v
q
i
u
res
i
c
j
i
s
i
j
result
i
n
sum
sets
i
curSum
m
j
res
i
curSum
m
j
target
left
right
set
i
j
fact
nums
i
res
mts
mtp
idx
i
val
mid
headSecond
reverseHead
prev
present
next
temp
count
mid
i
hm
n
i
res
i
i
i
personA
personB
personASetRepresentative
personBSetRepresentative
flag
blackListPersonARepresentative
blackListPersonBRepresentative
root
curr
next
root1
root2
begin
ret
vars
var
e
v1
v2
v1
v2
var
negative
ret
sb
c
n
dp
g
i
j
i
j
sum
i
c
prev
i
res
i
adj
i
i
probs
pq
curr
perfect_squares
i
dp
answer
nottake
take
temp
i
list
visited
i
lr
mp
count
i
list
n
maxIndex
i
l
temp
s1Count
s2Count
i
c
s
matches
i
left
right
index
ans
hm
res
res
left
right
left
right
leftTail
rightTail
min
j
cost
minCut
n
count
i
i
count
i
b
n
val
i
i
arr
i
s
adj
i
i
j
dp
i
sum12
i
res
cur_sign
flag_res_init
cur_char
res
str
a
max
i
ch
arr
i
i
x
j
i
x
len
st
val
visited
x
y
res
fact
i
need
colors
a
b
i
ans
i
minPartitions
i
substring
partitions
decimalValue
n
resp
t
resp
firstTry
secondTry
sLen
numberOfPlates
i
candleToTheLeft
cand
i
candleToTheRight
i
res
i
left
right
res
i
arr
i
j
prime
notPrime
k
x
y
t
list
i
temp
temp2
j
out
i
in
j
sum
X
list
i
temp
temp2
j
availableServer
i
processingServer
result
i
serverIndex
currentTaskTimeRequired
server
freeTime
serverIndex
pq
i
curr
x
prev
prev
n
n
max
dp
i
x
j
sum
i
dp
i
a
b
minHeap
rows
cols
effort
i
dr
dc
current
distance
row
col
i
newRow
newCol
newEffort
len
i
ret
j
T
cnt
total
i
x
y
x_set
y_set
count
n
i
per
sum
addSet
ok
dp
i
i
totalArea
max
c
max
row
n
small
prev
i
indte
te
j
tem
res
height
row
column
k
list
i
left
right
level
mid
left
right
minCost
j
minCostHere
dp
ans
cur
d
ela
sum
count
sum
tempSum
count
i
n
pre
suff
i
i
ans
i
start
end
mid
i
j
val
head
prev
curr
drinkedBottles
emptyBottles
gainedBottles
unusedEmptyBottles
arr
map
i
ch
g
count
c1
c2
start
end
L
arr
i
diff
i
size
i
res
mod
i
left
right
pos
min
lo
hi
mi
mid
max
pos
min
lo
hi
mi
mid
max
i
j
starIdx
lastMatch
vis
i
j
is
k
rd
cd
is
count
evenLeft
oddLeft
evenRight
oddRight
i
i
remain
pos
res
root
m
n
cArr
dummy
i
j
nextChar
visited
res
newI
newJ
nextChar
i
left
dir
farthestSofar
xloc
yloc
set
steps
indexCopy
i
str
i
j
pos
i
j
neg
not
take
not
take
dict
adjacency
queue
found
size
explored
word
adjacents
adjs
wordChars
i
c
temp
newAdj
paths
adjacents
adjPaths
newPath
m
ar
j
count
words
q
size
word
chList
i
tmp
c
newWord
list
bmax
b
i
a
i
ans
a
left
right
i
count
c
i
sb
carry
i
j
sum
x
sb
ans
bucket
nextBucket
toBucket
nextBucket
toBucket
prevBucket
prevBucket
nextBucket
bucket
oldBucket
newBucket
count
oldBucket
newBucket
count
maxSet
minSet
i
j
res
curr
carry
sum
curr
prev
next
q
i
j
p
x
y
k
r
c
newP
i
j
result
pointer_1
pointer_2
carry
current
sum
a
b
idx
len
negaBinary
i
map
i
pq
ans
pq
a
b
c
i
bill
i
p
price
n
max
min
sum
i
n
dp
i
i
next
j
sum
m
currLong
i
x
y
sb
i
ch
x1
y1
ans
i
d
n
dp
i
si
count
i
n
dp
i
ans
i
j
cd
endingAtj
endingAti
dfs
ans
temp
visit
b
dummy
temp
carry
sum
node
l
r
mid
time
waitingTime
stack
ans
i
ans
row
col
i
j
j
i
s
e
mid
coin
i
temp
st1
st2
res
Solution
nthPersonGetsNthSeat
sum
i
result
L
ll
ind
i
arr
k
L
b
i
hrPos
units
start
ns
cIndex
i
a
b
n1
n2
li
i
map
q
distance
visited
size
i
current
ans
q
size
i
current
N
res
pref
i
maxScore
onesToRight
zeroesToLeft
currScore
i
q
ans
qlen
row
i
curr
temp
res
i
right
left
temp
res
visited
i
len
j
curr
sb
map
zeros
res
i
next
pq
i
left
right
get
pos
max
res
i
map
zeroCount
out
len
val
val
l
uf
emailToNameId
i
account
j
email
currentNameId
oldNameId
nameIdToEmails
i
root
account
emails
out
name
emails
i
rootX
rootY
splitter
res
h
key
minStep
nextHand
nextBoard
childMinStep
splitter
red
yellow
green
blue
white
res
greedy2
greedy3
i
copy
builder
i
ind
up
idx
currEmpIdx
currEmp
totalImportance
m
n
sum1
sum2
diff
count
res
i
c
n
pow
res
i
c
blocks
visited
q
count
temp
trav
i
j
key
map
row
col
i
res
j
cnt
j
res
i
count
map
hm
comp
val
n
time
i
eliminated
i
m
n
dp
i
j
min
i
result
stack
sArr
functionId
startOrEnd
timestamp
pair
oldFunctionId
oldTimestamp
pair
oldTimestamp
replacementPair
stack
a
b
temp
len
freqString
currFreq
prevChar
i
sLen
wordLen
i
sChar
wChar
wordLen
stretchyWords
freqStringS
freqStringWord
ans
i
countMoves
yIndex
xIndex
j
dist
len
varMap
varCnt
i
edges
i
i
va
vb
queriesCnt
ans
i
query
result
idxA
idxB
points
ratios
cur
y
value
egg
dp
min
i
eggBreak
noEggBreak
moves
ans
distA
distB
inter
idx
lo
hi
head
remain
left
step
n
plants
totalPlantTime
i
maxTime
map
sb
b_start
i
key
n
m
Q
visited
at
moves
ii
jj
n
m
dist
Q
i
j
at
moves
ii
jj
left
right
ans
mid
qu
even
size
prev
rem
i
encrpted
sb
i
c
points
res
n
dup
hull
i
top
i
top
tmp
ans
i
cp
ptr
i
ans
i
map
n
max
i
j
numLetters
numLettersAtLeastK
depth
q
count
size
i
cur
set
left
right
left
right
first
second
N
dp
maxi
i
j
increasing
decreasing
i
j
max_length
max_val
min_val
count5
count10
i
len
j
open
closed
ch
arr
i
temp
n
index
res
i
storage
i
maxL
i
dec
inc
tempL
i
groups
i
count
max
i
map
result
i
result
l
r
diff
max
i
nextdiff
result
i
j
temp
s
i
j
maxSize
i
pq
j
size
curr
memo
longestPath
i
j
dirs
max
k
x
y
p
i
ans
list1
list2
i
res
start
end
mid
res
start
end
mid
maxLen
i
a
b
luckyNums
n
m
min
index
lucky
col
r
left
right
ll
sb
grp
i
length1
length0
i
temp
stack1
stack2
n
left
right
width
i
i
i
mxArea
i
n
dp
result
k
i
j
sum
result
length
max
path_to_p
path_to_q
n
anscesstor
i
ans
l
r
myAns
max
DP
ans
ch
n
i
j
maxIndex
currIndex
i
j
totalSize
A
B
C
sb
i
map
i
j
i
j
map
evenNo
oddNo
i
c
n
arr
i
builder
fre
ans
flag
fff
ch
fre1
ch1
f
m
freq
left
odd
i
j
res
list1
list2
i
left
right
leftMax
rightMax
i
i
u
v
sb
i
map
i
j
ans
f1
f2
ch
count
replace
ch
count
replace
max
i
temp
verify
answer
length
i
m
n
dp
max
i
j
len
k
len1
m
n
rows
cols
res
r
c
len
i
sb
i
j
w1
w2
n1
n2
max
prefSt
prefEnd
suffSt
suffEnd
tm
tm
k
tree
i
arr
i
dpTop
dpLeft
dpRight
dpBottom
i
j
i
j
maxPlusSignLength
i
j
minAdjacentOnes
count
set
i
count
maxCount
i
max
i
i
n
sum
i
sb
i
modOne
i
idx
i
modTwo
i
idx
i
sb
i
ans
i
n
i
maxHeap
i
labelLimitMap
sum
label
ans
n
i
j
k
temp
n
i
index
index
pq
i
count
sb
size
start
i
groups
i
count
max
i
n
prefixSumTiringDaysMinusNonTiringDaysArr
prefixSumTiringDaysCount
prefixSumNonTiringDaysCount
i
noOfHoursWorkedToday
longestLengthOfContinuousPositiveSequence
currentSlidingWindowLength
i
j
currentIntervalNoOfTiringDaysMinusNonTiringDays
lengthOfLongestWellPerformingInterval
max
smax
i
stack
max
lines
tabs
current
nameLength
i
temp
pr
nx
node
val
node
list
list
node
higherFreqList
max
i
leftLength
rightLength
j
j
map
c
val
N
ans
dp
hash
i
lastindex
maxi
i
j
hash
count
ans
i
grid
low
high
ans
mid
i
i
j
i
k
existing
existing
newNode
temp
pr
nx
max
map
i
target
currAns
a
i
i
p
maxCount
count1
count2
pair
freqMap
pq
element
toBeDeleted
times
queue
ans
count
bit
sb
i
res
cnt
e
h
p
M
i
lo
hi
st
end
mid
seen
hash
ok
i
tortoise
hare
map
list
visited
i
list
currMap
resMap
val
currVal
currentNodeColorCount
m
n
rowPrefix
i
j
columnPrefix
i
j
result
i
j
l
k
target
k
k
diagonal
k
k
numOfZeros
numOfOnes
i
ch
sum
i
ch
val
m
n
dp
i
j
min
max
i
ans
mid
map
hash
set
i
i
new_hash
val
ans
n
longest
dp
i
j
diff
fast
slow
result
ans
map
i
ch
current
result
i
m
n
rows
cols
res
r
c
len
i
n
i
i
i
cand
opq
epq
bnum
cur
sb
cur
lis
size
insertIndex
lo
hi
mid
i
pq
i
r1
r2
sb
s2
dp
i
j
ch1
ch2
n
arr
lps
i
j
j
sb
i
maxNum
numToFirstPrimeFactor
ds
primeFactors
firstPrimeFactor
i
componentToSize
maxSize
firstPrimeFactor
component
size
maxNum
primeFactors
primeFactor
i
rootX
rootY
i
n
startIndex
substringLength
digit
result
j
digit
set
s1
s2
c
i
temp
i
j
m
n
j
len
flag
level
q
i
j
size
p
ones
i
i
j
a
b
A
i
min
peak
i
llans
i
j
l
r
ressum
ll
rem
copied
ans
onScreen
cnt
res
i
j
k
i
r
score
answer
q
res
flag
size
curr
i
left
right
i
binary
r
result
set
currentSet
isAdditive
currentString
currentList
i
tempStringList
list
tempList
tempList
tempSet
mid
mid
mid
c
mid
row
col
sum
i
t
result
i
j
i
j
dels
ans
ans
i
left
right
list
i
finalScore
result
i
j
n
maxSellProfit
min
maxSellArr
i
maxBuyArr
j
max
maxProfitTwoTrans
k
result
rootList
children
children
ans
ans
ans
next
ans
cnt
free
ans
keys
i
cur
ans
tmp
end
b
a
op
ans
vars
i
n
nums
ops
i
a
end
cur
now
n
s
queue
i
size
j
tmp
arr
mid
node
l
r
mid
result
res
num
preSign
n
c
left
right
leftBalanced
rightBalanced
leftHeight
rightHeight
n
temp
i
dp
max
n
coins
count
cx
cy
n
center
step
min
dx
dy
totalDist
dist
val
next
list
sum
i
arr
bulls
cows
i
sec
gue
a
b
c
d
lenS
lenGoal
flag
hset
i
i
arr
ans
i
res
i
left
right
maxInTheNode
boatCount
left
right
sum
n
dp
index
buy
profit
ls
rs
parent
max
edge_frequency
max_frequency
row
edge_postion
brick_no
current_brick_length
left
right
c
sb
sb
flag
n
combined
i
ans
i
ans
prev
n
dp
ans
i
k
used
floor
unused
r
a
a
product
result
sign
i
transaction
N
dp
i
j
tran
profit
M
ans
dp
i
i
next
j
p
w
i
sb
temp
rem
li
pre
cnt
m
n
i
i
left
right
max
card
ch
arr
i
al
fal
aal
num
i
dp
maxProfit
yesBuy
noBuy
yesSell
noSell
res
i
i
i
res
i
row
col
stableBricks
r
c
r
c
lsf
op
pist
i
n
profit
i
result
st
curr
op
ch
i
sum
m
n
i
j
i
j
ans
r
c
i
n
c0
i
set
morse
i
temp
j
list
map
arr1
arr2
i
i
res
i
res
i
left
right
head
n
chArr
firstOcc
lastOcc
i
ch
ans
count
visited
i
si
ei
j
dp
i
j
set
c
i
m
n
path
i
j
sol
i
j
N
res
len
counts
i
ch
idx
low
high
ab
bc
ca
abc
mid
count
a
b
t
ans
finalEmails
name
ignore
i
c
n
chArr
firstOcc
lastOcc
i
ch
ans
count
visited
i
si
ei
j
m
n
dp
i
j
dp
i2
i3
i5
i
i
i
u
v
i
u
v
i
i
i
ren
temp
sum
ans
k
idx
n
res
i
visited
res
i
curr
i
diff
i
st
score
i
ch
string
dataArr
root
i
hm
max
name
i
words
freq
inStack
lastIdx
i
dq
i
ch
sb
n
i
a
arr
i
flip
j
i
zero
one
j
j
sum
i
num
j
isNegative
c
str
non
temp
sb
result
withCurrent
left
right
fast
slow
first
second
i
temp
memo
diff
totalSum
score
maxScore
X
minScore
X
tar
src
i
j
visited
level
q
t
rem
idx
i
i
str
sb
subset
temp
startInd
intAscii
specialCharacters
i
ascii
small
large
numbers
specialChars
i
ascii
sb
i
result
sum
i
zeroIndex
twoIndex
i
temp
count
totalCount
queue
i
current
i
max
i
j
color
c
i
j
other
bitCount
i
result
i
freq
i
maxVariance
a
b
remainingA
remainingB
currBFreq
currAFreq
i
c
s
e
p
a
ans
i
s
j
nl
nr
count
i
answer
data
q
size
i
node
i
s
d
root
q
size
j
node
l
r
stgTable
l
stg
list
idx
strIdx
i
size
j
res
i
addAmount
i
notTakeOffer
takeOffer
current_special
i
current_need
update
canTake
i
items
offers
sb
x
list
i
lastOne
lastTwo
interval
start
end
pq
map
i
res
ball
nextBall
times
diff
sum
ans
top
left
bottom
right
i
i
i
i
n
vow
pos
i
ch
answer
i
left
right
leftMax
i
rightMin
i
beautyCount
i
i
lowerKey
i
j
l
h
mid
arr
i
first
i
hm1
hm2
i
c
temp
temp
sb
temp
i
i
i
j
il
jl
pq
i
i
il
ch
sb
i
il
ch
pq
max
i
rbeg
rend
rsize
rem
crsize
n
m
pairs
i
spell
left
right
mid
product
stack
ans
dp
i
cur
rows
cols
lo
hi
mid
prospect
i
l
h
mid
n
cnt
max
res
r
l
sum
v
row
col
firstColumnZero
firstRowZero
i
i
i
j
i
j
i
j
memo
perfectSquares
i
cache
i
j
k
count
min
max
diff
n
index
ans
i
i
area
n
i
j
sLen
tLen
reversedCharIndices
isReversedCharOfThisIndex
stack
widowList
windowStartIndex
matched
notMatched
j
charIndex
reversedCharIndex
start
end
windowIndex
i
result
n
temp
ans
index
n
sum
left
right
start
mid
mid
max
ch
i
diff
graph
i
ans
u
v
hmap
vis
i
div3
smaller
larger
ch
i
i
j
temp
dp
pq
i
i
curr
newval
n
ans
st
i
count
pq
map
i
res
ball
nextBall
times
diff
sum
res
licensePlateCount
res
min
wordCharCount
flag
i
i
minHeap
maxHeap
res
i
temp1
temp2
m
n
i
j
i
j
dummy
prev
curr
length
product
i
j
n
ans
depth
q
count
size
i
cur
set
left
right
left
right
sum
i
prevSum
j
res
i
x
counts
res
i
pq
res
segment
i
j
pri
p
p
s
flag
i
left
right
a
b
N
INF
parent
who
dp
i
k
cur
j
ans
i
cur
res
i
prevSign
sumX
sumNums
i
coEff
j
leftNRight
left
right
leftEqn
rightEqn
x
num
numsClone
s
e
i
input
ID
count
id
len
wordLen
numWords
windowLen
lastIndex
curWordId
cur
i
res
i
winMap
j
candidate
flag
node
count
i
index
trie
size
q
d
n
i
node
i
ch
node
len
i
ch
n
ans1
ans2
sum
i
s
ans
i
s
ans
i
list
numerator
denominator
i
j
c
i
n
minScore
p
min
max
firstLast
lastFirst
minLength
i
low
high
min
i
mid
chunks
i
val
numStack
i
m
n
visited
up
down
q
tmp
x
y
steps
i
x_new
y_new
arr
j
k
i
bigNum
m
n
arr
i
j
column
row
g
u
v
q
uniqueVisit
dis
size
cur
node
t
ans
place
countEl
max
i
i
tmp
whereToStop
tmp
temp
count
count
xd
temp
ch
i
ans
ans
min
i
max
i
sum
i
charCount
j
beauty
queue
l
r
res
index
n
m
m
n
dp
i
j
i
j
res
memo
key
keyVal
ch
count
nextIndex
i
totalCount
prevCountRepresentation
representaionLength
ans
i
currentCount
length
holder
i
j
len
reverseMap
i
j
left
right
ans
mid
x_diff
y_diff
container
visited
curr
currVal
i
newX
newY
sr
sp
sp
path
op1
op2
op3
op4
min
n
one
three
count
i
pos
prod
i
val
arrInt
i
aBits
bBits
i
bits
arr
temp
len
partition
extra
curr
prev
index
i
n
base
base2
j
ans
i
lo
hi
res
mid
h1
h2
stack
lesserLeft
i
count
lesserRight
i
count
greaterLeft
i
count
greaterRight
i
count
ans
i
MOD
ans
p
i
parentIndex
leftChildIndex
rightChildIndex
maxIndex
temp
len
i
i
temp
mod
len
prefix
stack
ans
i
mid
left
right
n
t
val
right
mid
left
n
t
val
prefix
i
doublePrefix
i
pivot
ans
start
end
mid
mid
i
c1
c2
sign
p1
p2
c1
c2
sign
p1
p2
freq
subEnd
num
num
startingRow
endingRow
startingCol
endingCol
total
element
matrix
i
i
i
i
n
res
sumBelow
sumTotal
i
num
n
a
i
al
bo
i
index
i
j
count
n
sum
a
b
i
j
i
high
low
min
k
l
r
temp
paths
st
sb
que
level
vis
size
rem
idx
lad
sna
i
x
val
map
count
n
flag
i
j
j
ans
ch
i
currChar
ans
even_pointer
odd_pointer
i
n
next_small
prev_small
stack
i
i
i
len
current
i
map
count
sum
i
mid
left
right
head
tail
midprev
mid
count
i
j
flag
k
k
i
n
i
n
l
r
m
list
index
index
hit
n
ans
len
set
ans
rowBegin
rowEnd
columnBegin
columnEnd
cur
i
i
i
i
arr
arr1
i
i
c
n
m
ch
string
i
toAppend
result
result
result
top
queue
i
groupId
groupItems
itemQueue
item
index
i
i
n
allVisited
visited
q
i
step
size
i
p
edges
path
left
right
len
dp
i
l
i
j
k
numMissingComponents
n
repeats
over
numRemoval
i
repeat
i
repeat
numReplace
reduce
repeats
i
last
digit
upper
lower
graph
countSubNodes
distances
graph
children
children
n
m
i
i
dig
r
c
k
ans
dig
isOdd
innerLen
innerLim
midPos
midLim
edge
pal
inner
innerStr
i
mid
palin
square
i
j
sb
mul
sum
index
i
res
map
i
even
odd
length
i
e
o
i
startL
startR
endL
endR
stLR
edLR
i
dp
i
j
k
k
map
count
sum
i
rem
maps
sum
min
i
n
res
i
oneIndex
i
graph
i
children
visited
parentIter
miss
children
start
end
ans
mid
startToRoot
endToRoot
i
j
cnt
sPath
ePath
size
n
cnt
i
res
mod
dp
tot
j
dp
xor
rightmostBit
num1
num2
lowSize
highSize
output
size
seedNumber
increment
limit
seed
i
increment
i
result
hmap
i
stringData
str
subDomains
j
i
l
r
mid
sum
count
left
right
max
i
i
i
visited
queue
found
i
j
level
size
pair
k
rowDash
colDash
k
rowDash
colDash
arm
leg
i
a
b
p
powerArr
memo
i
power
n
dup
miss
i
count
j
ans
k
y
hm
left
right
ans
m
n
numKeys
startRow
startCol
i
j
c
keyMask
start
queue
visited
steps
size
i
j
keys
di
dj
newKeys
c
newState
that
prime
hash
left
right
removeLeft
removeright
map
q
curr
pq
ans
temp
n
ans
outdegree
out
i
j
from
toList
i
j
stack
star
i
ans
map
pattern
lo
i
lo
re
st
j
stack
pA
pB
uf
indeg
i
l
r
l
x
a
b
c
d
area
haha1
haha2
i
i
i
visited
chToDigit
maxLen
ch
selectedDigit
ans
word
ans
ch
newSum
ans
k
newSum
ans
n
count
k
i
j
sum
x
o
res
i
j
toWin
i
j
col
i
diagonal1
diagonal2
val
alp
i
flag
i
j
count
len
pos
regexIpv4
regexIpv6
set
leftRight
i
j
currentVal
strs
vacancy
a
bool
i
i
n
interval
cuts
can_reach
i
j
start
end
mid
result
strLen
index
queue
i
i
j
result
x
res
r
l
board
n
i
j
row
column
results
permutations
i
i
query
j
temp
len
ans
i
count
radius2
p
point
x
y
ans
fib2prev
fib1prev
temp
fiboArray
i
i
m
sum
x
arr
p
q
map
i
arr
i
num
freq
rem
res
ans
i
i
fullMatchCount
anagramMap
result
left
right
currentMatchCount
currentAnagramMap
c
leftC
peak
left
right
start
end
mid
mid
max
i
i
availableServerIdxs
num
runningServers
serverHandledReqCount
idx
newTaskCompletionTime
freedServer
serverIdx
max
locMap
i
idx
hi
lo
hcost
lcost
row
i
list
minHeap
i
i
candidate
num2Idx
pq
i
l
res
index
haylength
needlelength
i
j
res
i
temp
palindrome
res1
g
xor
targetIdx
pivotIdx
pivot
lo
mid
hi
tmp
rows
cols
xor
r
c
xIdx
i
rooms
dp
mod
i
ans
j
i
i
ans
i
n
n
i
a1
b1
graph
i
k
i
j
ans
city
i
current
j
i
j
i
k
temp
map
max
temp
start
end
res
map
leftMost
list
hashes
added
s
tmp
stack
tmp
array
i
str
s
n
i
mid
n
result
res
i
j
max
i
z
o
curr
prev
ans
i
ind
smaller
equal
indices
i
prev
li
i
ch
curr
i
cur
lisSize
lis
ans
left
right
boundary
mid
x
val
count
map
state
ans
i
bit
odd
mask
j
won
loss
ans
wonAllMatches
lostOneMatch
i
ans
start
end
ans
start
end
mid
map
sum
i
size
res
i
res
mask
n
seen
i
c
timeToIndexes
m
i
uf
pool
currentMeeting
ans
i
i
rootP
rootQ
list
heap
answer
sb
usersMap
user
min
result
uam
m
res
left
right
i
diff
hasZero
p
q
k
j
hset
map
i
arr
i
num
freq
rem
res
ans
i
i
str
count
i
temp
n1
hmap
i
i
c
x
y
xorSumX
answer
ans
sq
participants
i
lastKilled
i
j
i
correct
temp
i
correct
index
temp
graph
i
u
v
colored
available
i
j
k
flag
l
i
fizz
buzz
pq
i
res
i
curr
idx2
result
map
set
i
ch
mc
l
h
mid
rcd
turn
AorB
min
index
i
d
sum
left
i
graph
i
i
vis
count
ans
leftsum
rightsum
i
i
nonincrease
i
nondecrease
i
result
i
freq
i
result
copy
pass
j
n
ans
visited
dfsVisited
nodeCycles
i
i
mid
res
freq
idx
i
min
closest_num
min
i
f
i
j
start
end
ref
subst
tgt
i
res
count
avail
i
count
x
y
i
i
i
jud
i
c
i
i
x
y
pq
u
v
wt
uf
cost
rem
mstCost
critical
pcritical
i
edge
mstCostWithoutEdge
mstCostWithEdge
res
obj
count
i
str
n
ktr
k
i
pu
pv
critical
pseudoCritical
i
edge
mstwt
i
result
uf
weight
i
i
p1
p2
n
i
ans
i
idx
start
end
res
ch
j
arr
brr
crr
i
j
set1
set2
resultList
max_alt
curr_alt
i
res
sum
count
i
start
end
mid
L
R
totalSum
res
count
ans
num
comp
mid
half
pref
i
st
min
ans
i
dif
l
l
l
l
m
a
t
key
currBook
result
n
zeroToOne
countOfOnes
i
n
ans
i
r
ret
sign
g
map
qu
list
tmp
max
res
i
start
end
mid
similarity
swap
l
h
mid
ans
i
k
t
powers
i
currentHashValue
index
powerIndex
startIndex
i
result
list
i
n
discount
i
j
k
dp
path
i
j
k
m
idx
end
ans
left
right
i
i
min
i
ans
i
j
sum
dir
i
i
i
j
i
j
temp
i
j
res
str1
str2
res
q
size
res
temp
res
i
indx
i
result
low
high
i
root
ans
max
left
height
right
maxHeight
mid
mid
m
n
rows
cols
str
count
i
temp
n1
res
minidx
curridx
lastidx
prev
ptr
idx
minD
low
high
mid
count
i
j
length
i
winner
count
i
left
right
mid
res
res
i
ans
temp
node
i
node
sb
divisor
dividend
remainder
map
l
r
m
val
i
s
e
mid
stack
i
j
curr
tail
stack
child
status
prereqs
i
output
i
rsum
lsum
k
k
n
res
map
i
i
interval
l
r
m
n
colors
i
q
cur
nameToTransaction
i
t
invalid
split
i
j
dp
i
j
ans
i
output
sumMap
countMap
i
len
i
tempA
tempB
lenA
lenB
i
i
temp
index
temp
index
list1
list2
i
i
x
p
row
col
perimeter
i
j
dp
ptr
ans
tempQueue
ans
count
i
res
a
b
c
d
diff
i
temp
result
freq
remaining
i
i
i
sb
i
cur
temp
prev
nxt
dp
ans
ptr
contains
pq
pq
indexToRemove
lastIndex
valLast
temp
index
merged
i
i
x
y
index
last
r
i
j
ans
a
b
res
val
val
rows
cols
i
j
sum
count
x
y
i
j
n
visited
graph
i
i
j
queue
answer
size
i
vertex
sortedQueue
finalAnswer
ans
i
th
mul
hm
ch
sb
str
temp
temp
res
start
count
max
curr
i
m
n
next
i
j
i
j
ones
x
y
a
b
nums
max
i
totalFuel
totalCost
n
i
i
start
currFuel
i
end
maxThree
length
end
end1
start
start1
sum
it
it
it
it
n
parents
ranks
i
masks
i
val
j
seen
i
j
p1
p2
a
b
xor
and
xor1
xor2
map
max
i
f
cnt
p1
p2
angle
rad
ret
max
notprime
index
i
j
sorted
len
max
map
i
group
num
existing
i
group
list
i
i
length1
length2
temp
i
sLength
bool1
bool2
temp
temp2
s
string
i
currSum
sum1
sum2
i
j
temp
result
i
k
flag
j
res
tempRes
hashmap
isGrouped
index
word
j
string
evens
odds
isSpecialEquivalent
i
i
character
r0
r1
r2
i
nr0
nr1
nr2
a
b
c
ans
tempcost
l
r
sb
temp
n
preRow1
preRow2
i
res
i
top
bottom
temp
set
ch
left
right
mid
dp
min
i
row
col
d1
d2
cellno
i
row1
col1
cell
dir
ans
i
row1
col1
cell
val
rowval
colval
d1val
d2val
j
rowdash
coldash
cellno1
val
rowval
colval
d1val
d2val
map
i
vis
queue
level
size
i
rem
res
idx
i
j
s
sb
chi
chj
n
queue
i
cur
inner
i
i
path
k
m
j
node
path
idx
curr
next
dir
p
i
j
d
ni
nj
sum
i
j
length
mid
row1
row2
row3
res
i
sum1
sum2
sum3
j
resArr
i
MOD
opt
i
j
curr
max
n
temp
i
sum
visited
N
sum
i
ret
i
temp
vis
queue
level
size
i
rem
res
idx
i
j
s
sb
chi
chj
n
ways
i
cnt
hc
j
map
result
i
m
n
lo
hi
mid
cnt
l
r
p
c
mul
l
r
p
c
mul
map
result
ans
pq
quad
temp
queue
m
n
dist
dirs
size
p
newX
newY
result
theHighest
i
mathLogic
i
max
ans
i
left
right
mid
num
time
i
pq
dist
cnt
l
d
res
dist
set
list
qu
p
s
i
dp
tmp
i
j
arr
res
i
lo
hi
mid
ans
i
res
length
chars
left
right
c
minHamming
uf
firstIndex
secondIndex
map
i
num
root
store
i
num
root
store
i
rootP
rootQ
map
min
i
x1
y1
j
x2
y2
area
isRectangle
dp
res
i
temp
md
m
n
pq
i
j
c
ans
uf
cur
i
dp
ans
max
sum
j
total_waste_upto_j
newList
newHead
newtemp
temp
sum
node
res
map
i
val
size
i
dp1
dp2
sum
i
i
max
i
max1
i
i
i
max2
xFound
yFound
zFound
i
i
j
tmp
sum
k
n
target
vis
m
len_s
len_sub
pos
i
j
cont
lenlefts
lenleftsub
map
min
i
minSum
maxSum
currentMinSum
currentMaxSum
map
count
i
rows
cols
preSum
i
j
lo
hi
m
r
c
sum
round
taskMap
i
n
gcdVal
i
j
dp
i
bits
ans
sb
diff
i
hm
t
res
temp
tcs
t
list
i
i
result
i
h1
h2
x
y
anstillnow
left
right
mid
curr_trips
sb
lenmax
i
res
k
newI
newJ
mod
snums1
maxDiff
pos
newn1
i
n2
origDiff
floor
newDiff
diff
ceiling
newDiff
diff
sum
i
lo
hi
max
mid
lo
hi
min
mid
min_from_right
i
chunk_count
max_cur
i
f
n
hs
i
i
j
p1
p2
map
infected
j
p
max
ans
par
total
index
corak
i
ans
sum
count
i
dp
i
min
n
prefixSum
ans
i
i
leftPrefixSum
j
rightPrefixSum
j
n
totalSum
sum
i
score
i
j
subsum
i
j
k
sum1
sum2
n
i
res
n
masks
i
largest
i
j
diff
order
i
ops
res
sum
length
toRemove
total
i
i
netLosingCost
maxCashBack
maxCost
ans
tails
i
size
j
low
high
mid
ans
k
ans
k
n
dp
i
j
ans
k
n
max
count
answer
choosen
len
i
answer
i
m
n
rows
cols
rowMaxVals
colMaxVals
rowSubMaxVals
colSubMaxVals
i
i
queue
i
j
res
arr
val
row
col
cur
i
step
memo
max
max
res
i
n
ans
i
t
j
c
target
ans
flip
i
n
set
q
count
nextq
p
r1
r2
c1
c2
prime
result
p
set
pairs
sb
str
m
n
t
i
j
i
j
visited
i
jumps
q
ud
u
d
tFrequencies
i
wFrequencies
i
min
i
count
max
maxi
i
nextmax
i
ans
m
i
n
i
count
max
i
currBatSum
target
batSum
lower
upper
res
mid
position
digitInTheNextPosition
k
position
ans
i
f
j
n
diff
i
i
ans
sum
i
i
j
max
n
sum
x
count
ans
n
i
y
unique
hs
j
arr
index
i
carry
column
j
a
temp
ans
i
left
right
minHeap
currentDay
eatenAppleCount
i
validDay
apple
apple
key
output
output
set
n
dp
i
a
b
c
left
right
middle
time
i
rows
cols
dirrections
adj
visited
queue
res
i
j
list
newRow
newCol
isInBoard
i
j
count
currentStr
current
row
col
isLand
newRow
newCol
newIsLand
sb
gaps
i
last
lsum
rsum
wlsum
wrsum
i
i
ans
p
q
r
left
right
res
mini
max
n
ans
buffer
onesAfter1stZero
found1stZero
i
count
i
x1
y1
x2
y2
x3
y3
newHead
newNode
sum
max
i
al
map
degree
src
dest
q
i
count
size
src
child
parent
left
right
match
window
i
c
f1
f2
c
potstring
c
year
maxNum
maxYear
i
m
n
visited
queue
steps
initialState
size
i
state
mask
y
x
nextState
bin
y
x
flip
idx
ans
cur
end
i
j
n
len
left
max
i
right
i
res
i
len
P
c
r
maxLen
i
mirror
a
b
i
sum
stack
last
sum
cur
numRoadsConnectedCity
raadExist
maxRank
city1
city2
rank
n
map
i
array
i
maxLen
tails
i
index
low
ans
high
mid
n
count
lWord
m
n
dp
i
i
j
n
MAX
dp
i
t
prev
min
count
i
N
INF
dp
i
j
i
x
y
z
sum
s
res
i
i
map
result
key
result
arr
index
i
j
median
steps
minHeap
curr
sum
set
dp
INF
i
j
a
b
i
stack
unb
odd
even
map
res
res
i
i
n
result
i
j
point1
point2
slope
result
i
lowest_sum
sum
i
minTime
dp
i
j
sum
base
ex
spent
i
p1
p2
ans
len
s
count
i
n1
n2
pq
i
p
i
ans
neg
min
i
j
nums
org
i
e
ans
i
j
j
k
temp
psum
i
max_
i
ans
i
count0
count1
i
graph
inDegree
result
i
j
k
n
expectedSum
xor1
i
xor2
i
j
temp
arr
i
i
l
h
ans
mid
n
adj
i
i
j
t
res
seen
dst
t
total
i
sum
ans
i
a
z
temp
ans
tails
i
size
j
low
high
mid
idx
sum
i
str
arr
i
j
search
c
i
arr
max
i
firstHalfSlot
secondHalfSlot
slotChosen
andSum
left
right
N
M
dp
i
j
minSumSquare
diffs
totalDiff
kSum
currentDiff
maxDiff
i
i
i
min
max
mid
count
n
k
sum
ans
pos
i
cost
i
cnt
i
j
k
nums
mid
n
mininumFlip
misMatchCount
i
r
lookup
diff
k
sb
i
prefix
graph
i
answer
pairs
i
pair
visited
counter
round
rnd
circleMax
i
cnt
j
max
n
m
count
i
j
sum
sum1
sum2
count
i
j
left
right
val
max
sum
n
tree
i
counts
currPrice
i
result
neighbors
whole
halved
neiResult
n
queue
visited
parent
curr
curr
adjGraph
xorMap
rootXor
descendants
rootChildren
minScore
i
j
rootXor1
xor1
xor2
maxValue
minValue
rootXor1
xor1
xor2
maxValue
minValue
rootXor1
xor1
xor2
maxValue
minValue
childrenOfNode
srcXor
adjGraph
v1
v2
max
count
i
total
i
sum
ans
i
ans
sum1
sum2
first
second
max1
max2
i
overlap
list
max
n
i2
i1
a
res
currNum
remainingSum
last
n
m
takeLeft
takeRight
list
i
prev
curr
v
best
i
n2c
p
next
max
j
cnt
j
map
res
i
p1
j
p2
pm
dist2
d1
d2
positive_count
negative_count
i
ret
ds
i
j
s1
s2
i
p1
p2
w1
w2
p
open
ans
i
prevChar
totalTime
i
currChar
diff
sf
tf
diff
i
l
i
visited
even
odd
i
start
end
max_length
mid
T_count
F_count
i
j
res
i
n
currmax
gmax
i
list
n
i
maxArea
m
i
j
stack1
stack2
n
left
right
width
i
i
i
mxArea
i
nmap
total
best
left
right
res
q
set
size
i
val
mod
n
left
st
i
right
i
prefixSum
i
max
i
l
r
pq
top
res
array
ans
set
dig
cur
num1
num2
n
prefix
i
res
c
i
remain
min
dif
max
i
heightCells
queue
r
c
cell
newRow
newCol
isMin
n
i
n
m
dp
ans
i
j
res
temp
i
dp
idx
bCount
i
left
n
sum
minCount
i
n
dp
i
j
ans
i
min
k
min
k
lastBit
flips
i
i
j
res
bob
graph
a
b
visited
a
cont
list
j
a
split
i
sum
i
start
end
ans
mid
stack
i
ch
result
set
i
valToPos
sums
count
lastEndPos
i
pos
max
i
pq
adiff
bdiff
i
curr
sum
curr
i
s
l
max
c
p
k
other
minDistanceThis
minDistanceOther
yDiff
xDiff
personRow
personCol
boxRow
boxCol
states
rowMove
colMove
personRowNew
personColNew
willPushBox
boxRowNew
boxColNew
cell
rows
cols
shopKeeperRow
shopKeeperCol
boxRow
boxCol
r
row
c
cell
initialState
queue
visited
state
arr
i
i
t
re
t
i
ans
i
left
right
middle
afterRemoval
symbols
i
n
count
q
ans
i
j
i
low
high
present
min
j
j
max
ind
n
i
j
min
ans
v1
v2
min1
min2
arr
arr2
maximum
minimum
count
freq
r
a
m
i
j
ans
mask
cnt
nxt
max
x
y
i
j
n
minXorSum
i
xorSum
st
end
ans
mid
n
map
i
count
done
count
i
val
kv
newStrg
newKv
vl
n
len3
res
first
second
max
sum
i
i
min
i
i
i
n
INF
dp
i
i
c
j
w
j
w
ans
c
common
i
min
i
left
x2
i
m
n
answer
i
j
val
p
q
x
y
min
sec
minCost
arr
sameMove
i
map
cntZero
cntOne
wrongPosition
i
res
i
len
strArr
steps
l
r
k
tempCh
ans
j
count
i
len
left
right
sum
low
mid
high
ret
an
extraOnes
ans
n
res
queue
nodesQueue
min
node
prev
current
absValue
n
R
L
bit
i
i
i
j
go
i
j
l
r
ans
seen
i
ok
j
mx
sm
n
sum
newVal
n
g
i
q
T
cur
t2
low
high
mid
i
count
possible_permutations
aux
ans
curr_in_count
curr_ex_count
curr_in_pos
curr_ex_pos
i
curr_row_val
rest_rows_val
res
i
i
arr
i
open
extra
i
slow
fast
sum
current
previous
next
q
i
pq
result
j
i
index
val
strArr
j
strArr
i
i
hMax
vMax
N
minutes
i
hr
min
res
i
b
a
idx
min
suml
sumr
i
i
calc
left
right
arr
diff
ans
maxBeautySoFar
maxBeauty
i
i
idx
l
r
maxIdxLessThanEqualToPrice
mid
map
range
nextX
nextY
n
m
n
m
dist
vis
queue
i
currEle
nx
ny
dp
i
j
i
left
i
middle
i
newRoot
one
two
n
x
y
i
c1
c2
size
max
start
end
i
node
i
bit
node
maxNum
i
bit
trie
i
maxi
i
n
M
res
psum
i
s
top
i
min
l
r
inv
i
i
j
imap
ri
ans_i
ans_size
ri
xl
yl
first_negative
zero_position
count_neg
res
i
mid
lEnd
rStart
t1
t2
removeTime
m
n
dp
max
i
i
i
j
res
i
sum
diff
min1
min2
max1
max2
max3
valToPos
sums
count
lastEndPos
i
pos
q
sum
res
req
curr
max
new_max
i
res
i
j
ch
val
ch
val
n
dp
i
n
ans
pre
third
i
i
max
cur
i
first
fmax
max
cur
a
b
c
n
dp
i
j
left
right
j
left
right
hm
words
i
i
count
n
m
dp
num
i
j
count1
max
i
j
val
set
newRow
newCol
ans
i
n
prefixSums
sum
i
dp
minCostWrapper
min
rtn
cost
i
nextCost
max1
max2
min1
min2
i
n
row
col
ans
i
j
i
j
output
i
j
F
V
max
i
frequency
first
last
firstReduced
lastReduced
n
max
i
map
count
i
value
temp
mx
sm
n
sum
newVal
n
count
s
e
max
s
e
pos
p1
p2
fine
p3
p4
arr
index
i
j
median
steps
frame
i
j
j
j
ans
i
l1
least
returnArray
map
i
temp
size
mid
i
ans
m
ans
i
c
curr
res
idx
i
j
d1
d2
s
n
i
n
pref
count
i
sum
max
countPrev
i
diff
changedSum
sp
left
right
min
result
i
leftMul
leftNum
j
rightMul
rightNum
sum
hmap
count
j
x
count
aa
bb
cc
mask
b1
b2
a
i
total
i
i
i
i
low
high
i
ans
mid
balls
prevballplace
i
n
ans
i
j
wsize
scount
minMoves
maxMoves
max
cnt
i
j
r
c
num
count
i
j
max
stack
curr
min
val
prev
prev
popularity
info
result
len
maxPop
i
name
id
view
totalView
nameInfo
idView
temp
name
winner
maxView
view
id
res
i
engineers
i
maxHeap
maxPerformance
totalSpeed
i
max
i
root
maxIdx
root
idx
max
i
ans
min
i
diff
i
diff
pair
src1To
src2To
toDest
res
i
d1
d2
d3
d
i
from
to
weight
heap
node
to
dist
res
i
count
n
currRow
nextRow
curr
prev
take
notTake
m
n
brsum
r
c
val
maxSum
r0
rf
rfp1
c0
cf
cfp1
sum
n
pref
i
i
res
i
indegree
result
i
freq
i
text1
freq
count1
i
text2
count2
i
pqs
i
i
ans
seg
i
digit
pos
shift
mid
mid
n
LIS
LDS
i
j
max
i
j
n
ans
cur
k
i
j
m
tmp
visited
i
count
i
aCount
bCount
lesser
result
i
c
count
num
i
map
ans
remaining
result
i
i
ans
x
degree
res
prev
sb
indexofAt
firstName
digits
i
last4
count
i
x
y
maxCount
count
start
end
midDist
s
e
n
posOfLastFruit
prefixArr
start
end
diff
i
curr
i
i
minimum
ans
i
maxCurrPossible
stepsAlreadyWalked
stepsRemaining
endIndex
i
maxCurrPossible
stepsAlreadyWalked
stepsRemaining
endIndex
minNumArrows
n
candid
i
next
merged
hasOverlap
merged
set
threshold
max
arrayLength
v1
v2
v3
v4
res
i
rotatn
cust
profit
prRotn
cSit
i
prof
prof
deletion
n
i
newIndex
ans
i
ans
k
a
n
ans
i
j
sizeOfPile
pile
sum
l
rem
count
isBad
hm1
ans
sum
i
kadane_sum
sum
ans
minCost
index
ans
num
op
i
count
postfix
sb
isChanged
res
a
b
c
dp
i
j
min
i
ret
n
last
i
k
val1
val2
cnt1
cnt2
i
check1
check2
i
ans
words
dp
ok
i
ans
i
res
mod
count
fact
n
div
i
c
c1
ans
cnt
i
fact
i
n
map
i
target
max
re
len
arr
i
dp
i
j
mini
k
cost
ans
i
n
maxi
ans
prev
curr
dist
prev
curr
dist
i
coord
lo
hi
ans
mid
i
products
set
i
ans
i
temp
ans
i
map
sum
max
count
ans
counter
lh
rh
m
n
dph
dpv
hmax0
vmax0
i
j
curr
two
five
j
i
curr
two
five
res
i
j
otwo
ofive
res1
ntwo
nfive
res2
ntwo
nfive
j
otwo
ofive
res1
ntwo
nfive
res2
ntwo
nfive
dp
r
c
hor
ver
min
max
mod
result
minValue
i
max1
max2
left
sum
i
right
i
max
i
len
queryWithIndex
i
numId
ans
root
i
i
digit
ans
i
digit
set
var
q
count
size
i
str
tmp
j
ch
k
node
pq
n
res
cost
i
j
freq
i
j
k
ans
max
i
r
l
m
n
min
nums
i
leftOptimized
i
rightOptimized
i
p
oneMove
noMove
i
j
ans
one
i
total_possible_ans
correct_ans
total_score
i
possible_ans
i
cur
left
right
stack
i
cur
next
total_sum
arr1
arr2
time1
time2
n
dp
i
j
res
i
str
index
entries
entries
lo
hi
mid
ans
entry
answer
i
j
onRight
maxOne
n
rightMax
i
start
end
val
two
i
start
end
val
idx
left
right
mid
left
right
l_max
r_max
res
innerList
i
res
cs
n
pos
i
j
prev
n
m
pq
visited
i
j
ans
rem
i
rowdash
coldash
waterstored
n
adj
i
dist
ans
x
time
p
numberOfMessagesSent
lastMessage
n
dist
visited
pq
node
count
n
i
entries
entries
lo
hi
mid
ans
entry
minCost
n
i
first
second
third
onRight
maxOne
n
rightMax
i
start
end
val
two
i
start
end
val
idx
left
right
mid
n
m
i
row
col
e
r
row
col
e
map
targetStart
available
i
pq
i
map
day
unBalanced
balanced
numSpaces
sb
j
line
lineB
tempSpaces
i
mQ
len
heap
prevHeight
res
lst
h
maxH
count
i
res
map
i
j
val
val
res
interval
end
st
en
pq
count
sum
tmp
childtree
ans
ones
i
ans
each
i
j
count
i
j
ans
i
j
graph
i
curMax
set
n
m
solb
lastPerson
i
j
cc
x
tr
i
ans
gcd
i
j
latest
i
val
latest_id
i
pre_height
pre_id
sum
dp
i
j
sum
i
map
queue
list
l
r
N
colToMove
rowToMove
rowOneCnt
colOneCnt
i
j
i
prime
i
mask
j
n
one
dp
cnt
i
j
res
res
m
result
mat
x
y
i
j
len
len
flag
i
i
j
queue
ans
poped
isChange
i
total
cnt
i
j
idx
bits
result
i
m
n
trans
i
j
map
list
arr
i
n
z
i
count
i
n
count
i
start
end
arr
q
start
end
arr
q
result
n
left
right
idx
median
diff_l
diff_r
stack
i
ch
sb
sb
i
ch
i
j
ch
prev0
prev1
ch
n
time
i
list
i
nums
i
i
ans
xor
i
i
j
count
gcd
n
res
i
j
res2
i
j
res3
i
j
count
i
n
a
k
i
sign
result
count
firstDistance
secondDistance
i
i
i
i
i
i
tmp
sz
i
bb
nbb
eb
n
nl
nd
insert
end
cnt
i
ii
ans
i
bucket
bucket
entries
bucket
toRemove
n
m
dp
i
count
i
j
dp
M
i
j
treemap
rooms
roomsNeeded
res
i
c
left
right
map
k
ch
sb
i
first
second
min
temp
index
temp
index
j
cols
res
new_res
i
j
fg
i
diffCity
weights
i
dp
i
j
dC
w
b
n
i
expirationTime
count
ans
count
startIndex
endIndex
i
i
no
degree
arraySize
addSet
s
e
m
m
addList
i
j
ans
sorted
res
i
j
rows
cols
visited
i
j
south
north
east
west
months
year
ans
i
onePreviousAgo
previous
i
sum
currentPrevious
i
foodOfThisCuisine
cui
foodOfThisCui
ans
i
res
parent_node
i
child_node_val
set1
i
i
ans
letters
original
i
i
q
hght
sum
temp
ans
head
map
tbl
m
arr
l
m
i
answer
down
right
key
sum
px
py
x
y
res
n
arr
i
prev
cur
next
dp
i
sum
rem
eleSum
digitSum
i
num
map
ans
temp
i
map
i
j
z
stk
arr
k
size
res
i
left
right
arr
i
j
res
i
low
high
ans
i
lh
rh
rem
i
strs
index
i
res
start
end
sum
i
i
n
dp
i
hash
j
set
res
i
j
i
s
sb
i
n
all
i
x
mid
i
j
ans
i
i
N
queR
queD
i
r
d
set
countMap
count
count
i
next
freq
dist
idx
used
i
mod
li
n
dp
c
i
curr
idx
fast
slow
prev
m
n
res
i
j
r1
r2
c1
c2
hs1
hs2
i
i
temp
ans
j
i
i
week
total
months
i
arr1
arr2
i
i
i
j
rows
cols
result
r
c
i
hm
st
i
ans
i
n
m
dp
i
i
i
j
common
set
mid
count
i
left
right
i
current
newNode
level
entry
current
maxHeap
minHeap
bigMass
curr
s
s
s
journey
journey
journeyTime
key
average
key
average
totalTrips
totalJourneytime
averageTime
count
maxKey
pos
curr
dp
i
oneDigit
twoDigit
count
i
res
list
len
temp
prev
temp
temp
prevColor
prevColor
prevEnd
temp
graph
n
i
j
max
i
res
map1
p
pq
map1
ans
p
p
p
ans
t
obj1
thisIndex
temp
onlyNode
temp
thisIndex
temp
thisIndex
prev
freq
res
i
i
result
i
quantity
i
map
x
ans
vis
need
d1
d2
total
i
feb
length
flag
left
right
temp
temp
num
freq
rem
ans
i
count
i
n
a
i
dp
m
i
idx
k
k
sum
count
j
pos
arr
map
stack
ans
i
temp
i
length
l
res
i
temp
temp1
max
backtracking
try
each
and
and
position
valid
one
there
no
queen
placed
that
we
to
col
negative
are
allowed
index
so
add
n
board
col
dia1
dia2
i
res
i
row
j
n
M
mask
i
dp
i
j
k
ans
even
odd
sum
i
count
i
sum
sol
localSum
i
counter
total
max
i
val
res
cn
digi
prevdig
i
dp
ones
zeros
currDigitIndex
tillNextIncrease
currNumberSize
currNumber
next
nthDigit
ans
n
hash
i
tmp
ans
n
len
counter
i
j
adjList
i
chars
i
res
s
e
i
result
map
nextOfPeak
i
start
end
temp
reversalPoint
i
temp
start
end
temp1
n
result
treeMap
sum
prev
i
entry
mod
adj
rows
i
i
from
to
dis
pq
ways
dist
p
node
dis
len
ans
i
count
r
c
i
j
maxDigit
ans
i
res
num
dig
i
rows
cols
queueSize
queue
visited
curr
dirs
x
y
steps
i
N
dp
count
maxi
i
j
maxlis
i
arrayList
result
i
count
dp
i
mod
i
j
x
mod
shares
forgets
shareToday
peopleKnow
i
prev
nexts
next
flag
i
ways
i
ways
nexts
start
end
res
i
interval
dist
graph
pq
base
currNode
node
d
newNode
ans
currNode
d
count
i
val
i
ttl
ans
list
i
seen
i
d
count
j
ans
i
i
n
m
count
i
x
j
k
prod
jNew
kNew
q
numSeats
numPlants
dividers
i
n
set
i
temp
x
sqrt
stk
arr
ref
i
curr
stay
right
left
initialZeroCount
dp
lastOne
lastZero
mod
i
j
dup
hasZero
n
i
j
mod
pow
count
z
sum
i
j
a
b
c
d
ans
i
multiplier
map
lastValue
i
sb
sb
element
elements
sb
M
m
n
dp
ways
dirs
i
j
cur
x
y
price
quantity
orderType
counts
sellOrder
buyOrder
result
edges
edgesList
previous
currentSet
parent
parentSet
i
entry
i
i
ans
queue
timeReach
rv
t
time
a
b
ds1
ds2
count
i
i
count
i
j
regex
r2
arr
ans
arr
set
x
sum
i
maxcount
i
j
count
i
j
k
rowdash
coldash
p1
p2
p3
cur
i
modified
prev
index
average
count
start
sum
i
col
diag
rdiag
c
answer
p
i
hm
q
j
distance
occ
n
one
mod
c
i
ones
part1
part2
i
m
n
summedArray
ans
i
j
k
map
count
sum
diff
map
i
ans
n
a
b
i
val
res
cn
digi
prevdig
i
dp
i
j
ans
count
ans
pre
i
n
j
list
max
count
i
size
isCheck
ans
i
q
temp
j
a
b
c
count
i
farLeft
count
n
N
A
B
mod
min
low
high
ans
mid
x
tmpA
tmpB
temp
l
h
max
ans
j
newCnt
arr
i
ans
cnt
i
j
ans
m
n
count
i
j
n
count
freq
res
i
mask
chkMask
j
count
map
s1ind
s2ind
counter
p1
p2
p3
cur
i
count
stack
result
i
visibility
list
ts
cs
cnt
average
count
start
sum
i
mod
i
temp
j
k
total
l
result
i
j
c
i
divider
m
uf
i
rootx
rooty
i
countSteps
carry
i
rightMostBit
map
mask
i
res
mask
i
c
sub
first
ch
count
result
i
s
i
i
num
zero
zeroOne
one
oneZero
tot
MOD
M
i
j
list
left
right
root
i
j
pieces
pairs
i
dp
i
j
ans
i
arr
i
idx1
j
left
right
result
val
temp
n
a
b
deq
i
hs
count
i
i
jumpsFrom
jumpChain
max
i
s
i
lowerIndex
max
maxjump
i
n
vis
q
size
curr
n
mp
i
ls
q
ans
size
i
j
result
L
R
localMaxRight
i
queue
maxReach
idx
j
