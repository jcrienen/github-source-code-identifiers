reload
intl
migrate
migrate
migrateIntl
hasPerm
getPlayersWithPerm
parse
parse
parse
parse
getPaths
toString
getPaths
toString
getPaths
toString
parse
parse
parse
reload
getConfig
reload
defaultConfig
verifyPath
shouldStartBackup
backupDone
backupError
getConfig
beforeBackupStart
onBackupDone
onBackupError
startBackup
reloadConfig
getNextAutoBackup
publish
onTabComplete
onCommand
sendDocs
sendVersion
sendHelp
sendBriefBackupList
sendNoPerms
onPlayerChat
log
onCommand
log
onPlayerJoin
isAutoBackupsActive
setAutoBackupsActive
log
incBlacklistedFiles
getGlobPattern
getPathMatcher
getBlacklistedFiles
setAutoSave
call
ofPattern
format
parse
getFormatter
verifyPattern
cancelTasks
sToTicks
parseTime
intercept
parse
isAfter
toString
read
read
available
hasNext
next
getCurrentChunk
getCurrentOffset
finalize
catchException
catchException
reloadConfig
getConfig
saveConfig
saveDefaultConfig
start
end
getUploadTimeMessage
getTime
Builder
addPrefix
text
emText
mmText
mmText
mmText
text
to
to
toPerm
toConsole
all
send
sendConsoleException
prefixMessage
translateMessageColors
getLocalBackups
makeBackup
pruneLocalBackups
zipIt
incFilesInBackupFolder
getFilesInBackupFolder
appendToList
getList
getBlacklist
generateFileList
generateFileList
escapeBackupLocation
generateGlobFolderList
isBaseFolder
deleteFolder
broadcast
log
initiatorError
info
log
log
initiatorError
run
ensureMethodsAuthenticated
doSingleBackup
makeExternalFileBackup
makeExternalDatabaseBackup
getBackupStatus
getNextAutoBackup
compare
updateNextIntervalBackupTime
wasLastBackupSuccessful
getSocketAddress
getTempFolderName
log
initiatorError
run
testUploadMethod
sendMethodDisabled
initMetrics
updateMetrics
call
call
call
call
call
call
call
call
call
call
enabled
startBackupThread
run
stopBackupThread
getBackupDatesList
onEnable
onDisable
saveIntlConfig
getInstance
reloadLocalConfig
updateCheck
run
isUpdateAvailable
getLatestDownloadUrl
getCurrent
getLatest
downloadFile
runUpdater
retrieveNewAccessToken
isAuthenticated
test
uploadFile
isErrorWhileUploading
close
getName
getId
getAuthProvider
createFolder
createFolder
getFolder
getFolder
pruneBackups
add
setPath
getPath
getName
getParent
resetRanges
setRanges
getChunk
setErrorOccurred
getTotalUploaded
retrieveNewAccessToken
isAuthenticated
setTimeout
initialize
test
uploadFile
isErrorWhileUploading
close
getName
getId
getAuthProvider
setupSharedDrives
finalizeSharedDrives
createFolder
createFolder
createFolder
getFolder
getFolder
getFolder
getFiles
pruneBackups
setErrorOccurred
getName
getId
getCredStoreLocation
getClientId
getClientSecret
authenticateUser
run
log
unauthenticateUser
cancelPollTask
linkSuccess
saveRefreshToken
enableBackupMethod
disableBackupMethod
getRefreshToken
hasRefreshToken
processCredentialJsonFile
isErrorWhileUploading
downloadDatabase
downloadDatabase
getAllTables
getTableInsertStatement
getDataInsertStatement
getInsertStatements
setErrorOccurred
main
encrypt
decrypt
generateKey
connect
reqPassword
shouldRetry
isAuthenticated
close
test
uploadFile
downloadFile
getFiles
pruneBackups
getZipFiles
createThenEnter
resetWorkingDirectory
prependToAll
sep
connect
isAuthenticated
close
test
uploadFile
downloadFile
getFiles
isErrorWhileUploading
getName
getId
getAuthProvider
pruneBackups
getZipFiles
createThenEnter
resetWorkingDirectory
prependToAll
setErrorOccurred
getName
getId
getAuthProvider
isAuthenticated
isErrorWhileUploading
test
uploadFile
close
isAuthenticated
close
test
realUploadFile
uploadFile
getFiles
isErrorWhileUploading
getName
getId
getAuthProvider
pruneBackups
getZipFiles
rstrip
createDirectory
prependToAll
setErrorOccurred
findUploadDir
realUploadFile
getName
getId
test
uploadFile
pruneBackups
getZipFiles
retrieveNewAccessToken
isAuthenticated
isErrorWhileUploading
close
getName
getId
getAuthProvider
setErrorOccurred
getJsonObject
