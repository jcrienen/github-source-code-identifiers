setup
whenFindAllCalledThenExpectServiceToReturnAllStrategyConfigs
whenFindByIdCalledWithKnownIdThenReturnMatchingStrategyConfig
whenFindByIdCalledWithUnknownIdThenReturnNullStrategyConfig
whenSaveCalledWithKnownIdThenReturnUpdatedStrategyConfig
whenSaveCalledWithUnknownIdThenReturnEmptyStrategyConfig
whenSaveCalledWithEmptyIdThenExpectCreatedStrategyConfigToBeReturned
whenDeleteCalledWithKnownIdThenReturnDeletedStrategyConfig
whenDeleteCalledWithUnknownIdThenReturnEmptyStrategyConfig
allTheInternalStrategiesConfig
someExternalStrategyConfig
someNewExternalStrategyConfig
someExternalStrategyConfigWithUnknownId
setup
whenGetCalledThenReturnExchangeConfig
whenSaveCalledThenExpectRepositoryToSaveItAndReturnSavedExchangeConfig
someInternalExchangeConfig
someExternalExchangeConfig
setup
whenGetCalledThenExpectEngineConfigToBeReturned
whenSaveCalledThenExpectRepositoryToSaveItAndReturnSavedEngineConfig
someInternalEngineConfig
someExternalEngineConfig
setup
whenGetCalledThenExpectEmailAlertsConfigToBeReturned
whenSaveCalledThenExpectRepositoryToSaveItAndReturnSavedEmailAlertsConfig
someEmailAlertsConfig
someUpdatedEmailAlertsConfig
adaptExternalToInternalConfig
setup
whenFindAllCalledThenExpectServiceToReturnAllMarketConfigs
whenFindByIdCalledWithKnownIdThenReturnMatchingMarketConfig
whenFindByIdCalledWithUnknownIdThenReturnNullMarketConfig
whenSaveCalledWithKnownIdThenReturnUpdatedMarketConfig
whenSaveCalledWithUnknownIdThenReturnEmptyMarketConfig
whenDeleteCalledWithKnownIdThenReturnMatchingMarketConfig
whenSaveCalledWithEmptyIdThenExpectCreatedMarketConfigToBeReturned
whenDeleteCalledWithUnknownIdThenReturnEmptyMarket
allTheInternalMarketsConfig
someExternalMarketConfig
someNewExternalMarketConfig
someExternalMarketConfigWithUnknownId
get
save
get
save
get
save
findAll
findById
save
delete
adaptInternalToExternalConfig
generateUuid
findAll
findById
save
delete
adaptInternalToExternalConfig
generateUuid
get
save
get
save
findAll
findById
save
delete
findAll
findById
save
delete
get
save
testCreationOfExceptionIsAsExpected
testCreationOfExceptionWithCauseIsAsExpected
testCreationOfExceptionWithThrowableIsAsExpected
getConfigItem
getNumberOfConfigItems
getConfigItemKeys
init
execute
testCreationOfBuyIsAsExpected
testCreationOfSellIsAsExpected
testGetVersion
testGetTicker
testGetMinOrder
getImplName
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
testCreationOfExceptionIsAsExpected
testCreationOfExceptionWithCauseIsAsExpected
testCreationOfExceptionIsAsExpected
testCreationOfExceptionWithCauseIsAsExpected
getStringValue
getLast
getBid
getAsk
getLow
getHigh
getOpen
getVolume
getVwap
getTimestamp
getId
getCreationDate
getMarketId
getType
getPrice
getQuantity
getOriginalQuantity
getTotal
getType
getPrice
getQuantity
getTotal
getName
setId
getId
getBaseCurrency
getCounterCurrency
getVersion
getImplName
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getMinimumOrderVolume
getTicker
getLast
getBid
getAsk
getLow
getHigh
getOpen
getVolume
getVwap
getTimestamp
getMarketId
getSellOrders
getBuyOrders
getBalancesAvailable
getBalancesOnHold
setupBeforeEachTest
testGetEmailAlertsConfigWithValidToken
testGetEmailAlertsConfigWhenUnauthorizedWithMissingToken
testGetEmailAlertsConfigWhenUnauthorizedWithInvalidToken
testUpdateEmailAlertsConfigWithAdminTokenAuthorized
testUpdateEmailAlertsConfigWithUserTokenForbidden
testUpdateEmailAlertsConfigWhenUnauthorizedWithMissingToken
testUpdateEmailAlertsConfigWhenUnauthorizedWithInvalidToken
someEmailAlertsConfig
setupBeforeEachTest
testGetEngineConfigWithValidToken
testGetEngineConfigWhenUnauthorizedWithMissingToken
testGetEngineConfigWhenUnauthorizedWithInvalidToken
testUpdateEngineConfigWithAdminTokenAuthorized
testUpdateEngineConfigWithUserTokenForbidden
testUpdateEngineConfigWhenUnauthorizedWithMissingToken
testUpdateEngineConfigWhenUnauthorizedWithInvalidToken
someEngineConfig
setupBeforeEachTest
testGetAllMarketConfigWithValidToken
testGetAllMarketConfigWhenUnauthorizedWithMissingToken
testGetAllMarketConfigWhenUnauthorizedWithInvalidToken
testGetMarketConfigWithValidToken
testGetMarketConfigByIdWhenUnauthorizedWithMissingToken
testGetMarketConfigByIdWhenUnauthorizedWithInvalidToken
testGetMarketConfigByIdWhenNotRecognized
testUpdateMarketConfigWithAdminTokenAuthorized
testUpdateMarketConfigWithUserTokenForbidden
testUpdateMarketConfigWhenUnauthorizedWithMissingToken
testUpdateMarketConfigWhenUnauthorizedWithInvalidToken
testUpdateMarketConfigWhenIdNotRecognized
testUpdateMarketConfigWhenIdIsMissing
testDeleteMarketConfigWithAdminTokenAuthorized
testDeleteMarketConfigWithUserTokenForbidden
testDeleteMarketConfigWhenUnauthorizedWithMissingToken
testDeleteMarketConfigWhenUnauthorizedWithInvalidToken
testDeleteMarketConfigByIdWhenNotRecognized
testCreateMarketConfigWithAdminTokenAuthorized
testCreateMarketConfigWithAdminTokenForbidden
testCreateMarketConfigWhenUnauthorizedWithMissingToken
testCreateMarketConfigWhenUnauthorizedWithInvalidToken
testCreateMarketConfigWhenMarketIdIsMissing
testCreateMarketConfigWhenStrategyIdMissing
someMarketConfig
unrecognizedMarketConfig
someMarketConfigWithMissingId
someMarketConfigWithMissingStrategyId
allMarketConfig
setupBeforeEachTest
testGetExchangeConfigWithValidToken
testGetExchangeConfigWhenUnauthorizedWithMissingToken
testGetExchangeConfigWhenUnauthorizedWithInvalidToken
testUpdateExchangeConfigWithAdminTokenAuthorized
testUpdateExchangeConfigWithUserTokenForbidden
testUpdateExchangeConfigWhenUnauthorizedWithMissingToken
testUpdateExchangeConfigWhenUnauthorizedWithInvalidToken
someExchangeConfig
setupBeforeEachTest
testGetAllStrategyConfigWithValidToken
testGetAllStrategyConfigWhenUnauthorizedWithMissingToken
testGetAllStrategyConfigWhenUnauthorizedWithInvalidToken
testGetStrategyConfigWithValidToken
testGetStrategyConfigByIdWhenUnauthorizedWithMissingToken
testGetStrategyConfigByIdWhenUnauthorizedWithInvalidToken
testGetStrategyConfigByIdWhenNotRecognized
testUpdateStrategyConfigWithAdminTokenAuthorized
testUpdateStrategyConfigWithUserTokenForbidden
testUpdateStrategyConfigWhenUnauthorizedWithMissingToken
testUpdateStrategyConfigWhenUnauthorizedWithInvalidToken
testUpdateStrategyConfigWhenIdNotRecognized
testUpdateStrategyConfigWhenIdIsMissing
testDeleteStrategyConfigWithAdminTokenAuthorized
testDeleteStrategyConfigWithUserTokenForbidden
testDeleteStrategyConfigWhenUnauthorizedWithMissingToken
testDeleteStrategyConfigWhenUnauthorizedWithInvalidToken
testDeleteStrategyConfigWhenIdNotRecognized
testCreateStrategyConfigWithAdminTokenAuthorized
testCreateStrategyConfigWithUserTokenForbidden
testCreateStrategyConfigWhenUnauthorizedWithMissingToken
testCreateStrategyConfigWhenUnauthorizedWithInvalidToken
testCreateInvalidStrategyConfigWithAdminTokenAuthorized
allTheStrategiesConfig
someStrategyConfig
someStrategyConfigWithMissingId
unrecognizedStrategyConfig
setupBeforeEachTest
testGetBotStatusWithValidToken
testGetBotStatusWhenUnauthorizedWithInvalidToken
testGetBotStatusWhenUnauthorizedWithMissingToken
someEngineConfig
setupBeforeEachTest
testDownloadLogfile
testDownloadLogfileReturnsInternalServerErrorForIoException
testGetLogfile
testGetLogfileHead
testGetLogfileHeadWithTailParamSetToZero
testGetLogfileHeadWhenRequestedLineCountExceedsMaxAllowed
testGetLogfileTail
testGetLogfileTailWithTailParamSetToZero
testGetLogfileTailWhenRequestedLineCountExceedsMaxAllowed
testGetLogfileReturnsInternalServerErrorForIoException
testGetLogfileWhenUnauthorizedWithInvalidToken
testGetLogfileWhenUnauthorizedWithMissingToken
setupBeforeEachTest
testBotRestartWithAdminTokenAuthorized
testBotRestartWithUserTokenForbidden
testBotRestartWhenUnauthorizedWithInvalidToken
testBotRestartWhenUnauthorizedWithMissingToken
setConverters
buildAuthorizationHeaderValue
getJwt
jsonify
getUsername
setUsername
getPassword
setPassword
getToken
setToken
testMaxLogfileLinesCanBeSetAndFetched
testMaxLogfileLinesDefaultFallback
testMaxLogfileDownloadSizeCanBeSetAndFetched
testMaxLogfileDownloadSizeDefaultFallback
testInitialisationWorksAsExpected
setup
whenFilterCalledWithValidTokenThenExpectSuccessfulAuthenticationAndCallNextFilter
whenFilterCalledWithoutAuthorizationHeaderThenCallNextFilter
whenFilterCalledWithBearerTokenWithMissingUsernameThenCallNextFilter
whenFilterCalledWithTokenWithMissingUsernameThenCallNextFilter
whenFilterCalledWithInvalidTokenThenCallNextFilter
whenCommenceCalledThenExpectUnauthorizedResponse
testCreationOfExceptionIsAsExpected
testCreationOfExceptionWithCauseIsAsExpected
testEmptyConstructorWorksAsExpected
testSetterAndGettersWorkAsExpected
testEmptyConstructorWorksAsExpected
testArgsConstructorWorksAsExpected
testSettersWorkAsExpected
setup
expectAnonymousUsersToBeAbleToCallGetToken
whenGetTokenCalledWithBadCredentialsThenExpectUnauthorizedResponse
whenRefreshTokenCalledWithUserRoleThenExpectSuccessResponse
whenRefreshTokenCalledWithAdminRoleThenExpectSuccessResponse
whenRefreshTokenCalledBuyAnonymousUserThenExpectUnauthorizedResponse
init
testUsernameCanBeExtractedFromTokenClaims
testExceptionThrownIfUsernameCannotBeExtractedFromTokenClaims
testIssuedAtDateCanBeExtractedFromTokenClaims
testExpirationDateCanBeExtractedFromTokenClaims
testRolesCanBeExtractedFromTokenClaims
testExceptionThrownIfRolesCannotBeExtractedFromTokenClaims
testLastPasswordResetDateCanBeExtractedFromTokenClaims
testExceptionThrownIfLastPasswordResetDateCannotBeExtractedFromTokenClaims
whenValidateTokenCalledWithNonExpiredTokenThenExpectSuccess
whenValidateTokenCalledWithExpiredTokenThenExpectFailure
whenValidateTokenCalledWithCreatedDateEarlierThanLastPasswordResetDateThenExpectFailure
whenRefreshTokenCalledWithValidTokenThenExpectNewTokenToBeReturned
whenCanTokenBeRefreshedCalledWithStaleTokenThenExpectReturnFalse
whenCanTokenBeRefreshedCalledWhenPasswordNotChangedYetThenExpectReturnTrue
whenCanTokenBeRefreshedCalledWithValidTokenThenExpectReturnFalse
createTokenWithLastPasswordResetYesterday
createTokenWithInvalidCreationDate
createJwtUser
createUser
createRoles
whenCreateCalledWithUserModelThenExpectJwtUserDetailsToBeReturned
createRoles
testInitialisationWorksAsExpected
createRoles
createUser
createAuthorities
testInitialisationWorksAsExpected
testSettersWorkAsExpected
createRoles
testInitialisationWorksAsExpected
testSettersWorkAsExpected
createUsers
createUser1Roles
createUser2Roles
setup
testServiceCreationIsAsExpected
whenLoadByUsernameCalledWithUnknownUsernameThenExpectUsernameNotFoundException
getAllStrategies
getStrategy
updateStrategy
createStrategy
deleteStrategy
buildResponseEntity
getEngine
updateEngine
buildResponseEntity
getAllMarkets
getMarket
updateMarket
createMarket
deleteMarket
buildResponseEntity
getExchange
updateExchange
mergeWithLocalAuthenticationConfig
buildResponseEntity
getEmailAlerts
updateEmailAlerts
buildResponseEntity
restart
downloadLogfile
getLogfile
getStatus
getMaxLogfileLines
setMaxLogfileLines
getLogfileDownloadSize
setMaxLogfileDownloadSize
findByUsername
filterChain
authenticationManager
configure
bcryptPasswordEncoder
authenticationTokenFilter
corsConfigurationSource
getUsername
setUsername
getPassword
setPassword
commence
doFilterInternal
setJwtUtils
getToken
refreshToken
getToken
setToken
validateTokenAndGetClaims
createToken
canTokenBeRefreshed
refreshToken
getUsernameFromTokenClaims
getRolesFromTokenClaims
getIssuedAtDateFromTokenClaims
getExpirationDateFromTokenClaims
getLastPasswordResetDateFromTokenClaims
buildToken
getClaimsFromToken
isCreatedAfterLastPasswordReset
mapRolesFromGrantedAuthorities
create
mapUserRolesToGrantedAuthorities
getId
getUsername
isAccountNonExpired
isAccountNonLocked
isCredentialsNonExpired
getFirstname
getLastname
getEmail
getPassword
getAuthorities
isEnabled
getLastPasswordResetDate
getRoles
getId
setId
getUsername
setUsername
getPassword
setPassword
getFirstname
setFirstname
getLastname
setLastname
getEmail
setEmail
getEnabled
setEnabled
getRoles
setRoles
getLastPasswordResetDate
setLastPasswordResetDate
getId
setId
getName
setName
getUsers
setUsers
loadUserByUsername
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testCloningWorksAsExpected
testEqualsWorksAsExpected
testHashCodeWorksAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testEqualsWorksAsExpected
testHashCodeWorksAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testCloningWorksAsExpected
testEqualsWorksAsExpected
testHashCodeWorksAsExpected
testToStringWorksAsExpected
getBotId
setBotId
getDisplayName
setDisplayName
getStatus
setStatus
getDatetime
setDatetime
toString
getId
setId
getName
setName
getBaseCurrency
setBaseCurrency
getCounterCurrency
setCounterCurrency
isEnabled
setEnabled
getTradingStrategyId
setTradingStrategyId
equals
hashCode
toString
getConnectionTimeout
setConnectionTimeout
getNonFatalErrorCodes
setNonFatalErrorCodes
getNonFatalErrorMessages
setNonFatalErrorMessages
toString
getName
setName
getAdapter
setAdapter
getAuthenticationConfig
setAuthenticationConfig
setNetworkConfig
getNetworkConfig
getOtherConfig
setOtherConfig
toString
getBotId
setBotId
getBotName
setBotName
getEmergencyStopCurrency
setEmergencyStopCurrency
getEmergencyStopBalance
setEmergencyStopBalance
getTradeCycleInterval
setTradeCycleInterval
equals
hashCode
toString
isEnabled
setEnabled
getSmtpConfig
setSmtpConfig
toString
getHost
setHost
getTlsPort
setTlsPort
getAccountUsername
setAccountUsername
getAccountPassword
setAccountPassword
getFromAddress
setFromAddress
getToAddress
setToAddress
toString
getId
setId
getName
setName
getDescription
setDescription
getClassName
setClassName
getBeanName
setBeanName
getConfigItems
setConfigItems
equals
hashCode
toString
testLoadingValidYamlConfigFileIsSuccessful
testLoadingMissingYamlConfigFileThrowsException
testLoadingInvalidYamlConfigFileThrowsException
testSavingConfigToYamlIsSuccessful
testSavingConfigToInvalidYamlFileIsHandled
testLoadingValidYamlConfigFileIsSuccessful
testLoadingMissingYamlConfigFileThrowsException
testLoadingInvalidYamlConfigFileThrowsException
testSavingConfigToYamlIsSuccessful
testSavingConfigToInvalidYamlFileIsHandled
testLoadingValidYamlConfigFileIsSuccessful
testLoadingMissingYamlConfigThrowsException
testLoadingInvalidYamlConfigThrowsException
testSavingConfigToYamlIsSuccessful
testSavingConfigToInvalidYamlFileIsHandled
testLoadingValidYamlConfigFileIsSuccessful
testLoadingValidYamlConfigFileWithoutSmtpConfigIsSuccessful
testLoadingMissingYamlConfigThrowsException
testLoadingInvalidYamlConfigFileThrowsException
testSavingConfigToXmlIsSuccessful
testSavingConfigToInvalidYamlFileIsHandled
testLoadingValidYamlConfigFileIsSuccessful
testLoadingMissingYamlConfigFileThrowsException
testLoadingInvalidYamlConfigFileThrowsException
testSavingConfigToYamlIsSuccessful
testSavingConfigToInvalidYamlFileIsHandled
loadConfig
saveConfig
representJavaBeanProperty
createPropertySet
getMarkets
setMarkets
getExchange
setExchange
getEngine
setEngine
getEmailAlerts
setEmailAlerts
getStrategies
setStrategies
whenGetExchangeConfigCalledThenExpectConfigToBeReturned
whenUpdateExchangeConfigCalledThenExpectUpdatedConfigToBeReturned
whenGetEmailAlertsConfigCalledThenExpectConfigToBeReturned
whenUpdateEmailAlertsConfigCalledThenExpectUpdatedConfigToBeReturned
whenGetStrategyConfigCalledThenExpectConfigToBeReturned
whenGetAllStrategyConfigCalledThenExpectConfigToBeReturned
whenUpdateStrategyConfigCalledThenExpectUpdatedConfigToBeReturned
whenDeleteStrategyConfigCalledThenExpectDeletedConfigToBeReturned
whenGetEngineConfigCalledThenExpectConfigToBeReturned
whenUpdateEngineConfigCalledThenExpectUpdatedConfigToBeReturned
whenGetMarketConfigCalledThenExpectConfigToBeReturned
whenGetAllMarketConfigCalledThenExpectConfigToBeReturned
whenUpdateMarketConfigCalledThenExpectUpdatedConfigToBeReturned
whenDeleteMarketConfigCalledThenExpectDeletedConfigToBeReturned
whenRestartCalledThenExpectBotStatusToBeRestarting
whenGetLogfileCalledThenExpectLogfileContentToBeReturned
whenLogfileCalledWith2ThenExpectOnlyLast2LinesToBeReturned
whenLogfileTailCalledWith2ThenExpectOnlyLast2LinesToBeReturned
whenLogfileTailCalledWith4ThenExpectOnly3LinesToBeReturned
whenLogfileHeadCalledWith2ThenExpectOnlyLast2LinesToBeReturned
whenLogfileHeadCalledWith4ThenExpectOnly3LinesToBeReturned
whenGetLogfileAsResourceCalledThenExpectLogfileToBeReturned
whenGetLogfileAsResourceCalledAndMaxSizeExceededThenExpectLogfileToBeTruncated
whenGetStatusCalledThenExpectBotStatusToBeReturned
getAllStrategyConfig
getStrategyConfig
updateStrategyConfig
createStrategyConfig
deleteStrategyConfig
getAllMarketConfig
getMarketConfig
createMarketConfig
updateMarketConfig
deleteMarketConfig
getEngineConfig
updateEngineConfig
getEmailAlertsConfig
updateEmailAlertsConfig
getExchangeConfig
updateExchangeConfig
getAllStrategyConfig
getStrategyConfig
updateStrategyConfig
createStrategyConfig
deleteStrategyConfig
getEngineConfig
updateEngineConfig
getExchangeConfig
updateExchangeConfig
getEmailAlertsConfig
updateEmailAlertsConfig
getAllMarketConfig
getMarketConfig
updateMarketConfig
createMarketConfig
deleteMarketConfig
getLogfileAsResource
getLogfile
getLogfileTail
getLogfileHead
getStatus
getLogfileAsResource
getLogfile
getLogfileHead
getLogfileTail
tailFile
headFile
collectTailLine
collectHeadLine
getTailLines
getHeadLines
restart
getStatus
restart
getItem
getNonFatalErrorCodes
getNonFatalErrorMessages
getConnectionTimeout
getExchangeName
getExchangeAdapter
getAuthenticationConfig
getNetworkConfig
getOtherConfig
getPricePrecision
getVolumePrecision
getMinimalOrderVolume
init
getItem
setUpBeforeEachTest
testStrategySendsInitialBuyOrderWhenItIsFirstCalled
testStrategySendsNewSellOrderToExchangeWhenCurrentBuyOrderFilled
testStrategyHoldsWhenCurrentBuyOrderIsNotFilled
testStrategySendsNewBuyOrderToExchangeWhenCurrentSellOrderFilled
testStrategyHoldsWhenCurrentSellOrderIsNotFilled
testStrategyHandlesTimeoutExceptionWhenPlacingInitialBuyOrder
testStrategyHandlesTimeoutExceptionWhenPlacingBuyOrder
testStrategyHandlesTimeoutExceptionWhenPlacingSellOrder
testStrategyHandlesTradingApiExceptionWhenPlacingInitialBuyOrder
testStrategyHandlesTradingApiExceptionWhenPlacingBuyOrder
testStrategyHandlesTradingApiExceptionWhenPlacingSellOrder
init
execute
executeAlgoForWhenLastOrderWasNone
executeAlgoForWhenLastOrderWasBuy
executeAlgoForWhenLastOrderWasSell
getAmountOfBaseCurrencyToBuyForGivenCounterCurrencyAmount
getConfigForStrategy
toString
setup
testEmailAlerterInitialisedSuccessfully
testEmailAlerterInitialisedSuccessfullyWhenAlertsDisabledAndNoSmtpConfigSupplied
testEmailAlerterInitialisedSuccessfullyWhenAlertsDisabledAndSmtpConfigSupplied
testEmailAlerterInitialisationFailsWhenAlertsEnabledButNoSmtpConfigSupplied
testEmailAlerterReallySendsMailSuccessfully
someEmailAlertsConfigWithAlertsEnabledAndSmtpConfig
someEmailAlertsConfigWithAlertsDisabledAndNoSmtpConfig
someEmailAlertsConfigWithAlertsEnabledAndNoSmtpConfig
someEmailAlertsConfigWithAlertsDisabledAndSmtpConfig
testBuildingCriticalMsgContent
testMarketIsInitialisedAsExpected
testSettersWorkAsExpected
testEqualsWorksAsExpected
testToStringWorksAsExpected
testAddingAndFetchingAuthenticationConfig
testFetchingSingleAuthenticationConfigItem
testBuildingConfig
testBuildingConfigWithMandatoryConfigOnly
testBuildingConfigWithoutOptionalNetworkConfig
buildAuthenticationConfig
buildNetworkConfig
buildNetworkConfigWithoutErrorCodesAndMessages
buildOtherConfig
buildExchangeConfig
buildExchangeConfigWithMandatoryConfigOnly
buildExchangeConfigWithoutOptionalNetworkConfig
testInitialisationWorksAsExpected
testSettersAndGettersWorkAsExpected
testToStringWorksAsExpected
testInitialisationWorksAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testAddingAndFetchingOtherConfigItems
testToStringWorksAsExpected
testAddingAndFetchingConfigItems
testToStringWorksAsExpected
testBuildingStrategiesSuccessfully
testBuildingStrategiesFailsForUnknownStrategyId
testBuildingStrategiesFailsDuplicateMarket
someStrategiesConfig
someMarketsConfig
someMarketsConfigUsingUnknownStrategyId
someMarketsConfigWithDuplicateMarket
init
execute
init
execute
testCreatingStrategyUsingClassname
testCreatingStrategyUsingBeanName
testCreatingStrategyUsingInvalidName
getImplName
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
init
getImplName
getMarketOrders
getYourOpenOrders
getImplName
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
init
execute
execute
testCreationOfValidTradingStrategyImpl
testCreatingTradingStrategyImplThatDoesNotImplementTradingStrategyThrowsException
testCreatingTradingStrategyImplThatDoesNotExistThrowsException
testCreatingValidExchangeAdapter
testCreatingExchangeAdapterThatDoesNotExistThrowsException
testCreatingExchangeAdapterThatDoesNotImplementTradingApiThrowsException
testCreatingExchangeAdapterThatDoesNotImplementExchangeAdapterThrowsException
setupForEachTest
testEngineInitialisesSuccessfully
testEngineShutsDownWhenEmergencyStopBalanceIfBreached
testEngineDoesNotPerformEmergencyStopCheckWhenEmergencyStopBalanceIsZero
testEngineExecutesTradeCyclesAndCanBeShutdownSuccessfully
testEngineShutsDownWhenItReceivesStrategyExceptionFromTradingStrategy
testEngineShutsDownWhenItReceivesUnexpectedExceptionFromTradingStrategy
testEngineShutsDownWhenItReceivesUnexpectedExceptionFromExchangeAdapter
testEngineShutsDownWhenItReceivesTradingApiExceptionFromExchangeAdapter
testEngineExecutesNextTradeCyclesAfterReceivingExchangeNetworkException
testEngineCannotBeStartedMoreThanOnce
testEngineShutsDownWhenBalancesCannotBeFetchedFromExchange
testEngineInitialisesSuccessfullyWithoutNetworkConfig
setupExchangeAdapterConfigExpectations
setupExchangeAdapterConfigWithNoNetworkConfigExpectations
setupEngineConfigExpectations
setupEngineConfigForNoEmergencyStopCheckExpectations
setupStrategyAndMarketConfigExpectations
setupConfigLoadingExpectations
setupConfigLoadingExpectationsForNoEmergencyStopCheck
someExchangeConfig
someExchangeConfigWithoutNetworkConfig
someNetworkConfig
someAuthenticationConfig
someOtherConfig
someEngineConfig
someEngineConfigForNoEmergencyStopCheck
allTheStrategiesConfig
allTheMarketsConfig
engineStateChanged
main
run
sendMessage
getPasswordAuthentication
initialise
buildCriticalMsgContent
setName
getName
setId
getId
setBaseCurrency
getBaseCurrency
setCounterCurrency
getCounterCurrency
equals
hashCode
toString
getExchangeName
setExchangeName
getExchangeAdapter
setExchangeAdapter
getAuthenticationConfig
setAuthenticationConfig
setNetworkConfig
getNetworkConfig
getOtherConfig
setOtherConfig
toString
buildConfig
getItem
getItems
setItems
getItem
getItems
setItems
toString
getConnectionTimeout
setConnectionTimeout
getNonFatalErrorCodes
setNonFatalErrorCodes
getNonFatalErrorMessages
setNonFatalErrorMessages
toString
getConfigItem
getNumberOfConfigItems
getConfigItemKeys
setItems
getItems
toString
setTradingStrategyFactory
buildStrategies
setSpringContext
createTradingStrategy
isEmergencyStopLimitBreached
createComponent
start
init
runMainControlLoop
shutdown
isRunning
sleepUntilNextTradingCycle
handleExchangeNetworkException
handleTradingApiException
handleStrategyException
handleUnexpectedException
isEmergencyStopLimitBreached
loadExchangeAdapter
loadEngineConfig
loadTradingStrategies
setupForEachTest
testPublicApiCalls
testAuthenticatedApiCalls
setupForEachTest
testPublicApiCalls
testAuthenticatedApiCalls
setupForEachTest
testPublicApiCalls
testAuthenticatedApiCalls
setupForEachTest
testPublicApiCalls
testAuthenticatedApiCalls
setupForEachTest
testPublicApiCalls
testAuthenticatedApiCalls
setupForEachTest
testCreateOrderToBuyIsSuccessful
testCreateOrderToSellIsSuccessful
testCreateOrderHandlesExchangeNetworkException
testCreateOrderHandlesUnexpectedException
testCancelOrderIsSuccessful
testCancelOrderHandlesExchangeNetworkException
testCancelOrderHandlesUnexpectedException
testGettingMarketOrdersSuccessfully
testGettingMarketOrdersHandlesExchangeNetworkException
testGettingMarketOrdersHandlesUnexpectedException
testGettingYourOpenOrdersSuccessfully
testGettingYourOpenOrdersHandlesExchangeNetworkException
testGettingYourOpenOrdersHandlesUnexpectedException
testGettingLatestMarketPriceSuccessfully
testGettingLatestMarketPriceHandlesExchangeNetworkException
testGettingLatestMarketPriceHandlesUnexpectedException
testGettingBalanceInfoSuccessfully
testGettingBalanceInfoHandlesExchangeNetworkException
testGettingBalanceInfoHandlesUnexpectedException
testGettingExchangeBuyingFeeSuccessfully
testGettingExchangeBuyingFeeHandlesTimeoutException
testGettingExchangeBuyingFeeHandlesUnexpectedException
testGettingExchangeSellingFeeSuccessfully
testGettingExchangeSellingFeeHandlesTimeoutException
testGettingExchangeSellingFeeHandlesUnexpectedException
testGettingTickerSuccessfully
testGettingTickerHandlesExchangeNetworkException
testGettingTickerHandlesUnexpectedException
testGettingImplNameIsAsExpected
testExchangeAdapterInitialisesSuccessfully
testExchangeAdapterThrowsExceptionIfPublicKeyConfigIsMissing
testExchangeAdapterThrowsExceptionIfSecretConfigIsMissing
testExchangeAdapterThrowsExceptionIfTimeoutConfigIsMissing
testSendingPublicRequestToExchangeSuccessfully
testSendingPublicRequestToExchangeHandlesExchangeNetworkException
testSendingPublicRequestToExchangeHandlesTradingApiException
testSendingAuthenticatedRequestToExchangeSuccessfully
testSendingAuthenticatedRequestToExchangeHandlesExchangeNetworkException
testSendingAuthenticatedRequestToExchangeHandlesTradingApiException
setupForEachTest
testCreateOrderWhenOneAlreadyExists
testCreateBuyOrder
testCreateBuyOrderThatFillsInstantly
testCreateSellOrder
testCreateSellOrderThatFillsInstantly
testCancelOrderIsSuccessful
testCancelOrderWhenNoneExist
testCancelOrderWhenOrderIdDoesNotMatch
testGettingYourOpenOrdersWhenNoneExist
testGettingYourOpenOrdersWhenSellOrderNotFilled
testGettingYourOpenOrdersWhenSellOrderFilled
testGettingYourOpenOrdersWhenBuyOrderNotFilled
testGettingYourOpenOrdersWhenBuyOrderFilled
testGettingMarketOrdersSuccessfully
testGettingLatestMarketPriceSuccessfully
testGettingBalanceInfoSuccessfully
testGettingExchangeBuyingFeeSuccessfully
testGettingExchangeSellingFeeSuccessfully
testGettingTickerSuccessfully
testGettingTickerHandlesExchangeNetworkException
testGettingTickerHandlesUnexpectedException
testGettingImplNameIsAsExpected
testExchangeAdapterInitialisesSuccessfully
testExchangeAdapterThrowsExceptionIfClientIdConfigIsMissing
testExchangeAdapterThrowsExceptionIfPublicKeyConfigIsMissing
testExchangeAdapterThrowsExceptionIfSecretConfigIsMissing
testExchangeAdapterThrowsExceptionIfTimeoutConfigIsMissing
setupBalancesBeforeEachTest
testBalanceInfoIsInitialisedAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testTickerIsInitialisedAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
setupOrdersBeforeEachTest
testMarketOrderBookIsInitialisedAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testMarketOrderIsInitialisedAsExpected
testSettersWorkAsExpected
testToStringWorksAsExpected
testOpenOrderIsInitialisedAsExpected
testSettersWorkAsExpected
testEqualsWorksAsExpected
testToStringWorksAsExpected
setup
getPricePrecision
getVolumePrecision
getMinOrderSize
getDecimalFormatSymbols
setupForEachTest
testCancelOrderIsSuccessful
testCancelOrderHandlesExchangeNetworkException
testCancelOrderHandlesUnexpectedException
testCreateOrderToBuyIsSuccessful
testCreateOrderToSellIsSuccessful
testCreateOrderHandlesExchangeNetworkException
testCreateOrderHandlesUnexpectedException
testGettingMarketOrdersSuccessfully
testGettingMarketOrdersHandlesExchangeNetworkException
testGettingMarketOrdersHandlesUnexpectedException
testGettingYourOpenOrdersSuccessfully
testGettingYourOpenOrdersHandlesExchangeNetworkException
testGettingYourOpenOrdersHandlesUnexpectedException
testGettingLatestMarketPriceSuccessfully
testGettingLatestMarketPriceHandlesExchangeNetworkException
testGettingLatestMarketPriceHandlesUnexpectedException
testGettingBalanceInfoSuccessfully
testGettingBalanceInfoHandlesExchangeNetworkException
testGettingBalanceInfoHandlesUnexpectedException
testGettingExchangeBuyingFeeSuccessfully
testGettingExchangeBuyingFeeHandlesTimeoutException
testGettingExchangeBuyingFeeHandlesUnexpectedException
testGettingExchangeSellingFeeSuccessfully
testGettingExchangeSellingFeeHandlesTimeoutException
testGettingExchangeSellingFeeHandlesUnexpectedException
testGettingTickerSuccessfully
testGettingTickerHandlesExchangeNetworkException
testGettingTickerHandlesUnexpectedException
testGettingImplNameIsAsExpected
testExchangeAdapterInitialisesSuccessfully
testExchangeAdapterThrowsExceptionIfClientIdConfigIsMissing
testExchangeAdapterThrowsExceptionIfPublicKeyConfigIsMissing
testExchangeAdapterThrowsExceptionIfSecretConfigIsMissing
testExchangeAdapterThrowsExceptionIfTimeoutConfigIsMissing
testSendingPublicRequestToExchangeSuccessfully
testSendingPublicRequestToExchangeHandlesExchangeNetworkException
testSendingPublicRequestToExchangeHandlesTradingApiException
testSendingAuthenticatedRequestToExchangeSuccessfully
testSendingAuthenticatedRequestToExchangeHandlesExchangeNetworkException
testSendingAuthenticatedRequestToExchangeHandlesTradingApiException
setupForEachTest
testCreateOrderToBuyIsSuccessful
testCreateOrderToSellIsSuccessful
testCreateOrderHandlesExchangeNetworkException
testCreateOrderHandlesUnexpectedException
testCancelOrderIsSuccessful
testCancelOrderHandlesExchangeNetworkException
testCancelOrderHandlesUnexpectedException
testGettingYourOpenOrdersSuccessfully
testGettingYourOpenOrdersHandlesExchangeNetworkException
testGettingYourOpenOrdersHandlesUnexpectedException
testGettingMarketOrders
testGettingMarketOrdersHandlesExchangeNetworkException
testGettingMarketOrdersHandlesUnexpectedException
testGettingLatestMarketPriceSuccessfully
testGettingLatestMarketPriceHandlesExchangeNetworkException
testGettingLatestMarketPriceHandlesUnexpectedException
testGettingBalanceInfoSuccessfully
testGettingBalanceInfoHandlesExchangeNetworkException
testGettingBalanceInfoHandlesUnexpectedException
testGettingTickerSuccessfully
testGettingTickerHandlesExchangeNetworkException
testGettingTickerHandlesUnexpectedException
testGettingExchangeSellingFeeIsAsExpected
testGettingExchangeBuyingFeeIsAsExpected
testGettingImplNameIsAsExpected
testExchangeAdapterInitialisesSuccessfully
testExchangeAdapterThrowsExceptionIfPassphraseConfigIsMissing
testExchangeAdapterThrowsExceptionIfPublicKeyConfigIsMissing
testExchangeAdapterThrowsExceptionIfSecretConfigIsMissing
testExchangeAdapterThrowsExceptionIfBuyFeeIsMissing
testExchangeAdapterThrowsExceptionIfSellFeeIsMissing
testExchangeAdapterThrowsExceptionIfTimeoutConfigIsMissing
testSendingPublicRequestToExchangeSuccessfully
testSendingPublicRequestToExchangeHandlesExchangeNetworkException
testSendingPublicRequestToExchangeHandlesTradingApiException
testSendingAuthenticatedRequestToExchangeSuccessfully
testSendingAuthenticatedRequestToExchangeHandlesExchangeNetworkException
testSendingAuthenticatedRequestToExchangeHandlesTradingApiException
setupForEachTest
testGettingMarketOrdersSuccessfully
testGettingMarketOrdersHandlesExchangeNetworkException
testGettingMarketOrdersHandlesUnexpectedException
testCreateOrderToBuyIsSuccessful
testCreateOrderToSellIsSuccessful
testCreateOrderHandlesExchangeNetworkException
testCreateOrderHandlesUnexpectedException
testCancelOrderIsSuccessful
testCancelOrderHandlesExchangeNetworkException
testCancelOrderHandlesUnexpectedException
testGettingBalanceInfoSuccessfully
testGettingBalanceInfoHandlesExchangeNetworkException
testGettingBalanceInfoHandlesUnexpectedException
testGettingLatestMarketPriceSuccessfully
testGettingLatestMarketPriceHandlesExchangeNetworkException
testGettingLatestMarketPriceHandlesUnexpectedException
testGettingYourOpenOrdersSuccessfully
testGettingYourOpenOrdersHandlesExchangeNetworkException
testGettingYourOpenOrdersHandlesUnexpectedException
testGettingImplNameIsAsExpected
testGettingExchangeSellingFeeIsAsExpected
testGettingExchangeBuyingFeeIsAsExpected
testExchangeAdapterInitialisesSuccessfully
testExchangeAdapterThrowsExceptionIfPublicKeyConfigIsMissing
testExchangeAdapterThrowsExceptionIfSecretConfigIsMissing
testExchangeAdapterThrowsExceptionIfTimeoutConfigIsMissing
testSendingPublicRequestToExchangeSuccessfully
testSendingPublicRequestToExchangeHandlesExchangeNetworkException
testSendingPublicRequestToExchangeHandlesTradingApiException
testSendingAuthenticatedRequestToExchangeSuccessfully
testSendingAuthenticatedRequestToExchangeHandlesExchangeNetworkException
testSendingAuthenticatedRequestToExchangeHandlesTradingApiException
setupForEachTest
testGettingMarketOrdersSuccessfully
testGettingMarketOrdersHandlesErrorResponse
testGettingMarketOrdersHandlesExchangeNetworkException
testGettingMarketOrdersHandlesUnexpectedException
testGettingYourOpenOrdersSuccessfully
testGettingYourOpenOrdersExchangeErrorResponse
testGettingYourOpenOrdersHandlesExchangeNetworkException
testGettingYourOpenOrdersHandlesUnexpectedException
testCreateOrderToBuyIsSuccessful
testCreateOrderToSellIsSuccessful
testCreateOrderExchangeErrorResponse
testCreateOrderHandlesExchangeNetworkException
testCreateOrderHandlesUnexpectedException
testCancelOrderIsSuccessful
testCancelOrderExchangeErrorResponse
testCancelOrderHandlesExchangeNetworkException
testCancelOrderHandlesUnexpectedException
testGettingBalanceInfoSuccessfully
testGettingBalanceInfoHandlesExchangeErrorResponse
testGettingBalanceInfoHandlesExchangeNetworkException
testGettingBalanceInfoHandlesUnexpectedException
testGettingLatestMarketPriceSuccessfully
testGettingLatestMarketPriceHandlesExchangeErrorResponse
testGettingLatestMarketPriceHandlesExchangeNetworkException
testGettingLatestMarketPriceHandlesUnexpectedException
testGettingTickerSuccessfully
testGettingTickerHandlesExchangeErrorResponse
testGettingTickerHandlesExchangeNetworkException
testGettingTickerHandlesUnexpectedException
testGettingImplNameIsAsExpected
testGettingExchangeSellingFeeIsAsExpected
testGettingExchangeBuyingFeeIsAsExpected
testGettingMinOrderVolumeIfAvailable
testGettingMinOrderVolumeIfNotAvailable
testExchangeAdapterInitialisesSuccessfully
testExchangeAdapterThrowsExceptionIfPublicKeyConfigIsMissing
testExchangeAdapterThrowsExceptionIfSecretConfigIsMissing
testExchangeAdapterThrowsExceptionIfTimeoutConfigIsMissing
testSendingPublicRequestToExchangeSuccessfully
testSendingPublicRequestToExchangeHandlesExchangeNetworkException
testSendingPublicRequestToExchangeHandlesTradingApiException
testSendingAuthenticatedRequestToExchangeSuccessfully
testSendingAuthenticatedRequestToExchangeHandlesExchangeNetworkException
testSendingAuthenticatedRequestToExchangeHandlesTradingApiException
mockAssetPairsPublicRequest
mockAssetPairsNetworkRequest
createMockAssetPairs
getId
setId
getCreationDate
setCreationDate
getMarketId
setMarketId
getType
setType
getPrice
setPrice
getQuantity
setQuantity
getOriginalQuantity
setOriginalQuantity
getTotal
setTotal
equals
hashCode
toString
getType
setType
getPrice
setPrice
getQuantity
setQuantity
getTotal
setTotal
toString
getBalancesAvailable
setBalancesAvailable
getBalancesOnHold
setBalancesOnHold
toString
getLast
setLast
getBid
setBid
getAsk
setAsk
getLow
setLow
getHigh
setHigh
getOpen
setOpen
getVolume
setVolume
getVwap
setVwap
getTimestamp
setTimestamp
toString
getMarketId
setMarketId
getSellOrders
setSellOrders
getBuyOrders
setBuyOrders
toString
getPricePrecision
getVolumePrecision
getMinimalOrderVolume
sendNetworkRequest
setNetworkConfig
getAuthenticationConfig
getOtherConfig
getAuthenticationConfigItem
getOtherConfigItem
getDecimalFormatSymbols
getStatusCode
getPayload
toString
setRequestHeaders
errorMessageIsRecoverableNetworkError
errorCodeIsRecoverableNetworkError
extractIoErrorMessage
assertItemExists
init
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getMinimumOrderVolume
getImplName
getTicker
toString
loadPrecisionConfig
toString
toString
toString
toString
toString
toString
toString
deserialize
sendPublicRequestToExchange
sendAuthenticatedRequestToExchange
initSecureMessageLayer
setAuthenticationConfig
setOtherConfig
loadPairPrecisionConfig
adaptKrakenOpenOrders
adaptKrakenOrderBook
adaptKrakenCancelOrderResult
adaptKrakenBalanceInfo
initGson
isExchangeUndergoingMaintenance
createRequestParamMap
createHeaderParamMap
makeNetworkRequest
getStringValue
init
createOrder
cancelOrder
getYourOpenOrders
getMarketOrders
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getImplName
toString
toString
toString
toString
toString
toString
sendPublicRequestToExchange
sendAuthenticatedRequestToExchange
toHex
initSecureMessageLayer
setAuthenticationConfig
setOtherConfig
initGson
createRequestParamMap
createHeaderParamMap
makeNetworkRequest
init
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getImplName
getTicker
toString
toString
toString
toString
toString
deserialize
sendPublicRequestToExchange
sendAuthenticatedRequestToExchange
toHex
initSecureMessageLayer
setAuthenticationConfig
initGson
createRequestParamMap
createHeaderParamMap
makeNetworkRequest
init
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getImplName
getTicker
toString
toString
toString
toString
toString
toString
toString
toString
toString
sendPublicRequestToExchange
sendAuthenticatedRequestToExchange
toHex
initSecureMessageLayer
setAuthenticationConfig
initGson
createRequestParamMap
createHeaderParamMap
makeNetworkRequest
init
getImplName
getMarketOrders
getYourOpenOrders
createOrder
cancelOrder
getLatestMarketPrice
getBalanceInfo
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getTicker
setOtherConfig
initializeAdapterDelegation
createDelegateExchangeAdapter
checkOpenOrderExecution
checkOpenSellOrderExecution
checkOpenBuyOrderExecution
init
createOrder
cancelOrder
getYourOpenOrders
getMarketOrders
getBalanceInfo
getLatestMarketPrice
getPercentageOfBuyOrderTakenForExchangeFee
getPercentageOfSellOrderTakenForExchangeFee
getImplName
getTicker
toString
toString
toString
toString
toString
sendPublicRequestToExchange
sendAuthenticatedRequestToExchange
initSecureMessageLayer
setAuthenticationConfig
setOtherConfig
initGson
createRequestParamMap
createHeaderParamMap
makeNetworkRequest
