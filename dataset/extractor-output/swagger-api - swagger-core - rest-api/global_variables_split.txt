expected
Keys
ctx
Id
config
Location
resource
Packages
resource
Classes
open
Api
Configuration
user
Defined
Options
open
API
id
resource
Packages
resource
Classes
filter
Class
reader
Class
scanner
Class
pretty
Print
read
All
Resources
ignored
Routes
cache
TTL
model
Converter
Classes
object
Mapper
Processor
Class
sort
Output
always
Resolve
App
Path
skip
Resolve
App
Path
open
API31
convert
To
Open
API31
default
Response
Code
ignored
LOGGER
open
Api
Configuration
ignored
instance
map
LOGGER
resource
Packages
resource
Classes
id
parent
config
Location
open
Api
Configuration
open
Api
Reader
open
Api
Scanner
provided
Open
Api
Reader
object
Mapper
Processor
model
Converters
output
Json
Mapper
output
Yaml
Mapper
cache
cache
TTL
open
API31
convert
To
Open
API31
open
Api
Configuration
created
At
open
Api
LOGGER
PETSTORE
SOURCE
TAGS
SOURCE
OPERATIONS
SOURCE
CALLBACKS
SOURCE
RESPONSES
SOURCE
PARAMETERS
SOURCE
LINKS
SOURCE
EXAMPLES
SOURCE
REQUEST
BODIES
SOURCE
YAML
EXTENSION
PETSTORE
PACKAGE
DOT
SLASH
LOGGER
EXAMPLE
TAG
SECOND
TAG
OPERATION
SUMMARY
OPERATION
DESCRIPTION
CALLBACK
POST
OPERATION
DESCRIPTION
CALLBACK
GET
OPERATION
DESCRIPTION
RESPONSE
CODE
200
RESPONSE
DESCRIPTION
EXTERNAL
DOCS
DESCRIPTION
EXTERNAL
DOCS
URL
PARAMETER
IN
PARAMETER
NAME
PARAMETER
DESCRIPTION
CALLBACK
SUBSCRIPTION
ID
CALLBACK
URL
SECURITY
KEY
SCOPE
VALUE1
SCOPE
VALUE2
PATH
REF
PATH
1
REF
PATH
2
REF
SCHEMA
TYPE
SCHEMA
FORMAT
SCHEMA
DESCRIPTION
RESPONSES
NUMBER
TAG
NUMBER
SECURITY
SCHEMAS
PARAMETER
NUMBER
SECURITY
REQUIREMENT
NUMBER
SCOPE
NUMBER
PATHS
NUMBER
b
c
id
name
annotated
foo
bar
foobar
foo
bar
foobar
id
category
name
photo
Urls
tags
status
foo
bar
foobar
id
name
annotated
foo
bar
foobar
id
username
first
Name
last
Name
email
password
phone
user
Status
pets
categories
pet
Data
RESPONSE
DESCRIPTION
RESPONSE
STATUS
401
custom
Extension
subscription
Id
subscription
Id
subscription
Item
subscription
Item
Id
subscription
Id
subscription
Item
subscription
Item
Id
subscription
Id
REQUEST
BODY
IN
METHOD
REQUEST
BODY
IN
PARAMETER
NO
IN
PARAMETER
REQUEST
BODY
IN
ANNOTATION
USER
PATH
id
username
street
zip
subscription
Id
id
code
message
id
id
name
EXPECTED
YAML
a
b
id
made
model
tires
price
color
made
condition
EXPECTED
JSON
EXPECTED
YAML
jetty
Port
made
model
tires
price
color
made
condition
id
code
message
string
Array
name
names
names
name
label
code
code
code
message
id
code
message
foo
issue3438
EXPECTED
YAML
WITHOUT
WRAPPER
EXPECTED
YAML
WITH
WRAPPER
a
number
name
message
foo
id
code
message
category
id
foo
foo
user
Data
disposition
name
upload
constructor
Param
field
Param
hidden
Param
user
Data
users
pets
categories
isotonic
Drink
soft
Drink
iso
Drink
isotonic
Drink
Only
Xml
Element
foo
test
Child
foo
user
Data
user
Data
id
foo
id
foo
street
country
value
country
code
message
id
name
id
category
name
photo
Urls
tags
status
id
ignored
bean
model
model2
value
id
name
id
username
first
Name
last
Name
email
password
phone
user
Status
test
Property
Generator
As
Id
test
Property
Generator
As
Property
driver
name
test
Changed
Property
Name
test
Changed
Property
Name2
driver
name
test
Without
Property
As
Id
test
Without
Property
As
Property
driver
name
id
test
Int
Sequence
Generator
As
Id
test
Int
Sequence
Generator
As
Property
name
test
Int
Sequence
Without
Property
As
Id
test
Int
Sequence
Without
Property
As
Property
name
test
UUID
Generator
As
Id
test
UUID
Generator
As
Property
name
test
UUID
Generator
Without
Property
As
Id
test
UUID
Generator
Without
Property
As
Property
name
test
Generators
None
driver
name
test
Custom
Generator
driver
name
test
Without
Json
Identity
Reference
driver
name
test
Int
Sequence
Generator
At
Class
Level
name
id
source
Definitions
driver
name
model
serial
Version
UID
id
username
first
Name
last
Name
email
password
phone
user
Status
c
d
bean
Type
a
b
list
streets
foo
postal
Code
id
code
message
skip
limit
bark
Volume
likes
Cream
lives
my
Property
billing
Address
data
previous
Cursor
next
Cursor
items
id
id
YAML
postal
Code
foo
id
code
message
random
List
status
int
Value
text
encoded
String
address
client
ids
names
name
credit
Card
some
Strings
more
Pojos
pet
Data
user
Data
subscription
Uuid
foo
foo
guid
name
pet
Data
param1
param2
scanner
scanner
scanner
expected
Sorted
expected
Not
Sorted
scanner
ext
providers
resources
EXPECTED
YAML
CYCLIC
EXPECTED
YAML
id
id
code
message
id
username
subscription
Id
subscription
Id
subscription
Id
phone
phone
subscription
Id
pet
Data
key
security
Scheme
pretty
Print
openapi31
LOGGER
GET
METHOD
POST
METHOD
PUT
METHOD
DELETE
METHOD
HEAD
METHOD
OPTIONS
METHOD
PATH
DELIMITER
COMPONENTS
REF
LOGGER
extensions
openapi31
servlet
Context
servlet
Config
LOGGER
output
Format
resource
Packages
resource
Classes
filter
Class
reader
Class
context
Id
scanner
Class
pretty
Print
read
All
Resources
ignored
Routes
openapi
As
String
object
Mapper
Processor
Class
default
Response
Code
model
Converter
Classes
sort
Output
always
Resolve
App
Path
skip
Resolve
App
Path
open
API31
convert
To
Open
API31
application
servlet
Config
LOGGER
servlet
Config
file
Open
Api
Configuration
Loader
classpath
Open
Api
Configuration
Loader
OPENAPI
CONFIGURATION
RESOURCEPACKAGE
KEY
OPENAPI
CONFIGURATION
LOCATION
KEY
JERSEY1
PACKAGE
KEY
JERSEY2
PACKAGE
KEY
JERSEY2
CLASSES
KEY
OPENAPI
CONFIGURATION
READER
KEY
OPENAPI
CONFIGURATION
SCANNER
KEY
OPENAPI
CONFIGURATION
BUILDER
KEY
OPENAPI
CONFIGURATION
PRETTYPRINT
KEY
OPENAPI
CONFIGURATION
READALLRESOURCES
KEY
OPENAPI
CONFIGURATION
RESOURCECLASSES
KEY
OPENAPI
CONFIGURATION
FILTER
KEY
OPENAPI
CONFIGURATION
CACHE
TTL
KEY
OPENAPI
CONFIGURATION
SORTOUTPUT
KEY
OPENAPI
CONFIGURATION
ALWAYSRESOLVEAPPPATH
KEY
OPENAPI
CONFIGURATION
SKIPRESOLVEAPPPATH
KEY
OPENAPI
CONFIGURATION
OBJECT
MAPPER
PROCESSOR
KEY
OPENAPI
CONFIGURATION
DEFAULT
RESPONSE
CODE
KEY
OPENAPI
CONFIGURATION
MODEL
CONVERTERS
KEY
OPENAPI
CONFIGURATION
OPENAPI
31
KEY
OPENAPI
CONFIGURATION
CONVERT
TO
OPENAPI
31
KEY
LOGGER
app
LOGGER
config
Location
resource
Packages
open
Api
Configuration
config
app
config
app
servlet
Config
ignored
open
Api
Configuration
application
LOGGER
only
Consider
Resource
Packages
LOGGER
APPLICATION
JSON
APPLICATION
YAML
ACCEPT
HEADER
servlet
Config
parameters
request
Body
form
Parameters
LOGGER
DEFAULT
MEDIA
TYPE
VALUE
DEFAULT
DESCRIPTION
config
application
open
API
components
paths
open
Api
Tags
default
Response
Key
GET
METHOD
POST
METHOD
PUT
METHOD
DELETE
METHOD
PATCH
METHOD
TRACE
METHOD
HEAD
METHOD
OPTIONS
METHOD
QUERY
PARAM
HEADER
PARAM
COOKIE
PARAM
PATH
PARAM
mapper
value
value
value
value
description
$ref
required
deprecated
value
style
explode
schema
examples
example
content
extensions
value
extensions
operation
Ref
operation
Id
parameters
request
Body
headers
description
$ref
extensions
server
summary
description
value
external
Value
$ref
extensions
value
Set
Flag
summary
description
get
put
post
delete
options
head
patch
trace
servers
parameters
$ref
extensions
schema
examples
example
encoding
extensions
example
Set
Flag
property
Name
mapping
extensions
BIND
TYPE
AND
TYPES

default
name
title
multiple
Of
maximum
exclusive
Maximum
minimum
exclusive
Minimum
max
Length
min
Length
pattern
max
Items
min
Items
unique
Items
max
Properties
min
Properties
required
type
not
properties
additional
Properties
description
format
$ref
nullable
read
Only
write
Only
example
external
Docs
deprecated
xml
extensions

enum
discriminator
example
Set
Flag
prefix
Items
all
Of
any
Of
one
Of
items

const
spec
Version
types
pattern
Properties
exclusive
Maximum
Value
exclusive
Minimum
Value
contains
$id
$schema
$anchor
$vocabulary
$dynamic
Anchor
content
Encoding
content
Media
Type
content
Schema
property
Names
unevaluated
Properties
max
Contains
min
Contains
additional
Items
unevaluated
Items

if

else
then
dependent
Schemas
dependent
Required
$comment
examples
boolean
Schema
Value
json
Schema
json
Schema
Impl
name
namespace
prefix
attribute
wrapped
extensions
content
Type
headers
value
style
explode
allow
Reserved
extensions
content
Type
headers
style
explode
allow
Reserved
extensions
value
description
headers
content
links
extensions
$ref
DEFAULT
extensions
in
name
in
description
required
deprecated
allow
Empty
Value
$ref
value
style
explode
allow
Reserved
schema
examples
example
content
extensions
in
in
required
description
content
required
extensions
$ref
in
name
description
external
Docs
extensions
extensions
extensions
$ref
name
url
email
extensions
name
url
identifier
extensions
title
description
terms
Of
Service
contact
license
version
extensions
summary
COMPONENTS
SCHEMAS
REF
schemas
responses
parameters
examples
request
Bodies
headers
security
Schemes
links
callbacks
extensions
path
Items
description
url
extensions
tags
summary
description
external
Docs
operation
Id
parameters
request
Body
responses
callbacks
deprecated
security
servers
extensions
extensions
url
description
variables
extensions

enum

default
description
extensions
openapi
info
external
Docs
servers
security
tags
paths
components
extensions
json
Schema
Dialect
spec
Version
webhooks
extensions
value
type
description
name
$ref
value
in
scheme
bearer
Format
flows
open
Id
Connect
Url
extensions
implicit
password
client
Credentials
authorization
Code
extensions
authorization
Url
token
Url
refresh
Url
scopes
extensions
LOGGER
code
code
users
pets
categories
code
message
id
name
id
category
name
photo
Urls
tags
status
id
ignored
bean
model
model2
value
id
name
id
username
first
Name
last
Name
email
password
phone
user
Status
test
Property
Generator
As
Id
test
Property
Generator
As
Property
driver
name
test
Changed
Property
Name
test
Changed
Property
Name2
driver
name
test
Without
Property
As
Id
test
Without
Property
As
Property
driver
name
id
test
Int
Sequence
Generator
As
Id
test
Int
Sequence
Generator
As
Property
name
test
Int
Sequence
Without
Property
As
Id
test
Int
Sequence
Without
Property
As
Property
name
test
UUID
Generator
As
Id
test
UUID
Generator
As
Property
name
test
UUID
Generator
Without
Property
As
Id
test
UUID
Generator
Without
Property
As
Property
name
test
Generators
None
driver
name
test
Custom
Generator
driver
name
test
Without
Json
Identity
Reference
driver
name
id
source
Definitions
driver
name
model
serial
Version
UID
id
username
first
Name
last
Name
email
password
phone
user
Status
c
d
bean
Type
a
b
list
skip
limit
LOGGER
id
id
code
message
id
username
subscription
Id
subscription
Id
phone
phone
subscription
Id
pet
Data
output
File
Name
output
Path
output
Format
resource
Packages
resource
Classes
model
Converter
Classes
filter
Class
reader
Class
scanner
Class
object
Mapper
Processor
Class
default
Response
Code
pretty
Print
read
All
Resources
ignored
Routes
context
Id
skip
openapi
File
Path
configuration
File
Path
project
encoding
sort
Output
always
Resolve
App
Path
skip
Resolve
App
Path
openapi31
convert
To
Open
API31
project
Encoding
config
files
jakarta
Xml
Bind
Dep
jakarta
Xml
Bind
Regex
jakarta
Validation
Dep
jakarta
Validation
Regex
jackson
Json
Dep
jackson
Json
Regex
jackson
Base
Dep
jackson
Base
Regex
jackson
Jaxb
Dep
jackson
Jaxb
Regex
jakarta
Activation
Dep
jakarta
Activation
Regex
project
invert
overwrite
rules
Renames
Uri
rules
Version
Uri
rules
Bundles
Uri
rules
Direct
Uri
rules
Per
Class
Constant
Uri
rules
Xmls
Uri
classifier
output
Directory
attach
project
Helper
ignored
test
Project
Dir
build
File
settings
File
openapi
Input
File
output
File
output
Dir
code
code
users
pets
categories
code
message
id
name
id
category
name
photo
Urls
tags
status
id
ignored
bean
model
model2
value
id
name
id
username
first
Name
last
Name
email
password
phone
user
Status
test
Property
Generator
As
Id
test
Property
Generator
As
Property
driver
name
test
Changed
Property
Name
test
Changed
Property
Name2
driver
name
test
Without
Property
As
Id
test
Without
Property
As
Property
driver
name
id
test
Int
Sequence
Generator
As
Id
test
Int
Sequence
Generator
As
Property
name
test
Int
Sequence
Without
Property
As
Id
test
Int
Sequence
Without
Property
As
Property
name
test
UUID
Generator
As
Id
test
UUID
Generator
As
Property
name
test
UUID
Generator
Without
Property
As
Id
test
UUID
Generator
Without
Property
As
Property
name
test
Generators
None
driver
name
test
Custom
Generator
driver
name
test
Without
Json
Identity
Reference
driver
name
id
source
Definitions
driver
name
model
serial
Version
UID
id
username
first
Name
last
Name
email
password
phone
user
Status
c
d
bean
Type
a
b
list
skip
limit
LOGGER
id
id
code
message
id
username
subscription
Id
subscription
Id
phone
phone
subscription
Id
pet
Data
LOGGER
output
File
Name
output
Path
output
Dir
open
Api
File
output
Format
resource
Packages
resource
Classes
filter
Class
reader
Class
scanner
Class
pretty
Print
read
All
Resources
ignored
Routes
build
Classpath
classpath
skip
encoding
model
Converter
Classes
object
Mapper
Processor
Class
sort
Output
always
Resolve
App
Path
skip
Resolve
App
Path
context
Id
open
API31
convert
To
Open
API31
default
Response
Code
ignored
LOGGER
m
m
m
id
id
id
date
int
Value
long
Value
float
Value
double
Value
id
id
id
id
date
Field
id
name
department
id
not
A
Tag
definitely
Not
Called
Username
id
id
example
Json
example
Json
SAMPLE
tester
example
Json
Extended
example
Json
id
id
id
Type
is
Active
ids
ids
id
boolean
Object
boolean
Type
NEWLINE
my
Bytes
members
Since
members
firstname
lastname
age
birthday
employer
awards
name
size
is
happy
name
bar
title
foo
primitives
bar
title
foo
NAME
COUNT
bar
title
foo
additional
Property
Types
additional
Properties
m
MESSAGE
model
Resolver
context
member
a
d
c
b
RESOURCE
RECURSIVE
MODELS
RESOURCE
PATH
RESOURCE
PATH
3303
RESOURCE
REFERRED
SCHEMAS
RESOURCE
PATH
WITHOUT
MODELS
RESOURCE
DEPRECATED
OPERATIONS
CHANGED
OPERATION
ID
CHANGED
OPERATION
DESCRIPTION
NEW
OPERATION
ID
NEW
OPERATION
DESCRIPTION
QUERY
PET
MODEL
TAG
MODEL
PET
TAG
STORE
TAG
USER
TAG
tg
filtered
Map
open
API
GET
MODEL
VERSION
QUERY
IN
MODEL
GET
CHANGED
OPERATION
ID
CHANGED
OPERATION
DESCRIPTION
MODEL
PET
RESOURCE
GET
NEW
OPERATION
ID
NEW
OPERATION
DESCRIPTION
id
name
hidden
list
wrapped
List
forced
Element
id
first
Name
last
Name
dept
manager
subordinates
countries
id
name
id
name
sub
Name
a
b
c
d
short
Primitive
short
Object
int
Primitive
int
Object
long
Primitive
long
Object
float
Primitive
float
Object
double
Primitive
double
Object
big
Integer
big
Decimal
e
first
Enum
Value
second
Enum
Value
third
Enum
Value
fourth
Enum
Value
fifth
Enum
Value
sixth
Enum
Value
id
first
Name
address
properties
birth
Date
float
Value
double
Value
id
offset
children
name
href
rel
status
uuid
uri
url
date
a
Byte
a
Byte
Object
name
age
value
is
Great
int
Value
name
id
opts
model
swagger
street
Number
value
id
code
message
created
At
name
id
value
name
id
read
Write
Id
id
age
username
password
password
Hint
email
min
Balance
max
Balance
birth
Year
items
optional
Value
int
Array
long
Array
value
timesheet
States
many
Pairs
complex
Left
name
age
value
actions
name
dept
Code
parent
foo
type
name
a
x
url
name
type
first
Name
last
Name
name
type
first
Name
last
Name
name
type
is
Domestic
name
type
is
Domestic
z
a
s
value
type

type
a
b
name
type
first
Name
last
Name
type
name
a
x
id
valid
value
is
get
is
A
get
A
enum
Value
required
not
Required
not
Required
With
Annotation
mode
Auto
mode
Auto
With
Annotation
mode
Required
mode
Not
Required
mode
Not
Required
With
Annotation
m
m
yaml
json
json
Additional
Properties
Boolean
json
Additional
Properties
Boolean
True
counter
inner
d
a
c
b
model
Resolver
context
sub
Class
Property
property
type
name
created
At
b
elements
c
a
b
c
d
e
f
a
b
c
mapper
model
Resolver
context
param1
param2
model
Resolver
context
type
a
b
c
type
a
b
d
a
c
type
a
b
c
d
id
name
department
type
a
b
c
d
model
Resolver
context
additional
Property
Which
Should
Be
There
type
foo
bar
bob
meow
child
child
child
No
Annotation
currency
id
name
password
id
hidden
name
children
name
created
At
a
in
a
out
a1
in
a1
out
VIEW
OUTPUT
name
created
At
name
created
At
id
value
type
model
Resolver
context
shared
Property
property
name
child
Name
child
Name
bar
foo
serial
Version
UID
name
per
Serving
per100Gram
serial
Version
UID
value
unit
Text
unit
Code
id
hidden
foo
name
name
child
Name
child
Name
foo
name
name
age
privat
publi
getter
setter
getter
Setter
json
Prop
json
Prop
Read
Only
json
Prop
Write
Only
json
Prop
Read
Write
getter
json
Prop
getter
json
Prop
Read
Only
getter
json
Prop
Write
Only
getter
json
Prop
Read
Write
setter
json
Prop
setter
json
Prop
Read
Only
setter
json
Prop
Write
Only
setter
json
Prop
Read
Write
gettersetter
json
Prop
Get
gettersetter
json
Prop
Read
Only
Get
gettersetter
json
Prop
Write
Only
Get
gettersetter
json
Prop
Read
Write
Get
gettersetter
json
Prop
Set
gettersetter
json
Prop
Read
Only
Set
gettersetter
json
Prop
Write
Only
Set
gettersetter
json
Prop
Read
Write
Set
getter
Ignore
setter
getter
Ignore
json
Prop
Set
getter
Ignore
json
Prop
Read
Only
Set
getter
Ignore
json
Prop
Write
Only
Set
getter
Ignore
json
Prop
Read
Write
Set
setter
Ignore
getter
setter
Ignore
json
Prop
Get
setter
Ignore
json
Prop
Read
Only
Get
setter
Ignore
json
Prop
Write
Only
Get
setter
Ignore
json
Prop
Read
Write
Get
getter
Json
Property
On
Field
getter
Json
Property
On
Field
Read
Write
getter
Json
Property
On
Field
Read
Write
Schema
Read
Only
False
getter
Json
Property
On
Field
Read
Write
Creator
Schema
Read
Only
False
getter
Json
Property
On
Field
Read
Only
getter
Json
Property
On
Field
Schema
Read
Only
True
getter
Schema
Read
Only
True
is
Approve
Pairing
data
foo
my
Field1
my
Field2
value
id
first
Name
last
Name
address
email
with
Custom
Annotation
with
Helper
Class
sized
value
objects
object
name
number
value
value
With
Mix
In
foo
other
Things
name
a
b
c
d
e
f
inner
Type
bar
foo
model
Resolver
context
car
Meta
Data
id
model
car
Meta
Data
id
model
code
message
id
name
id
category
name
photo
Urls
tags
status
id
ignored
bean
model
model2
value
id
name
category
id
name
value
type
id
username
first
Name
last
Name
email
password
phone
user
Status
test
Property
Generator
As
Id
test
Property
Generator
As
Property
driver
name
test
Changed
Property
Name
test
Changed
Property
Name2
driver
name
test
Without
Property
As
Id
test
Without
Property
As
Property
driver
name
id
test
Int
Sequence
Generator
As
Id
test
Int
Sequence
Generator
As
Property
name
test
Int
Sequence
Without
Property
As
Id
test
Int
Sequence
Without
Property
As
Property
name
test
UUID
Generator
As
Id
test
UUID
Generator
As
Property
name
test
UUID
Generator
Without
Property
As
Id
test
UUID
Generator
Without
Property
As
Property
name
test
Generators
None
driver
name
test
Custom
Generator
driver
name
test
Without
Json
Identity
Reference
driver
name
id
source
Definitions
driver
name
model
address
foo
street
country
value
country
serial
Version
UID
postal
Code
billing
Address
id
username
first
Name
last
Name
email
password
phone
user
Status
c
d
bean
Type
a
b
postal
Code
random
List
status
int
Value
text
encoded
String
address
client
id
category
name
photo
Urls
tags
status
id
category
name
photo
Urls
tags
status
name
credit
Card
list
model
model
model
Resolver
context
param1
param1
name
created
At
a
stuff
inner
Type
model
Resolver
context
sub
Class
Property
property
type
model
Resolver
context
b
c
d
e
f
d
a
c
b
count
stuff
b
j
simple
Bean
value
name
model
model
foo
bar
LOGGER
converters
model
By
Name
model
By
Type
processed
Types
SINGLETON
SINGLETON31
LOGGER
converters
skipped
Packages
skipped
Classes
schema
referenced
Schemas
type
name
parent
json
Unwrapped
Handler
skip
Override
schema
Property
ctx
Annotations
resolve
As
Ref
json
View
Annotation
include
Properties
Without
JSON
View
skip
Schema
Name
skip
Json
Identity
property
Name
components

mapper

intr

type
Name
Resolver

resolved
Type
Names
default
Serializer
default
Serializer
std
use
Fqn
default
Serializer
LOGGER
NOT
NULL
ANNOTATIONS
SET
PROPERTY
OF
COMPOSED
MODEL
AS
SIBLING
SET
PROPERTY
OF
ENUMS
AS
REF
composed
Model
Properties
As
Sibling
enums
As
Ref
openapi31
wrappers
generator
default
Serializer
JAXB
DEFAULT
VERSION
serial
Version
UID
serial
Version
UID
openapi31
COMMA
default
Deserializer
mapper
LOGGER
KEY
CLASSES
BASE
CLASSES
EXTERNAL
CLASSES
custom
Excluded
Classes
custom
Excluded
External
Classes
custom
Classes
system
Prefixes
non
System
Types
non
System
Type
Packages
NAMES
key
Class
common
Name
datatype
Mappings
LOGGER
mapper
converter
Mapper
LOGGER
kotlin
Available
kotlin
Deprecated
openapi31
openapi31
openapi31
openapi31
converter
Mapper
openapi31
LOGGER
MEDIA
TYPE
context
default
Value
mapper
LOGGER
LOGGER
COLON
OPEN
CLOSE
SLASH
TRIM
PATTERN
mapper
LOGGER
COMPONENTS
REF
path
method
open
API30To31
schema2Json
Schema
