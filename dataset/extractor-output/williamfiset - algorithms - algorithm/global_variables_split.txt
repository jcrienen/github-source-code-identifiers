LOOPS
INF
n
matrix
min
Weight
Matching
LOOPS
random
rand
LOOPS
TEST
SZ
NUM
NULLS
MAX
RAND
NUM
ASCII
LETTERS
hash
data
RANDOM
LOOPS
MAX
SIZE
MAX
RAND
NUM
map
N
MOD
keys
values
double
Hash
Keys
RANDOM
RANDOM
LOOPS
MAX
SIZE
MAX
RAND
NUM
map
hash
data
RANDOM
LOOPS
MAX
SIZE
MAX
RAND
NUM
map
hash
data
RANDOM
LOOPS
MAX
SIZE
MAX
RAND
NUM
map
hash
hash2
int
Data
vector
Data
string
Data
random
Vector
R
MAX
VECTOR
SIZE
LOOPS
TEST
SZ
MAX
RAND
NUM
LOOPS
MAX
SZ
LOOPS
MAX
SZ
LOOPS
MAX
SZ
random
rand
MIN
RAND
NUM
MAX
RAND
NUM
TEST
SZ
LOOPS
AB
hash
data
r
LOOPS
TEST
SZ
MAX
RAND
NUM
hs
MAX
MIN
data
left
right
LOOPS
LOOPS
TEST
SZ
NUM
NULLS
MAX
RAND
NUM
list
queue
ITERATIONS
ITERATIONS
MAX
N
ITERATIONS
ITERATIONS
ITERATIONS
MAX
N
ITERATIONS
ITERATIONS
MAX
N
ITERATIONS
MAX
RAND
NUM
MIN
RAND
NUM
TEST
SZ
tree
MAX
RAND
NUM
MIN
RAND
NUM
TEST
SZ
tree
MAX
RAND
NUM
MIN
RAND
NUM
TEST
SZ
tree
MIN
RAND
NUM
MAX
RAND
NUM
TEST
SZ
LOOPS
UNUSED
VAL
ar
MIN
RAND
NUM
MAX
RAND
NUM
TEST
SZ
LOOPS
UNUSED
VAL
TOLERANCE
solver
INF
matrix1
matrix2
INF
NEG
INF
matrix1
matrix2
matrix3
graph
solver
solvers
solvers
solver
EPS
TESTS
algorithm
sorting
Algorithms
random
under
Test
under
Test
random
MAX
ITERATION
strings
p
q
zeta
exp
powers
NUM
BITS
NUM
BITS
SHIFT
MAX
MIN
RANDOM
MAX
PRIMES
r
i
EPS
function
EPS
EPS
n
cost
END
STATE
solved
min
Weight
Cost
matching
dp
N
W
H
MOD
br
sc
dp
tiles
tile
Frequency
a
b
insertion
Cost
deletion
Cost
substitution
Cost
INF
gallery
dp
LEFT
RIGHT
br
MAX
DAYS
n
dp
MOD
a
b
insertion
Cost
deletion
Cost
substitution
Cost
cost
impossible
Edge
Matches
n
cost
FULL
STATE
artificial
Node
Id
is
Odd
solved
min
Weight
Cost
matching
min
Coins
selected
Coins
INF
n
cost
END
STATE
solved
min
Weight
Cost
matching
N
T
sa
lcp
constructed
Sa
constructed
Lcp
Array
first
Half
second
Half
original
Index
DEFAULT
ALPHABET
SIZE
alphabet
Size
sa2
rank
tmp
c
index
len
text
suffixes
n
P
log2
dp
it
n
P
log2
dp
it
op
sum
Fn
min
Fn
max
Fn
mult
Fn
gcd
Fn
rand
height
head
tail
left
right
up
down
height
index
value
k
root
point
left
right
LINEAR
CONSTANT
hash
load
Factor
capacity
threshold
modification
Count
used
Buckets
key
Count
keys
values
TOMBSTONE
DEFAULT
CAPACITY
DEFAULT
LOAD
FACTOR
index
keys
Left
hash
key
value
DEFAULT
CAPACITY
DEFAULT
LOAD
FACTOR
max
Load
Factor
capacity
threshold
size
table
bucket
Index
bucket
Iter
hash
hash2
int
Data
vector
Data
string
Data
random
Vector
R
MAX
VECTOR
SIZE
NORTH
EAST
NORTH
WEST
SOUTH
EAST
SOUTH
WEST
x
y
pt
dist
pt
Count
X
Y
nw
ne
sw
se
region
x1
y1
x2
y2
NUM
POINTS
DEFAULT
NUM
POINTS
root
list
data
front
end
size
data
front
rear
heap
d
n
sz
child
parent
heap
heap
map
sz
N
D
child
parent
pm
im
values
N
HASHES
MODS
rolling
Hashes
MOD
INVERSES
bloom
Filter
ALPHABET
PRIMES
DEFAULT
MODS
N
SETS
bitsets
SET
SIZES
MOD64
MASK
DIV64
SHIFT
ALPHABET
SZ
ALPHABET
N
HASHES
POWERS
MODS
MOD
INVERSES
rolling
Hashes
bloom
Filter
DEFAULT
MODS
DUMMY
DEFAULT
CAPACITY
DEFAULT
LOAD
FACTOR
map
root
data
left
Child
right
Child
node
Count
root
data
left
right
trav
size
head
tail
data
prev
next
trav
element
parent
left
right
child
degree
marked
LOG
PHI
elements
Index
comparator
size
trees
marked
Nodes
minimum
Node
root
Character
root
ch
count
is
Word
Ending
children
n
t
lazy
INF
left
right
min
Pos
max
Pos
min
sum
lazy
n
t
lazy
n
t
lazy
segment
Combination
Fn
combination
Fn
range
Update
Fn
sum
Fn
mul
Fn
min
Fn
max
Fn
i
value
lazy
min
max
tl
tr
n
st
combination
Fn
ruf
lruf
sum
Combination
Fn
min
Combination
Fn
max
Combination
Fn
min
Query
Sum
Update
lmin
Query
Sum
Update
min
Query
Mul
Update
lmin
Query
Mul
Update
min
Query
Assign
Update
lmin
Query
Assign
Update
max
Query
Sum
Update
lmax
Query
Sum
Update
max
Query
Mul
Update
lmax
Query
Mul
Update
max
Query
Assign
Update
lmax
Query
Assign
Update
sum
Query
Sum
Update
lsum
Query
Sum
Update
sum
Query
Mul
Update
lsum
Query
Mul
Update
sum
Query
Assign
Update
lsum
Query
Assign
Update
n
t
lazy
n
t
lazy
n
t
lazy
combination
Fn
ruf
lruf
sum
Combination
Fn
min
Combination
Fn
max
Combination
Fn
product
Combination
Fn
gcd
Combination
Fn
min
Query
Sum
Update
lmin
Query
Sum
Update
min
Query
Mul
Update
lmin
Query
Mul
Update
min
Query
Assign
Update
lmin
Query
Assign
Update
max
Query
Sum
Update
lmax
Query
Sum
Update
max
Query
Mul
Update
lmax
Query
Mul
Update
max
Query
Assign
Update
lmax
Query
Assign
Update
sum
Query
Sum
Update
lsum
Query
Sum
Update
sum
Query
Mul
Update
lsum
Query
Mul
Update
sum
Query
Assign
Update
lsum
Query
Assign
Update
gcd
Query
Sum
Update
lgcd
Query
Sum
Update
gcd
Query
Mul
Update
lgcd
Query
Mul
Update
gcd
Query
Assign
Update
lgcd
Query
Assign
Update
product
Query
Sum
Update
lproduct
Query
Sum
Update
product
Query
Mul
Update
lproduct
Query
Mul
Update
product
Query
Assign
Update
lproduct
Query
Assign
Update
N
UNIQUE
tree
n
t
lazy
n
t
lazy
size
sz
id
num
Components
list
ar
pos
size
capacity
data
RED
BLACK
color
value
left
right
parent
root
node
Count
NIL
trav
bf
value
height
left
right
root
node
Count
TOKEN
trav
MAX
RAND
NUM
random
value
priority
left
right
root
node
Count
bf
value
height
left
right
root
node
Count
trav
N
tree
N
original
Tree
current
Tree
DEFAULT
CAP
arr
len
capacity
index
EPS
EPS
x
y
EPS
a
b
c
EPS
EPS
EPS
EPS
EPS
EPS
pt
EPS
x
y
z
EPS
x
y
EPS
x
y
cost
from
to
n
in
Degree
cost
impossible
Edge
Matches
n
cost
FULL
STATE
artificial
Node
Id
is
Odd
solved
min
Weight
Cost
matching
n
edge
Count
in
out
path
graph
to
cost
from
to
cost
n
graph
solved
mst
Exists
visited
ipq
min
Cost
Sum
mst
Edges
random
sz
N
D
child
parent
pm
im
values
N
start
distance
tour
min
Tour
Cost
ran
Solver
from
to
cost
n
graph
solved
mst
Exists
visited
ipq
min
Cost
Sum
mst
Edges
sz
N
D
child
parent
pm
im
values
from
to
cost
n
graph
solved
mst
Exists
visited
pq
min
Cost
Sum
mst
Edges
n
edge
Count
in
out
path
graph
n
scc
Count
solved
sccs
visited
post
Order
Traversal
graph
transpose
Graph
EPS
cost
from
to
id
value
n
dist
prev
graph
comparator
n
id
low
ids
solved
visited
graph
bridges
cost
from
to
from
to
cost
id
sz
from
to
cost
from
to
cost
from
to
cost
size
sz
id
num
Components
from
to
cost
n
prev
graph
cost
from
to
id
f
g
h
EPS
id
value
EPS
ar
front
end
sz
from
to
cost
n
component
Count
components
solved
visited
graph
from
to
weight
value
left
right
value
children
id
parent
children
id
parent
children
n
id
parent
children
lca
Node
root
MAX
NUM
NODES
VISITED
TOKEN
visited
n
index
parent
children
n
tour
Index
node
Depth
node
Order
last
sparse
Table
n
P
log2
dp
it
distance
index
from
to
DEPTH
TOKEN
VISITED
TOKEN
visited
queue
n
id
low
ids
solved
visited
graph
bridges
CALLBACK
TOKEN
ar
pos
sz
from
to
cost
from
to
cost
n
graph
solved
mst
Exists
visited
ipq
min
Cost
Sum
mst
Edges
n
graph
solved
mst
Exists
visited
ipq
min
Cost
Sum
mst
Edges
random
sz
N
D
child
parent
pm
im
values
visited
Token
from
to
residual
flow
capacity
INF
n
s
t
visited
Token
visited
solved
max
Flow
graph
delta
from
to
residual
flow
capacity
INF
n
s
t
solved
max
Flow
graph
level
point
capacity
point
from
to
residual
flow
capacity
INF
n
s
t
visited
Token
visited
solved
max
Flow
graph
from
to
residual
flow
capacity
INF
n
s
t
visited
Token
visited
solved
max
Flow
graph
from
to
residual
flow
capacity
INF
n
s
t
visited
Token
visited
solved
max
Flow
graph
FREE
visit
Token
n
colors
solved
is
Bipartite
graph
RED
BLACK
INF
from
to
residual
flow
cost
capacity
original
Cost
n
s
t
max
Flow
min
Cost
min
Cut
graph
visited
Token
visited
solved
delta
id
value
level
n
solved
dp
next
REACHES
NEGATIVE
CYCLE
n
graph
solved
scc
Count
id
visited
ids
low
sccs
stack
UNVISITED
n
start
solved
dist
prev
matrix
N
START
NODE
FINISHED
STATE
distance
min
Tour
Cost
tour
ran
Solver
n
pre
count
id
low
marked
adj
stack
n
id
root
Node
Outcoming
Edge
Count
solved
low
ids
visited
is
Articulation
Point
graph
cost
from
to
to
cost
n
edge
Count
dist
prev
graph
sz
N
D
child
parent
pm
im
values
n
graph
solved
is
Satisfiable
scc
Solver
u
v
cost
n
m
graph
solved
mst
Exists
min
Cost
Sum
mst
components
id
sz
u
v
cost
n
edges
solved
mst
Exists
mst
mst
Cost
id
sz
DEPTH
TOKEN
arr
blocks
block
Size
n
Blocks
n
array
difference
Array
values
N
lo
hi
deque
random
edge
Probability
min
Levels
max
Levels
min
Nodes
Per
Level
max
Nodes
Per
Level
EPS
EPS
EPS
EPS
RANDOM
P
MAX
EPOCH
MUTATION
RATE
power
POWER
INC
cities
RANDOM
TARGET
ALPHA
TL
RANDOM
MAX
EPOCH
POPULATION
SZ
MUTATION
RATE
power
POWER
INC
dna
str
fitness
RANDOM
P
MAX
EPOCH
MUTATION
RATE
power
POWER
INC
bits
ALPHABET
SZ
N
T
lcp
sa
sa2
rank
tmp
c
N
T
sa
lcp
constructed
Sa
constructed
Lcp
Array
code
first
Half
second
Half
original
Index
k
num
Sentinels
text
Length
strings
shift
lcs
Len
lowest
Ascii
Value
highest
Ascii
Value
imap
text
sa
lcp
lcss
DEBUG
MODE
values
N
lo
hi
deque
n
UNIQUE
tree
ALPHABET
SZ
N
T
sa
sa2
rank
tmp
c
ALPHABET
BASE
ALPHABET
BIG
ALPHA
MODS
N
HASHES
BIG
MODS
MOD
INVERSES
ALPHABET
SZ
N
T
lcp
sa
sa2
rank
tmp
c
MAX
ALPHABET
SIZE
