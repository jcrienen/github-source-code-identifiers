init
setup
persist
User
free
should
Get
User
Detail
should
Get
All
Users
free
Emf
set
Emf
get
User
Detail
save
User
Detail
get
All
Users
get
Id
set
Id
get
Name
set
Name
setup
clean
Recordings
test
Get
User
test
Insert
User
insert
Another
Row
With
Same
Params
Again
insert
Another
Row
test
Update
User
update
Record
To
Original
Value
test
Delete
User
delete
Record
With
User
Dao
create
Another
Record
Externally
test
Method
Based
Recording
get
Num
Rows
tear
Down
test
Cleaner
setup
close
hash
Code
equals
get
Id
set
Id
get
Age
set
Age
to
String
get
save
delete
update
get
All
get
Jdbc
Template
map
Row
find
save
get
delete
find
get
All
update
main
get
Unique
Suffix
populate
Axis
Service
populate
Faults
concat
startconcat
on
Message
on
Error
on
Fault
on
Complete
get
Envelope
Namespaces
optimize
Content
get
S1
set
S1
get
S2
set
S2
get
OM
Element
serialize
serialize
generate
Prefix
write
Start
Element
write
Attribute
write
Attribute
write
Q
Name
Attribute
write
Q
Name
write
Q
Names
register
Prefix
get
Pull
Parser
parse
get
Type
Object
get
Concat
Response
set
Concat
Response
get
OM
Element
serialize
serialize
generate
Prefix
write
Start
Element
write
Attribute
write
Attribute
write
Q
Name
Attribute
write
Q
Name
write
Q
Names
register
Prefix
get
Pull
Parser
parse
to
OM
to
OM
to
Envelope
to
Envelope
from
OM
get
Client
Data
receive
Resultconcat
receive
Errorconcat
main
main
get
P1
get
P1
main
get
S1
set
S1
get
S2
set
S2
concat
concat
create
Concat
Request
create
Concat
Response
test
test
Create
Book
Api
test
Get
Book
Details
Api
test
Update
Book
Details
test
Delete
Book
Api
test
Get
All
Books
Api
main
create
Book
get
Book
Details
edit
Book
delete
Book
get
All
Books
get
Id
set
Id
get
Name
set
Name
get
Isbn
set
Isbn
get
Author
set
Author
get
Pages
set
Pages
get
Dog
Breeds
save
Book
fetch
Book
List
update
Book
delete
Book
By
Id
find
Book
By
Id
save
Book
fetch
Book
List
update
Book
delete
Book
By
Id
find
Book
By
Id
post
Book
get
Book
For
Id
delete
Book
update
Book
set
Up
concat
String
main
get
P1
get
P1
main
get
S1
set
S1
get
S2
set
S2
concat
create
Concat
Request
create
Concat
Response
main
concat
get
S1
set
S1
get
S2
set
S2
get
OM
Element
serialize
serialize
generate
Prefix
write
Start
Element
write
Attribute
write
Attribute
write
Q
Name
Attribute
write
Q
Name
write
Q
Names
register
Prefix
get
Pull
Parser
parse
invoke
Business
Logic
to
OM
to
OM
to
Envelope
wrapconcat
to
Envelope
from
OM
get
Envelope
Namespaces
create
Axis
Fault
get
Type
Object
get
Concat
Response
set
Concat
Response
get
OM
Element
serialize
serialize
generate
Prefix
write
Start
Element
write
Attribute
write
Attribute
write
Q
Name
Attribute
write
Q
Name
write
Q
Names
register
Prefix
get
Pull
Parser
parse
should
Set
Values
execute
clean
Recordings
is
Recording
New
Mode
is
Playback
Mode
set
Value
test
Object
Already
Exists
should
Save
Object
should
Get
Object
get
Absolute
Path
test
Get
Property
setup
Mocktail
Container
should
Create
Class
Aspect
should
Create
Method
Aspect
create
Method
Mocktail
create
Class
Mocktail
test
Aspect
File
Creation
should
Create
Recording
Method
Aspects
should
Create
Playback
Method
Aspects
should
Create
Recording
Aspect
For
Class
get
Mocktails
For
Aspects
get
Mocktail
create
Class
Mocktail
create
Method
Mocktail
set
Up
should
Read
Xml
add
sub
print
main
should
Generate
Unique
Id
Using
Hash
Code
should
Generate
Unique
Id
For
Object
get
Name
set
Name
append
Str
append
Str
To
List
add
Key
Value
Pair
playback
add
sub
print
main
setup
test
Playback
For
Recordings
test
Playback
For
Invalid
Recording
Dir
test
Playback
For
Invalide
FQCN
test
Playback
For
Recording
Not
Available
setup
should
Notify
Root
Recording
Directory
Not
Available
should
Create
Recording
Directory
should
Execute
If
Recording
Exists
add
sub
print
main
do
The
Recording
delete
Dir
absolute
Path
save
Object
get
Object
clear
Object
If
Available
object
Already
Exist
save
Object
get
Object
object
Already
Exist
clear
Object
If
Available
file
Already
Exists
is
Recording
Available
save
Object
In
File
save
Object
In
File
write
String
To
File
get
Object
From
File
get
Object
From
File
get
String
Content
From
File
delete
Object
object
Already
Exist
save
Object
get
Object
clear
Object
If
Available
get
Property
get
Recording
Path
get
File
Prefix
to
String
process
Template
get
Template
Parameter
Values
get
Aspect
Template
create
Aspect
File
get
Aspect
Directory
create
Aspect
get
Aspect
File
Name
create
Recording
Aspects
create
Playback
Aspects
create
Class
Aspect
create
Method
Aspect
create
Aspects
create
Aspect
execute
Aspect
is
Void
Return
Type
mocktail
For
Each
Test
Method
recording
Mode
save
Recording
File
create
Directory
For
File
Path
get
Recording
File
Path
get
Aspect
Type
Directory
get
Target
Impl
set
Target
Impl
get
Class
Name
get
Methods
set
Class
Name
set
Class
Package
Name
get
Class
FQCN
get
Class
Package
Name
set
Methods
only
For
Class
to
String
read
Xml
read
Xml
init
get
Instance
get
Mocktail
Xml
Reader
get
Object
Repository
get
Unique
Id
Generator
get
Recording
Directory
set
Recording
Directory
clean
set
Method
Mocktail
reset
Method
Mocktail
get
Method
Mocktail
set
Mocktail
Mode
get
Mode
get
Mocktail
Mode
create
create
get
Unique
Id
get
Unique
Id
get
Unique
Id
get
Unique
Id
get
Fqcn
get
Method
Name
set
Up
close
is
Object
Exist
On
Disk
check
Recordings
On
Disk
serialized
Object
Exists
On
Disk
get
Stack
Trace
Element
set
Recording
Base
Path
get
Recording
Directory
Path
register
With
Method
Calls
Map
get
Method
Calls
to
String
are
Recordings
Available
