treeNode
treeNode
treeNode
treeNode
treeNode
treeNode
myCircularQueue
treeNode
expected
treeNode
expected
employees
employees
mapSum
input
input
treeNode
treeNode
expected
expected
magicDictionary
grid
grid
treeNode
item1
item2
expected
treeNode
item1
item2
expected
root
expected
root
treeNode
expected
treeNode
expected
root1
root2
root1
root2
treeNode
treeNode
treeNode
treeNode
expected
treeNode
expected
myCircularDeque
resultSet
treeNode
treeNode
input
input
input
root
root
root
listNode1
listNode1
node1
node2
node3
node4
node1and2and4
node2and1and3
node3and2and4
node4and1and3
node
node1
resultSet
listNode1
listNode1
listNode1
root
root
root
root
root
root
intersectionListNode
nodeA
nodeB
nodeA
nodeB
triangle
triangle
root
root
expected
expected
board
board
root
root
input
input
left
right
root
iterator
node
node7
node6
node3
node5
node4
node2
node1
preorder
inorder
actual
preorder
inorder
actual
expected
expected
expected
listNode1
listNode1
listNode1
head
expected
head
expected
lruCache
input
input
listNode1
listNode1
treeNode
treeNode
nodes
root
root
root
root
treeNode
inorder
postorder
actual
inorder
postorder
actual
node7
node13
node11
node10
node1
node1
node2
node31
node32
node33
wordDict
wordDict
wordDict
root
root
root
root
array
array
treeNode
minStack
left
right
root
root
node
node7
node3
node5
node4
node2
node1
node
node8
node7
node6
node3
node5
node4
node2
node1
treeNode
treeNode
expected
expected
expected
root
expected
root
expected
root
root
streamChecker
treeNode
treeNode
input
input
head
head
stockSpanner
recentCounter
treeNode
treeNode
include
treeNode
cBTInserter
expected
root1
root2
root1
root2
result
expected
result
expected
timeMap
topVotedCandidate
expectedRoot
allOne
matrix
matrix
solution
root
node3
node2
node4
node5
node6
expected
matrix
matrix
node1
node2
node3
node4
node5
node6
node7
node8
node9
node10
node11
node12
lfuCache
i
result
i
result
i
result
solution
l1
l2
l1
l2
l1
l2
expected
result
expected
input
expected
input
expected
points
points
points
robot
robot
robot
bank
items
queries
expected
items
queries
expected
items
queries
expected
node
node
node
queries
queries
detectSquares
rangeFreqQuery
node
node
node
events
events
events
head
head
head
stockPrice
input
input
expected
expected
expected
findElements
findElements
findElements
calls
n
d
i
i
i
i
i
skiplist
actual
actual
grid
grid
grid
customFunction
actual
expected
actual
expected
actual
expected
itr
listNode
listNode
g
frequencyTracker
frequencyTracker
authenticationManager
array
array
root
root
input
dictionary
headActual
headActual
buildings
expected
buildings
expected
stack
prerequisites
numCourses
prerequisites
numCourses
prerequisites
numCourses
leftNodeLeftNode
leftNodeRightNode
leftNode
rightNodeLeftNode
rightNode
root
leftNodeLeftNode
leftNodeRightNode
leftNode
rightNode
root
leftNodeLeftNode
leftNodeRightNode
leftNode
rightNode
root
board
board
peekingIterator
leftNodeLeftNode
leftNodeRightNode
leftNode
rightNode
root
leftNodeLeftNode
leftNodeRightNode
leftNode
rightNode
root
headActual
headActual
input
input
input
root
root
treeNode
codec
actual
result
headActual
headActual
medianFinder
medianFinder
trie
myQueue
headActual
headActual
headActual
board
words
expected
board
words
matrix
matrix
treeNode
treeNode
snapshotArr
h2o
executor
i
d
root
root
fizz
fizzBuzz
fizz
fizzBuzz
root
root
fooBarData
n
fooPrinter
barPrinter
foobar
fooThread
barThread
majorityChecker
zeroEvenOddData
consumer
n
zeroEvenOdd
firstThread
secondThread
thirdThread
fooData
foo
root
root
head
expected
head
expected
head
expected
findSumPairs
seatManager
obj
smallestInfiniteSet
listNode
listNode
foodRatings
nc
node
node
node
node
treeNode
treeNode
treeNode
treeNode
treeNode
treeNode
treeNode
root
queue
i
curr
listNode
listNode
listNode
listNode
nestedInteger
list
nestedInteger
nestedInteger
nestedInteger
expectedList
expectedItem
expectedList
expectedItem
employee
include
include
include
arrays
m
n
ans
i
str
strs
j
str
strs
j
strs
j
arrays
size
output
i
str
nums
j
str
nums
j
nums
j
arrays
maxLen
sizes
i
strs
output
str
nums
j
i
str
nums
j
str
nums
j
nums
j
arrays
result
i
level
strings
arrays
result
i
word
pre
head
i
head
tmp
i
next
node
node
node
node
node
node
input
input
input
orders
output
orders
output
orders
output
treeAncestor
treeAncestor
input
input
input
browserHistory
root
root
root
input
input
input
input
input
subrectangleQueries
subrectangleQueries
root
root
root
treeNode
expected
treeNode
expected
treeNode
expected
head
head
rleIterator
examRoom
root1
root2
root1
root2
root1
root2
numCalls
numCalls
numCalls
result
listNode
listNode
freqStack
tracker
head
head
bs
edges
expected
edges
expected
expected
result
expected
result
input1
expected1
input2
expected2
list1
list2
list3
nums1
nums2
forbidden1
forbidden2
parent1
parent2
hours1
hours2
input1
expected1
input2
expected2
nums1
x1
nums2
x2
result
result
parkingSystem
treeNode
treeNode
treeNode
q
fancy
os
list1
list2
expected
actual
list1
list2
expected
actual
encrypter
root
root
countIntervals
bms
bms
textEditor
atm
treeNode
treeNode
nodes
nodes
nodes
lockingTree
movieRentingSystem
loc
dataStream
t
treeNode
treeNode
treeNode
listNode
treeNode
listNode
treeNode
listNode
treeNode
root
root
treeNode
treeNode
restaurants
restaurants
restaurants
customStack
mat
expected
mat
expected
original
cloned
target
original
cloned
target
original
cloned
target
original
cloned
target
original
cloned
target
input
input
input
treeNode
treeNode
cashier
treeNode
treeNode
treeNode
undergroundSystem
undergroundSystem
tweetCounts
edges
edges
mat
mat
productOfNumbers
treeNode
expected
treeNode
expected
treeNode
expected
treeNode
treeNode
treeNode
input
expected
input
expected
listNode
expected
listNode
expected
myHashMap
myCalendarThree
kthLargest
wordFilter
myLinkedList
myLinkedList
expected
solution
i
rangeModule
input
input
input
myHashSet
treeNode
expected
treeNode
expected
treeNode
expected
input
expected
input
expected
myCalendarTwo
myCalendar
node1
node2
node3
node4
node5
node6
node1
node2
node3
node4
node5
node6
node7
node8
node9
node10
node11
node12
node13
node14
treeNode
expected
treeNode
expected
solution
timePoints
timePoints
index
hour
minute
javaArray
javaArray
solution
treeNode
treeNode
treeNode
treeNode
treeNode
treeNode
treeNode
url
obj
tiny
ans
treeNode
expected
treeNode
expected
treeNode
subTree
treeNode
subTree
p1
p2
p3
p4
p1
p2
p3
p4
treeNode
treeNode
node1
node2
node3
node4
node5
node6
node1
node2
node3
node4
node5
node6
node7
node8
node9
node10
node11
node12
node13
node14
treeNode
expected
treeNode
expected
mat
mat
node1
node2
list1
list2
list1
list2
root
node3
node2
node4
node5
node6
input
expected
input
expected
result
randomizedCollection
random
random2
expected
result
listNode3
listNode2
listNode
solution
contain
expected
nestedInteger
result
expected
array
array
equations
values
queries
expected
equations
values
queries
expected
equations
values
queries
expected
twitter
iterator
result
integer1
integer2
integer3
list
nestedIntegerList
input
iterator
result
input
intput
intput
intput
node
expected
node
expected
numArray
input
solution
numMatrix
input
input
result
randomizedSet
random
expected
expected2
solution
shuffled
numArray
input
output
input
output
root
root
expected
board
grid
grid
node1
node1
array
array
head
head
input
actual
expected
input
actual
expected
input
actual
expected
expected
actual
expected
actual
expected
actual
input
input
matrix
matrix
result
result
original
end
original
end
treeNode
treeNode2
headActual
headActual
expected
expected
array
array
array
expected
expected
expected
expected
expected
treeNode1
treeNode
head
head
array
end
array
end
input
input
input
head
head
listNode1
listNode2
listNode1
listNode2
expected
expected
expected
input
expected
input
head
expected
expected
expected
expected
l1
l2
array
array
expected
actual
expected
actual
expected
actual
head1
head2
head3
head1
head2
head3
array
end
array
end
treeNode
treeNode
array
array
array
node1
node1
head
head
p
q
p
q
p
q
p
q
luPrefix
pq
maxInPq
i
rangeSize
rangeLeft
rangeRight
nextNumber
val
answer
map
pathComponents
root
i
startIndex
endIndex
content
result
chars
i
j
indx
c
temp
map
result
avg
pair
res
i
j
val1
val2
existsChar
lenB
sb
lenSbA
repeatCount
i
k
m
ans
i
correct
temp
a
stack
result
log
top
executionTime
tokens
map
ans
i
updatedNeeds
i
i
ans
i
ans
n
i
lx
ly
left
right
answer
mid
i
res
left
right
longestPathLenPassingThroughRoot
max
map
i
j
v
min
v
resultList
size
count
cost
addValue
node
right
left
min1
min2
max1
max2
max3
n
max
count
idx
i
j
r
i
j
right
left
i
j
map
l
r
l
r
windowSum
windowStart
max
windowEnd
candidate
map
employee
sum
prev
v
curr
o
i
curr
sum
trie
allWords
i
node
i
node
rootWord
i
lo
hi
i
n
sum
dp
i
rem
j
tmp
counters
maxCount
idx
maxNum
dp
i
j
k
pq
time
i
j
a
b
a
start
ans
arr
i
max
maxidx
i
root
ans
count
i
numDifferentLetters
i
m
n
max
i
j
area
map
list
key
dp
dp1
mod
i
temp
j
m
map
sortedset
result
iterator
dp
count
result
max
i
j
i
n
haspar
v
i
u
v
lu
lv
u
v
lu
lv
a
res
i
newRoot
left
right
len
res
left
right
s
i
i
i
i
mid
i
max
i
total
dp
ch
i
min
max
i
q
res
qSize
lastIdx
firstIdx
i
temp
element
i
length
j
result
height
columns
row
i
i
lo
hi
mid
col
row
count
val
eqs
arr1
arr2
arr
f
a
b
i
sb
n
number
number
op
count
i
p
sb
res
left
right
i
i
left
right
m
n
result
i
j
sum
denominator
unique
sorted
heights
list
max
x1
x2
current
i
i
pq
steps
count
steps
dirs
visited
q
qsize
i
curr
k
dir
nr
nc
blocks
status
changes
i
curr
block
i
i
i
res
len
index
i
res
count
mask
i
c
val
seen
added
chars
buf
map
ans
i
i
res
slow
fast
pre
first
second
res
cur
mid
newNode
clonedNeighbor
max
thsMax
i
slow
fast
result
q
zig
level
node
node1
node2
sumGas
sumCost
curGas
result
i
dp
sum
base
count
sb
remainder
queue
d
size
i
current
maxProfit
min
i
output
i
currRow
j
currCell
i
i
i
j
left
right
tail
max
i
j
x
y
c
count
k
set
max
flag
i
i
n
s
i
sb
result
res
rightMost
temp
res
mid
l
r
st
ret
i
value
index
node
i
buffer
ans
previous
i
tmp
fast
slow
profit
i
mid
midNode
ret
i
beginSet
endSet
wordSet
visited
len
strLen
temp
tempSet
chars
i
old
j
temp
next
fb
sb
fs
ss
val
valNode
node
node
last
prev
next
count
majority
i
m
n
memo
res
tnode
res
count
nums
i
i
temp
i
j
res
left
right
leaf
slow
fast
root
n
dp
maxdp
i
i
j
leftHeight
rightHeight
heightDiff
leftHeight
rightHeight
candies
i
i
total
islands
i
j
num
pow
i
result
stack
current
inIndex
postIndex
root
sb
x
y
remainder
map
curr
clonedNode
newHead
clonedNode
ans
cprod
i
max
i
result
wordSet
len
i
subs
result
queue
level
ans
reverse
wordSet
queue
nextLevel
findEnd
word
reverseLadders
path
next
shortestPath
diffCount
n
i
temp
n
t
res
i
j
sum
res
ones
twos
res
end
start
end
mid
sum
flag
k
list
temp
numA
i
c
numB
j
c
v1
v2
move
dp
j
k
i
firstMatch
n
t
dp
i
left
right
current
sb
i
start
n
i
n
ans
i
j
wsize
scount
minMoves
maxMoves
heap
one
two
diff
n
dp
right
localMax
left
max
sum
lo
hi
ans
mid
capacity
sum
n
result
i
i
base
parentA
parentB
l
r
nl
nr
mn
mx
mid1
mid2
mode
avg
mid
n
base
i
j
ans
i
idx
set
lo
hi
len
found
substrHash
i
count
start
val
root
sum
n
pref
suff
i
i
i
ans
i
blocks
list
str
i
s
j
i
diff
index
j
temp
nStrLength
allNineLength
numberOfDigits
mutations
hs
index1
noRepeatCountLocal
index2
index2Digit
inIndex2Range
repeatCount
mutations
i
len1
len2
reverseArr1
i
reverseArr2
i
sumArray
i
resultLen
i
result
i
m
n
minPath
queue
visited
size
i
curr
j
newx
newy
t
min
max
i
used
i
i
u
v
rowIlluminations
colIlluminations
posDiagIlluminations
negDiagIlluminations
lampPlacements
row
col
key
ans
i
row
col
topRow
bottomRow
leftCol
rightCol
r
c
key
v
ret
patternLen
patternPos
uppercaseCount
i
c
answer
frequency
rowStr
key
value
paths
sum
num
minIndex
i
m
n
rows
columns
i
j
sumMap
cur
res
i
j
n
m
visited
i
j
unreachables
i
j
n
stk
freq
exist
i
ch
rem
ans
index
i
j
count
top
tCount
bCount
tSwaps
bSwaps
swaps
valid
i
bottom
tCount1
bCount1
tSwaps1
bSwaps1
swaps1
valid1
i
ans
curr
i
c
curr
i
c
cnt
list
l
i
res
time
tmp
i
result
i
c1c
c2c
sb
i
m
result
i
chars
visited
i
list
result
exp
i
grumpySum
ans
i
max
i
result
i
j
dir
i
x
y
s
maxHeap
n
i
ans
labelAddedCount
cur
map
i
j
res
i
result
remainder
sb
carry
sum
pos
stops
i
primitives
i
initialI
left
sb
num
max
min
diff
n
dp
ans
i
j
difference
temp
max
min
n
ans
k
temp
leftSum
rightSum
root
array
length
fast
slow
peakIndex
leftResult
len
left
right
mid
leftIndex
rightIndex
midIndex
leftIndex
rightIndex
midIndex
res
sorted
res
curSet
idx
end
set
set
res
count
idx
remainder
ans
rem
stack
cost
i
lenStr
len
longest
max
len
words
max
i
j
bestPrevious
maxSum
i
count
covered
i
start
countZero
len
i
j
sum
eq
count
temp
heightDiff
count
actualLine
heightLength
i
j
i
i
str
m
n
dp
i
j
l
arr
i
j
sum
half
dp
j
len
i
arr
idx
j
j
len
dp
i
dpRow
j
l
m
result
k
rows
cols
result
k
m
queue
target
visited
step
queueSize
i
previousLabel
currentLabel
position
vertical
horizontal
result
iBound
jBound
set
i
j
number
i
i
j
p1
p2
infected
p
currSize
ans
p
n
countOnes
countFlips
i
windowSum
left
right
res
i
j
prev
val
queue
node
maxcp
maxcs
i
j
i
j
sb
ndp
memo
next
i
first
mask
i
score
i
j
m
maxMemo
maxj
m
j
score
n1
n2
i
m
prev
subseqAtPrevIndexOfMyLastOcc
i
crntStrIdx
subtract
curr
hmap
x
buf
maxHour
i
j
hour
min
n1
n2
k
s1
s2
v1
v2
l
r
cnt
cur
p1
p2
sq1
sq2
construct
copy
copy
q
i
curr
children
n
i
j
min
node
i
children
n
result
idx
lastIdx
i
min
temp
len
right
left
i
i
answer
i
modl
n
mod
dp
j
i
cur
j
j
first
prev
period
day
next
ret
i
score
l
r
sorted
res
i
j
sum
left
right
map
ret
list
q
size
odd
even
count
i
curVal
maxS
minL
i
i
min
max
array
i
j
temp
sortedArr
mid
leftArray
rightArray
ans
i
j
k
result
carry
i
temp
t
map
ans
sum
temp
map
min
i
j
p1
p2
area
res
leftMax
greater
i
temp
i
k
arr
max
i
i
i
l1
target
temp
count
i
stack
n
row
col
str
ch
index
i
i
j
hlq
size
poll
nn
peek
peek
state
res
mod
i
end
basket1
basket2
secondFruitIndex
maxTotal
counter
moves
s
t
stars
visited
doneReplace
i
result
i
j
j
map
i
i
len1
len2
minLength
i
n
states
degree
m
c
q
i
state
mouse
cat
turn
result
prevTurn
prevMouse
prevCat
q
flag
visited
i
j
level
size
rem
newrow
newcol
newrow
newcol
ans
num
d
l
i
i
flag
n
ans
l
r
difL
difR
answer
countRight
countLeft
j
remains
v
count
set
temp
pIdx
pivot
pivotDist
i
curPIdx
num
max
min
positive
negative
i
max
counts
minMoves
i
remaining
sLeftIndex
tLeftIndex
sDouble
tDouble
sb
i
leftLevel
leftSubTreeContainsCousins
rightSubTreeContainsCousins
counter
map
ch
i
oper
px
py
oper
px
py
trustScores
i
i
j
tmp
l
r
res
i
n
set
i
temp
x
sqrt
first
second
firstLen
secondLen
ans
result
res
k
dp
i
ans
mod
leftChildState
rightChildState
mod
cur
next
i
sum
i
m
dp
minInd
ramp
i
prInd
result
i
max
index
j
i
temp
count
i
j
memo
i
mid
left
right
rst
i
i
n
i
val
i
currSum
maxSum
sumOfArray
maxSumSubarray
minSumSubarray
s
word
answer
s
i
list
res
i
i
last
a
b
n
dp
i
j
min
lexico
m
n
rowR
colR
i
j
count
i
neighborRow
neighborCol
list
i
j
start
end
n
ans
min
max
i
mx
mi
timeStampDataList
list
start
end
mid
maxDiff
dp
dpOld
diff
total
leftover
queue
row
col
countActive
i
j
countCurrent
count
dx
dy
size
i
arr
j
x
y
counterArray
maxVote
maxVotedPerson
i
person
voteCount
lo
hi
mid
queue
seenNull
node
l
arr
i
cur
j
left
right
curCell
min
i
set
sb
i
c
arr
mask
i
s
count
val
mask
k
max
roots
sizes
idx
sqrt
thisRoot
factor
otherFactor
otherFactorRoot
maxConnection
rootA
rootB
res
letterLogs
digitLogs
cmp
i
map
area
minArea
n
i
j
dx1
dy1
k
dx2
dy2
x
y
first
second
third
set
ri
rj
cur
stack
i
j
len
n
pref
i
flips
ones
index1
index2
index3
totalOnes
i
res
prefix
cnt
i
j
uniqueCount
sums
dp
sum
arr
arr1
j
ch
sum
dp
i
i
j
sb
node
base
count
arr
w
ans
zeroCount
oneCount
row
isBreak
col
midLen
topLeft
topRight
bottomLeft
bottomRight
isLeaf
resultVal
isLeaf
min
i
j
newS
sR
count
i
set
count
count
curBucket
newBucket
x
ans
y
i
dm
dml
j
d
poly
end
ans
m
i
i
cur
result
carry
i
j
sum
count
m
n
i
j
n
i
match
substring
skippedI
j
start
end
poisonDuration
i
x
y
pow10
max
left
t
i
j
num
r
sb
count
prev
i
i
islands
neighbours
i
j
n
ss1
ss2
memo
s2CountMap
s1Count
s2Count
s2Idx
n1Left
matchedPatternCount
leftS2Count
totalCount
m
n
output
idx
diag
k
k
result
queue
size
level
i
currentNode
median
ops
len
result
i
comparator
smallNums
largeNums
i
curr
steps
steps
sum
curr
i
res
pacific
atlantic
i
i
i
j
temp
arr
sum
res
diff
i
set
queue
step
curSize
cur
list
len
top
i
number
maxLen
i
currentLen
i
rocks
i
rememberJumps
map
reverseMap
freq
sb
list
i
result
i
j
temp
min
sum
i
times
hour
minutes
time
counter
res
mid
cnt
j
i
count
digits
str
i
newEndNode
endNode
currEndNode
endNode
newEndNode
toDelete
prev
start
end
mid
coinsFilled
max1
max2
max3
n
dp
i
len
i
j
erasures
end
i
stack
s3
i
x
y
value
low
i
rect
count
picked
idx
left
right
mid
r
left
right
bot
top
prev
curr
next
res
head
carry
val1
val2
data
answer
list
i
ans
n
i
ones
splitted
result
per
side
sides
j
minNode
map
i
res
i
j
idx
finish
k
result
i
res
a1
a2
d
carr
arr
i1
j
totalMissing
overLen
leftOver
k
i
i
need
left
right
len
count
sArr
currMax
maxLen
curr
res
m
n
hs
ht
indexes
length
count
i
j
ix
dp
count
i
j
res
i
str
n
map
len
i
answer
n
map
start
curr
jump
sb
x
cell
walls
rows
cols
c
r
min
indexMap
i
i
num
index
found
minArrows
end
i
min
max
i
n
result
map
i
minmax
i
i
ptr
j
ptr
i
ret
arr
counter
i
res
i
m
ans
i
j
dis
prev
count
map
sum
m
max
mask
set
maxNum
i
bit
temp
a
fast
slow
num
count
j
num
count
list
i
maxVal
minVal
midVal
currSum
currSplits
sb
cnt
occ
l
q
i
index
top
result
p
i
cost
i
j
list
chars
visited
i
mask
res
explored
i
cur
j
cand
m
nextCnt
s
zero
one
two
max
min
ans
all
max
i
i
max
st
n
i
cur
res
ret
wrong
res
res
x
op
left
right
remain
pos
count
map
map1
graph
i
u
v
time
node1
node2
tmp
v
time
value
m
c
res
i
i
price
beauty
pairs
i
j
n
sum
arr1
arr2
i
state
sum1
sum2
i
a1
a2
numOfEleInSet
i
min
i
sums1
sums2
idx
freq
i
m
n
i
j
k
j
k
i
k
j
k
i
s
d
i
maxI
result
j
ans
i
right
ca
freq
cand
ans
i
i
next
ta
n
m
i
j
slow
fast
inOutedge
adList
start
res
adList
s
d
set
sEdgeCnt
dEdgeCnt
edges
edge
start
k
inEdge
outEdge
count
sb
i
left
right
max
max
right
originalK
left
uf
res
i
p1
p2
flag
r1
r2
i
ans
i
size
ans
k
i
j
n
lo
hi
mid
cnt
l
r
p
c
mul
c
mul
sa
n
nextCandle
i
prevCandle
prevPlates
countPlate
i
len
res
i
query
start
end
curPlates
endCandle
startCandle
i
left
right
mid
dq
ind
i
initial
ans
i
mini
ans
i
m
n
rev
i
m
n
res
i
cnt
j
x
y
hash
ans
x
y
diap
x1
y1
num
p1hash
p2hash
arr
select
d
ans
ans
j
v
adj
i
indegree
requiredTime
vertices
q
i
vertex
edges
totalTime
maxMonth
i
i
list
s
e
p
c
n
current
first
last
min
n
ps
i
partDiffs
maxWays
i
partL
partR
partDiff
idxSet
j
ways
newDiff
leftList
i
rightList
i
ans
n
l
r
mid
maxArr
i
minArr
i
sum
i
left
right
val
nodes
i
root
i
node
map
maximisedEarnings
i
passengers
earning
max
i
ans
i
end
left
right
mid
value
endPosition
i
i
dirIndex
r
c
p
i
res
i
keepGoing
i
diff
seen
key
n
min
max
minIndex
maxIndex
i
firstCase
secondCase
thirdCase
ans
i
total
cols
grid
index
i
j
sb
colIndex
j
i
i
arr
k
j
target
res
i
rem
rem
count
lessthan
result
i
totalSize
curSize
dummy
cur
arr
i
prev
forward
cur
arr
size
n
dec
inc
i
i
res
i
tokens
count
hyphenCount
punctuationMarkCount
valid
i
count
vowels
window
i
j
res
sum
range
i
i
indexNums1
num1
x1
indexNums2
num2
x2
c1
c2
r
i
sArray
n
adj
i
distance
pq
a
node
max
i
num1
num2
arr
i
x
j
ans
i
j
con
words
prev
result
len
sum
number
i
c
strNum
left
right
min
max
ans
mid
ans
ans
res
i
uf
i
curTime
pool
currentMeeting
ans
j
i
rootP
rootQ
xValue
m
msum
res
totalmn
j
dice
rec
rec
ans
set1
set2
set3
result
seen
q
cnt
q1
lookfor
start
n
cum0
cum1
i
ans
i
a
ans
p
i
tmp
i
idx
result
digitMap
i
m
ratio
i
res
k
j
adj
i
p
q
dis1
dis2
queue
temp
cur
path
newPath
sum
i
n
duplicates
maxContinuous
start
end
sum
smallestNumWithMod1
secondSmallestNumWithMod1
smallestNumWithMod2
secondSmallestNumWithMod2
temp
temp
min
min
arr
result
n
ans
excess
cnt
i
j
q
prev
count
curr
n
visited
bq
level
levelSize
l
cur
xtail
ytail
dir
xhead
yhead
deltaX1
deltaY1
prev
i
point
deltaX2
deltaY2
find
r
c
len
i
j
len
find
i
j
n
lo
hi
min
ans
mid
m
l
r
sum
i
m
n
rowCount
columnCount
total
i
j
i
j
trie
curr
i
c
curr
res
i
c
temp
j
map
i
list
result
list
i
moves
m
n
obs
i
j
que
level
size
i
current
next
matrix
oddNumberCount
j
i
j
n
pal
dp
ans
i
gap
i
j
uf
freqMapPerRoot
i
ans
i
css
j
i
ru
rv
mx
mn
tmp
ab
ac
bc
abc
left
right
mid
all
countsBySide
total
newTotal
max
j
i
j
map
v
i
product
sum
digit
max
i
temp
l
r
mid
res
ans
collectedCandies
boxes
unseen
curBox
start
end
currCost
maxLength
sum
ind
excl
incl
cscore
arr
oddLen
startIndex
num
endIndex
res
hasK
i
ans
dx
dy
i
j
newMask
k
nx
ny
mask
r
c
i
j
q
count
qSize
i
currMask
nextStates
i
j
g
currGold
currGold
currGold
currGold
indegree
q
i
topo
v
edges
ans
i
graph
nodes
i
i
before
groupStart
ge
ge
groupStart
groupEnd
temp
ans
j
i
balancedCount
lCount
rCount
flat
index
j
mode
readingIndex
result
i
eachRow
j
len
countX1
countY1
countX2
countY2
i
m
n
prefix
i
j
low
high
ans
mid
min
i
j
n
time
i
maxP
lastPos
currProfit
i
j
mod
prevA
prevE
prevI
prevO
prevU
a
e
i
o
u
n
prev
curr
prevMinOne
prevMinTwo
currMinOne
currMinTwo
j
prevMin
temp
digitCount
evendigitCount
res
dp
cur
last
curr
i
cmp
update
level
x
i
n
update
i
curr
i
maxLevel
level
limit
p
copy
board
i
i
str
j
str
str
l1
i
count
freq
n
i
sb
dupCount
i
j
total
i
i
j
ans
result
r
c
box
target
player
q
visited
steps
size
cur
i
newPlayerLoc
newBoxLoc
visited
q
playerLoc
x
y
p
t
b
i
j
sub2Count
lo
hi
maxCount
uniq
uniqCount
hiCh
sub
count
loCh
result
x
y
functionResult
numbers
numberOfCheese
remaining
numberOfSmall
numberOfLarge
res
n
upperRow
lowerRow
currentUpperSum
currentLowerSum
i
i
i
i
result
queensLoc
queensY
map
uni
mod
i
i
minTime
i
paths
res
lastSlash
isSub
upperDir
quarter
i
l
curr
num
closingParantheis
result
openingParanthesis
chipsAtOddPosition
chipsAtEvenPosition
ans
color
cnt
i
ind
assColor
leftColor
rytColor
i
j
lp
n1
n2
i
i
u
v
cost
uList
u
v
cost
uList
minHeap
distance
nodeCost
node
cost
neighbors
next
nextCost
maxDivisor
maxDividedNums
dividedNums
max
sum
i
res
i
iSq
cnt1
minsubarray
i
curgcd
j
n
dist
minDistIdx
i
cost
cur
i
len
q
tmp
i
j
c
k
k
ans
j
max
num
neg
size
row
best
i
sum
j
result
counter
i
nexts
ranks
i
i
i
newCount
currentVal
newCount
existing
map
i
i
j
ans
max
j
i
max
pointsMap
friend
turn
result
i
index
ch
i
j
map
i
temp
ans
i
temp
count
h
dp1
dp2
rtn
col
f
row
pr
nr
t
i
rootA
rootB
dsu
indegree
gcount
res
i
root
out
i
nodes
depth
step
nextNode2s
i
newNodes
loReverseStart
hiReverseStart
loNode2
hiNode2
postHiNode2
node2
nextNode2
i
res
map
idx
chars
max
n
zero
one
i
i
maxSum
res
i
res
curr
sumOfMin
res
mod
max
mySumOfMin
n
h
q
ans
i
x
j
v
u
o
maximumPoints
totalTypesOfCheese
differenceInRewards
i
i
graph
i
i
e
pq
distances
visited
c
dif
c
n
prefixSet
suffixSet
preList
sufList
ans
i
i
n
i
n
left
right
ans
mid
p1Score
p2Score
isTen
xor
m
n
max
i
j
arr
j
ans
ind
i
count
si
max
sum
res
i
curr
result
i
max
left
right
temp
n
arr
i
ans
i
sum
high
count
temp
n1
n2
k
primes
composite
added
i
j
max
primes
prev
pos
index
alphabetCost
ch
i
chr
chrCost
currCost
maxCost
cost
n
i
cnt
s
r
last
res
i
abs
stack
n
chars
i
j
sum
i
res
res
index
rightCounts
index
res
last
i
curr
suffix
i
prefix
max
i
num
nearestManDistance
result
i
point
distance
beg
end
node
tem
n
fre
i
dp
max
i
dp2
max2
xor
al
total
count
i
bs
zcount
pos
i
m
speak
teach
user
userLanguages
listToTeach
userA
userB
hasCommonLanguage
language
language
minLanguage
languageToTeach
language
count
user
setToTeach
userA
userB
map
result
it
elem
key
value
j
find
mod
h
q
i
j
q1
x
y
i
nx
ny
len
ch
dp
i
r
maxSoFar
count
sqLen
sb
strs
hour
min
ab
i
j
count
val
id
time
left
right
mid
operations
ctime
ans
map
i
list
n
l
arr
index
maxValue
countArray
currentSum
i
currentSum
largest
sl
n
i
j
c
decoded
i
i
size1
size2
min
sb
i
len
queryWithIndex
i
numId
ans
root
i
i
digit
ans
i
digit
nums
len
res
i
notPrime
res
i
j
res
i
j
res
cnt
longer
shorter
i
j
diff
minOps
sum
diff
adj
set
n
num
i
j
c
i
j
k
res
max
size
c
set
j
set2
res1
res2
m
n
res
j
currentJ
currentI
i
j
res
min
goLeft
d
n
v
i
v2NOld
v2DOld
n
neighbors
i
ans
v2n
v2d
rem
n
nFirst
nSecond
first
second
low
high
ans
localSum
i
result
candiesComm
i
i
type
day
cap
n
m
row
dp
prev
i
a
b
l1
l2
min
t1
t2
max
i
mondayMoney
total
weekDays
base
result
visited
i
i
n
weight
parent
components
list
list1
list2
size
a
b
y
m
n
mousePos
catPos
i
j
c
i
j
c
catTurn
dirs
m
n
graph
i
j
list
step
x
y
ans
checkRuleNum
k
used
floor
unused
r
a
a
product
max
i
max
edgeCount
degree
u
v
eId
degreeCount
maxDegree
count
i
u
v
i
res
q
map
sum
c
i
ch
value
n
memo
idx
use
notUse
res
end
mid
a
b
sb
i
j
first
index
left
right
set
i
c
checker
i
graph
res
i
count
v
left
right
res
cl
m
n
i
j
count
j
stack
n
ans
i
presentCar
presentCarSpeed
previousCar
previousCarSpeed
dist
speed
i1
i2
i
count
res
i
maxUnits
i
prev
i
temp
index
j
k
l
maxSum
i
j
sum
minHeap
eatenApples
i
arr
i
len1
len2
len
word
dp
max
arr
d
i
countFromLeft
countFromRight
moves
result
i
c
len
cnt
min
arr
idx
sum
i
i
mid
k
radius
res
max
altitudes
i
sum
cur
res
i
idx1
sum1
idx2
sum2
right
min
max
s
degrees
adjMatrix
minTrios
i
j
k
trioDegree
metOne
i
t
rows
cols
prefixXor
array
r
c
target
pivot
j
k
tmp
n
memo
n
maxScore
i
j
score
score2
graph
pq
vis
rem
ans
x
graph
i
u
v
wt
beauty
i
numCountOfFreq
charFreq
min
max
j
c
freq
heap
delta
temp
pass
total
delta
average
temp
firstZero
i
val2
n
node
i
c
kid
node
len
c
kid
r
t
n
max
inc
exc
i
i
list
lines
map
prev
f
curr
results
len
first
second
count1
count2
values
i
symbol
left
right
i
ans
k
cum
curr10
rem
q
product
ans
i
p
j
val
popValue
graph
i
output
visited
res
i
leftHeight
rightHeight
lo
hi
ans
mid
p
lo
hi
mid
map
words
i
start
end
mid
a
i
n
res
x
dq
i
j
adj
i
colors
i
m
n
i
j
lives
i
j
lives
r
c
xorSum
rightBit
a
temp
ugly
i2
i3
i5
ugly2
ugly3
ugly5
nextugly
i
left
right
i
j
sum
min
prev
curr
next
ca
num
prenum
isPlus
c
res
i
map
len
i
index
ans
bulls
cows
i
s
g
dp
i
left
right
start
end
mid
joiner
threeDigit
hundred
sum
tempSum
num
lastSign
i
c
factors
n
isprime
count
i
j
i
map
str
tar
n
i
i
m
n
dp
max
i
j
next
d
w
i
m
temp
i
x
diff
n
m
letters
lps
builder
sb
s
sb2
i
root
len
right
i
prev
next
i
large
small
large
small
root
x
i
arr
res
list
digit
result
sb
k
len
freqArray
totalSoFar
k
index
index
happy
a
rem
sum
set
left
right
top
bottom
area
collected
i
j
c
s
i
t
toDelOn
toDel
charFreqMap
r
c
ranges
n
a
b
strB
i
length
q
n
m
vis
i
j
dir
maxDistance
level
size
i
top
currX
currY
j
x
y
counter
i
i
i
tmp
clockwise
i
counterClockwise
i
i
n
l
r
len
ans
lft
rit
perfectSubstring
snapToValueMap
value
heights
i
width
height
l
length
map
count
tmp
count
res
i
modulo
n
m
dp
i
j
i
newStack
val
val
answer
logNode
levelStart
diff
d2
prevEnd
prevLabel
a
c
m
res
sourceRow
sourceCol
path
position
targetRow
targetCol
path
i
forests
node
monthDays
dateArr
year
month
day
dayCount
leapYear
i
i
i
i
i
map
count
smaller
bigger
key
rightToLeft
bottomToUp
i
row
col
i
j
j
i
res
i
j
curLen
k
leftDep
rightDep
counts
ans
maxv
i
res
res
res
res
isTrue
totalSum
max
cur
max
cur
i
graph
i
x
y
rank
res
neiTime
candiesDistribution
count
i
i
i
s
res
map
trans
trans
start
i
l2
dp
i
noChange
j
res
i
val
indList
j
candidateVal
i
curBit
indList
indOfLeft
indOfRight
i
j
k
n
ca
i
i
i
level
size
curr
graph
i
a
b
u
v
shortestPaths
q
i
tn
tn1
tn2
tmp
i
n
counts
i
m
c
ans
l
r
k
prev
kk
ans
total
j
sum
result
min
i
diff
leftCount
rightCount
parent
max1
max2
max3
max4
min1
min2
min3
min4
i
pre
curr
map
preSum
key
maxWithNoDeletions
maxWithOneDeletion
maxOverall
i
numToProcess
nextMaxWithNoDeletions
nextMaxWithOneDeletion
map
i
j
n
sb
i
l
r
idx
reversed
temp
queriesMinFrequecies
i
wordsMinFrequecies
i
result
i
count
i
str
sortedString
frequency
i
ret
i
i
map
sum
max
ans
map
wordmask
oldfreq
newfreq
puzzlemask
firstChar
first
sub
count
firstCharPresent
wordvalid
mask
i
bit
ans
n
cur
clone
i
i
pairs
map
i
c
count
max
totalCount
j
totalCount
groupSum
n
m
map
i
arr
i
list
val
banned
i
j
val
res
i
zero
i
res
st
smallestLeaf
smallerLeaf
smallestLeaf
smallerLeaf
n
ans
chars
depth
i
sb
a
b
c
sum1
sum2
xor1
xor2
words1
words2
i
n1
n2
serverq
i
activetaskq
time
res
i
task
toptask
task
server
n
i
dp
i
count
ans
i
n
tasks
i
minHeap
time
taskOrderResult
i
index
task
l
dp
min
currIndex
i
index
result
res
c
res
count
i
candidate
i
ans
sb
n
count
i
fact
mod
i
len
ans
i
bound
first
rev
k
result
result
i
pts
start
preSum
total
i
length
product
max
map
i
j
res
result
start
prevUser
prevMin
count
numRoom
numQuery
i
roomIds
result
j
i
currRoomId
currRoomSize
currQueryIndex
nextRoomId
prevRoomId
result
swap
pair
lo
hi
ans
arr
i
j
tmp
numPackages
preSum
i
ans
totalWastedSpace
prev
upper
totalSpace
packageSum
spaceWastedCurr
l
h
m
n
mod
left
i
p
right
i
p
res
preSum
i
i
sum
cur
res
words
sb
i
sideJumps
currLane
i
j
min
max
i
less
more
i
i
total
preSave
i
current
save
arr
val
curr
i
dp
i
dp2
j
i
sign
arr
i
maxyear
max
i
time
cur
j
knowledgeMapper
answer
i
letter
key
count
i
c
ans1
ans2
convertedS
left
right
middle
i
i
p1
p2
n
m
po1
po2
res
m
n
rows
cols
i
j
side
i
j
sum
d1
d2
k
val
val
val
val
count
count
key
key
zeroes
ones
i
start
result
minDiff
i
str
sum
r
revMap
cnt
lhs
prevCnt
mod
mod
max
counts
qnts
i
j
i
sum
len
graph
frequencies
calculatedFrequencies
status
i
localMax
color
max
frequencies
localMax
i
color
graph
i
i
j
n
li
root
pairsCount
pairsCountHigh
pairsCountLow
pairs
curr
i
numIthBit
xIthBit
curr
i
ithBit
n
m
result
i
j
idx
c
n
cost
i
max
lo
hi
mid
res
n
localStr
t
a
b
i
f
sec
ans
i
count
res
remGroup
g
res
s
val
i
dp
i
ints
chars
start
stop
i
stb
m
i
id
height
res
currMax
max
present
count
i
tempGcd
j
temp
start
end
i
i
i
i
j
tempRow
i
j
temp
sell
buy
price
amount
type
ord
toRemove
ord
toRemove
sellCount
buyCount
total
x
y
r
mod
st
one
two
three
leftValue
rightValue
sumBefore
sumAfter
left
right
middle
len
dp
i
i
j
i
cnt
len
maxLen
i
negativeCount
result
val
target
i
i
minsOps
i
start
end
min
words
treeMap
key
sb
factor
powerOfTwo
ops
charFreq
chIndex
alphabet
list
i
startIndex
removeIndex
capicity
minHeap
m
n
preSum
maxLen
r
c
r
c
l
rhombus
size
res
i
localSum
currentIndex
localK
sum
numQuery
queriesWithIndex
i
minHeap
result
j
i
queryVal
queryIndex
p1
p2
t
m
min
max
a
b
i
j
ret
p4
a
b
c
i
j
ret
set
sum
prev
salary
tax
g
minOp
smallest
tmp
myXOR
nbrXOR
xor2
xor3
max
min
myXOR
nbrXOR
n
graph
tot
i
u
v
seen
count
i
diff
cache
result
i
weight
value
fa
ga
rx
ry
n
ret
max
uf
i
u
v
ru
i
val
sum
count
i
j
gt
sA
uA
i
n
min
dead
maxheap
i
cur
len
ans
arr
i
j
direction
a
b
c
d
k
val
i
food
pq
dish
pq
sb
stars
i
pairs
i
seenFirstIndexYet
idxIntoS
c
n
ans
i
cur
bitSet
cnt
res
x
i
i
j
i
i
j
days
lastOccurence
i
lastTimeOccurred
daysDifference
n
score
maxScore
node
i
max
i
num
s
start
end
old
sum
n
res
i
j
p
q
minSumSquare
diffs
totalDiff
kSum
currentDiff
maxDiff
i
i
i
canPartition
diff
equal
incOne
i
dp
mod
i
cnt
res
set
i
j
n
vis
dfsvis
path
maxLength
i
length
sum1
sum2
n
temp
temparr
maxEndingHere
minEndingHere
maxSoFar
minSoFar
currEle
i
i
j
row
col
res
map
i
i
deg
res
graph
i
queue
from
to
i
node
list
n
m1
m2
index
dist
i
dist
ret
max
lastI
i
j
sb
limit
ans
i
replacements
nums
r
i
set
i
map
s
map2
ld
rd
left
right
set
ans
n
deque
front
end
sum
left
right
res
n
m
ans
dp
i
j
c
n
i
cnt
local
graph
i
src
dest
q
visited
ans
vertex
numberOfDigits
placeValue
list
op
i
listIndex
place
n
output
i
count
digit
op
digit
place
mod
space
house
sum
m
n
dp
i
j
min
k
min
common
first
second
uniqueA
uniqueB
ans
map
startChar
values
i
j
unique
dp
i
j
k
k
i
temp
n
hm
i
c
sum
i
pq
top
s
i
tmpCol
pairsMap
pairsCounter
col
row
hashCode
hashCode
count
isAllZeros
i
map
res
s
mod
maxDistinct
dp
i
j
k
sum
i
invs
i
result
comb
i
cTime
n
i
mT
pT
gT
m
p
g
tTime
n
i
len
res
i
res
j
unbounded
res
i
d
map
ans
i
p
cnt
i
px
py
ans
array
i
curr
currans
temp
j
count
center
first
second
c
i
res
cost
n
i
diff
l
r
sb
current
val
i
totalEnergy
result
currentExp
exp
i
last
blen
plen
b
p
c
start
lastOne
result
prevResult
curResult
countOne
countZero
diff
pTarget
pWait
cTarget
i
t
right
min
rev
ans
i
sb
temp
alphabet
itr
c
i
j
result
result
result2
curr
result3
randomIndex
curr2
result
result2
root
queue
i
curr
root
leftValue
rightValue
result
current
mod
size
possible
i
dp
i
j
k
marks
i
j
max
map
i
prefix
raw
map
dishSet
tableNumber
dishName
dishCountMap
dishes
result
row
i
words
i
max
result
ways
sums
max
count
ways2
sums2
max
cost
noCost
newCost
stepBase
step
stepArr
lastStepArr
i
cur
repeat
index
step
stepArr
count1
count2
i
isS1Greater
isS2Greater
i
dp
transfer
i
j
prevStates
sum
total
i
sum
mulSum
i
maxVal
n
res
in
i
j
newNode
sum
result
i
treeSet
i
m
n
sum
entry
count
curr
i
next
dp
i
ans
value
c
s
i
result
i
foundDiscount
j
map
n
sb
i
c
index
pattern
kMod
n
dp
i
temp
j
n
left
right
guess
judgeResult
bouquets
cnt
set
n
res
mono
i
take
mx
n
dp
dist
min
i
dist
result
dp
i
j
temp
t
i
result
set
closestX
closestY
distanceX
distanceY
distanceSquared
max
i
start
maxVowelCount
vowelCount
i
j
c
ans
list
i
i
index
n
count
i
total
start
end
st
sbStr
m
ind
r
q
i
j
l
a
chars
digits
isDigit
sb
i
maxVertical
i
diff
maxHorizontal
i
diff
g
i
e
f
t
w
mst
i
mstSet
ans
pce
ce
f
t
w
ind
cur
p
f
t
ind
ds
edge
i
pu
pv
n
min
max
sum
i
startIndex
endIndex
sumOfNonIncludedElements
sumOfIncludedElements
result
m
n
prefix
i
j
dp
i
j
s
local
x
y
visited
graph
vertexA
vertexB
steps
steps
s
e
max
extraZero
allOne
i
q
vis
adj
count
i
node
list
prev
curr
n
count
num
i
maxQ
minQ
best
left
right
count
i
visited
last
nextStep
nextStep
nextStep
nextStep
coord
zeroes
ones
i
maxScore
i
l
r
sum
idx
ans
length
angles
j
b
a
alpha
beta
count
res
n
dis
i
j
ans
i
ans
f
i
max
ans
queue
pos
sz
cur
count
i
xor
k
i
j
map
words
len
sb
first
strings
m
n
dp
k
i
j
result
i
j
result
x
y
r
c
freq
i
res
max
r
rMax
l
v
result
i
j
count
remaining
occur
occurrenceCount
list
i
mod
powOf2
i
res
left
right
first
second
stack
xMax
yMax
xMin
yMin
min
max
areDigitsUnique
nums
i
result
hm
tree
ans
i
val
mapVal
sb
remains
chars
preIndex
index
largest
min
sum
dp
currC
res
grpLeft
clr
grpLeft
dp
pres
prev
next
dp
mask
canTake
i
take
last
i
result
str
denom
num
result
set
max
i
steps
carry
i
currSum
maxSum
i
r
array
median
start
end
i
m
s
c
i
j
dp
sum
ndp
i
j
k
nk
nr
i1
nj
i
m
mTwo
n
workers
i
maxHeap
sumQuality
result
i
worker
groupRatio
xor
memo
res
mod
cur
dp
i
i
root
low
high
alice
bob
visited
treeSet
key
result
i
k
changed
sb
stringIndexToKIndex
i
indexIntoS
substringInSources
substringInS
pque
l
map
n
sta
i
p
x
i
p
t
grid
index
count
q
i
j
dx
dy
target
visited
steps
size
curr
x
y
state
i
nx
ny
nState
fast
slow
localX
localY
i
moves
result
j
j
j
j
splits
sb
a
firstChar
m
n
result
i
flipped
result
i
i
j
tmp
lastElement
masked
locationOfAtSymbol
allDigits
pointer
numDigits
s
i
j
tem
pq
start
end
currentFuel
stops
current
ls
ld
rd
n
max
i
j
k
area
a
b
c
l
h
m
n
count
i
j
set
sum
stack
i
curr
score
ch
k
i
j
rTemp
lTemp
sb
k
c
l
r
ans
mid
cnt
t
graph
i
u
v
w
queue
dist
curr
u
d
v
w
ans
i
u
v
w
l
r
result
i
i
j
counter
result
k
y
queue
arr
count
line
i
n
runningSum
i
str
i
correctShift
dp
res
runningSum
i
target
q
i
steps
visited
size
i
curr
currNode
currState
newState
finalans
check
ans
j
pat
wor
cars
i
c
numFleets
lastTime
i
timeToTarget
maxAvg
sum
i
right
left
right
right
left
max
maxAt
maxAtLeft
cur
pre
at
distance
len
i
sum
i
stop
i
i
list1
list2
i
visited
res
i
qu
s
j
c1
c2
mismatchCount
i
first
second
sCounts
i
i
curr
ss
temp
i
res
count
i
currChar
length
i
c
ans
min
list
i
cc
i
ans
after
before
f
len
dp
ans
i
left
right
i
surfaceArea
i
j
hidden
tower
dp
i
a
b
i
left
right
leftMinDistance
rightMinDistance
maxReach
sc
result
sb
commaPos
dp2Idx
dp1Idx
dp2Idx
dq
i
curSum
res
countFive
countTen
data
root
offset
targetRoutes
queue
taken
graph
bus
size
i
route
len
graph
i
id
i
j
idA
idB
ans
achars
bchars
i
ans
j
ans
i
j
temp
cols
x
y
row
col
res
i
x
y
x
y
map
i
j
mod
l
pow
i
res
i
set
result
i
j
temp
list
test
num
index
i
samePart
ret
i
i
j
boats
e
f
dp
counter
temp
i
val
set
result
m
n
i
j
j
ones
i
result
sb
j
res
i
num
size
max
value
twinCardHash
existingNumbersHash
i
i
max
leftLca
rightLca
maxP
sumP
low
high
mid
sum
list
i
prob
ans
i
j
node
node
count
dll
dll
node
g
marked
colors
v
i
output
i
b
j
a
len
map
cnt
cnt
loop
curCnt
a
i
map
x
set
i
j
fmap
rep
i
c
str
res
comp
i
toHash
dp
modulus
i
i
currWorker
currProfit
j
k
n
m
sum
count
max
j
i
max
j
rows
cols
tallestR
tallestC
max
i
j
i
increase
i
j
ans
i
j
ch1
ch2
len1
len2
count
j
i
ans
i
ret
i
child
i
s
s
i
n
p
bits1
bits2
n
res
hori
veti
curOverLapping
i
i
bits
i
cur
j
max
pos
lastPos
a
a
b
t
rl
cl
i
j
m
t
sz
i
j
map
result
strs
morse
set
temp
lastCharIdx
prevLastCharIdx
len
dp
accumCount
i
ch
chIdx
lastSeenIdx
prevLastIdx
n
maxProfit
i
i
sum
direction
x
y
maxDis
xMap
yMap
next
res
vis
i
aSum
bSum
diff
ans
set
current
n
flag
i
out
node
aEndIndex
bStartIndex
i
i
ans
i
j
duration
startTime
sum
ans
endTime
avgTime
ans
numOfLockedClose
numOfLockedOpen
i
countOfChars
j
maxOdd
maxEven
max
n
even
odd
i
t1
t2
i
ans
secondEven
secondOdd
i
ans
point
equal
res
sum
left
right
result
left
right
maxSum
slow
fast
tail
pivot
tail
prev
temp
stringChars
i
equivalentIndex
i
c
strings
i
j
l
r
charArray
output
prev
k
temp
i
temp
beam
prev
nos
map
bitmask
keyset
totalGroups
maxSize
size
size
i
i
j
n
i
j
aRefill
bRefill
initialCapacityA
initialCapacityB
n
diffs
smallest
i
k
visited
lower
higher
count
lowerVal
higherVal
n
sum
q
i
cur
left
right
i
cur
left
right
mask
memo
slot
bit
n
m
bfs
items
distance
size
loc
dirX
dirY
i
newX
newY
distDiff
priceDiff
rowDiff
ans
item
odd
even
o
e
i
i
redHashMap
greenHashMap
blueHashMap
i
charOne
charTwo
result
i
map
data
childData
n
arr
i
ans
lastPlantDay
i
currBloomDay
n
set
i
descendantCount
previousCounts
i
curr
remainingSum
result
lastSum
a
i
i
sum
answer
i
count
currX
currY
j
mv
curone
curzero
max
list
i
n
graph
i
i
j
dx
dy
r1
r2
dist
visited
ans
i
cc
count
known
updatedKnown
updatedKnown
conflictDetected
i
answer
i
max
start
wc
end
res
temp
slow
sum
fast
size
sum
i
tmp
sb
ans
m
negatives
positives
result
pPtr
nPtr
rPtr
n
max
min
hidden
i
i
low
high
indegree
supplySet
adj
i
recipe
numberOfDependencies
q
res
recipe
threshold0
threshold1
threshold2
curr
i
zerosCount
low
high
len
follow
pathlen
visit
q
i
i
j
maxCycle
sumPath
i
clen
smallOrEqualIndex
i
length
smallOrEqualIndex
i
tmp
l
ones
i
ws
minSwaps
si
ei
totalones
swapsreq
n
map
i
list
ans
sum
first
i
prevElements
nextElements
i
diff
mul1
times
index
hash
end
i
val
n
minHeap
maxHeap
leftMemo
rightMemo
current
i
removed
i
removed
min
i
res
i
first
second
gcd
lcm
a
b
gcd
lcm
count
tempNum
min
rem
output
i
j
i
j
n
sum
minbeans
prefix
suffix
count
i
result
freq
index
max
second
count
digit
cur
num1
num2
mins
secs
s
curr
res
i
count
ans
num
i
j
rl
i
row
prev
j
i
prev
j
minf
shortest
len
f
r
index
t
sum
i
j
mult
mod
realNums
i
num
realNum
retval
retval
i
bitMap
result
i
position
position
position
count
bitMap
i
ans
t
str
sb
i
j
counter
pairPalindrome
selfPalindrome
count
palindrome
count
seat
mod
i
curr
ans
i
store
i
res
count
i
sb
i
j
len
mid
count
i
start
end
i
visited
childList
childList
count
map
gd
want
n
idx
arr
i
i
tree
res
i
smaller
bigger
ans
ans
start
n
i
end
n
res
s
dp
i
lo
hi
mid
min
max
minocr
maxocr
i
sum
n
i
t
n
sum
i
res
min
end
n
memo
i
len
i
j
p1
p2
x
sqrt
i
x
x
i
i
p
i
cur
n
i
res
dp1
dp2
n
t11
t12
t21
t22
i
n
mod
i
res
i
min
res
maxLength
i
length
j
set
i
result
endIndex
answer
other
m
visited
i
j
n
s
left
seen
i
i
minDifference
i
difference
transferableTimes
transferredLiters
m
valIdx
i
l
r
res
servCount
rVal
lVal
i
mn
mx
queriedRow
queriedCol
sum
remainingRows
remainingCols
i
type
index
value
minPrice1
minPrice2
totalPrice
arr
i
j
ans
i
ans
count
x
y
i
j
entry
x
entry
n
m
v
i
ind
i
values
j
ans
a
b
lastOne
n
ans
mod
i
lo
hi
count
idx
maxLength
minLength
leadingZeroes
num1extended
i
j
k
total
unnecessary
ans
beautifulPairs
i
j
firstDigit
lastDigit
botDigitsAreEqualAndNot1
botDigitsAreDivisibleBy2
botDigitsAreDivisibleBy3
n
digit
count
mod
i
n
numbers
majority
count
majorityCount
count1
count2
left
right
i
n
rindex
i
stack
ans
m
n
pos
i
mask
valid
j
curr
j
sum
n
dp
i
j
n
map
last
i
i
ans
i
possLast
j
m
dp
i
finalI
i
target
noOfBits
a
b
idxA
idxB
i
max
sum
newSum
count
set
n
ans
i
j
k
arr
count
i
n
j
m
n
arrTopLeft
arrBotRight
i
c
r
set
i
r
c
set
i
r
c
set
i
c
r
set
result
r
c
n
dp
ans
mapCount
i
currMap
evenCount
value
i
base
ans
i
count
n
total
k
count
localA
i
j
n
m
i
ans
n
i
j
n
m
map
i
j
val
memo
res
max
i
j
i
j
sum
i
list
si
i
dp
mod
v
a
i
set
digit
filtered
product
hasZero
result
i
cur
n
j
i
n
a
n
curWord
curLen
curFirst
curLast
curWord
curLen
curFirst
curLast
ans
ar
br
cr
insertIndex
i
ii
match
j
tmp
i
dp
i
toggle
nottoggle
vowelCount
countIndexMap
result
charMap
i
j
i
n
dp
res
i
i
sum
j
currIndex
result
previous
sum
i
diff
res
lower
higher
j
i
pow
temp
runCount
i
res
map
i
soln
timeStamps
i
first
third
hourDiff
minDiff
maxLen
i
c
lastIndex
p1
p2
data
i
d
j
ans
pq
i
turn
a
b
n
sum
i
prev
res
maxQuality
quality
finalX
finalY
i
j
x
y
dist
len
preSums
i
postSums
i
result
i
max
count
angles
a
s
e
size
n
index
x1
y1
x2
y2
angle
ans
sum
seen
j
pq
min
diff
max
max
x
found
i
studentsQueue
sandwichesQueue
i
available
busy
requestCount
n
id
i
defaultServer
top
nextServer
requestEnd
maxRequests
busiestServers
id
id
xValues
i
max
j
limit
v
step
q
size
i
c
backward
forward
alwd
res
i
b
j
rowCount
colCount
nums
numsIdx
rows
cols
r
c
nIdx
num
endIdx
r
c
rowCount
ufind
nIdx
r
c
pr
pc
nIdx
r
c
sb1
sb2
n
lbs
dp
dp2
lis
i
idx
i
idx
stack
maxDepth
start
end
count
sum
matches
i
minSize
prevMin
prevMax
diff
res
totalArraySum
target
sum
result
start
end
i
mid
i
result
i
mid
result
i
result
maxIndex
maxValue
i
newVal
sb
v
n
range
i
i
answer
i
result
y
m
p
i
i
dist
graph
ps
set
isp2
fdist
sdist
dist
tempArray
result
i
ans
n
m
dp
tp
i
j
i
j
k
x
set
edges
result
i
x
x
y
count
map
freq
list
result
i
list
k
j
a
b
sb
cleaned
i
res
even
odd
oddSum
evenSum
i
i
maxValue
bit
cost
i
sum
sb
i
list
n
p
i
x1
x2
result
len
i
kSum
i
i
kSum
kVal
i
i
deque
i
max
next
degrees
connected
max
i
j
n
dp
i
j
sum
start
i
end
i
nums
max
i
freq1
freq2
i
delta
n
i
a
b
res
curr
i
result
n
i
n
max
min
i
diff
checked
i
currentDiff
numOfState
max
up
left
temp
nextState
temp
nextState
k
repeat
n
mod
totalValue
count
i
diff
remainder
counts
memo
counts
idx
answer
arr
sum
i
copy
j
dp
sums
mod
diff
segments
one
two
temp
i
val
set
n
m
pq
vis
dx
dy
min
p
row
col
diff
i
r
c
index
result
index
result
length
sum
i
t
weight
n
dp
left
right
r
n
j
i
l
counter
i
counter
first
index
i
j
i
i
j
cnt
freq
seen
i
max
sum
ans
dp
i
j
ans
i
j
minHeap
i
diff
diff
plusIndex
stringBuilder
i
a
b
c
number
i
i
str
sb
max
maxTravers
i
cnt
arr
i
words
sb
price
i
stringPrice
str
temp
i
swapIndex
even
max
j
j
tempStr
mindiff
map
n
i
j
degree
maxdegree
rank
i
j
res
dmin
dhour
min
left
right
currsum
currcount
n
count
sum
sb
i
dp
m
cum
i
curdp
i
j
ans
pq
j
t
i
n
m
dirs
q
visited
state
nr
nc
next
partitions
j
i
mini
closestNum
binaryNum
i
answer
j
answer
n
ss
z
l
r
i
sum
i
currentCover
maxCover
head
tail
possiblePartialCoverOverCurrentHead
n
forward
backward
prefix
suffix
i
i
res
dq
i
cur
prev
cur
prev
sum
preSum
postSum
n
cnt
cnt
minHalf
maxIndex
isOdd
res
i
half
res
offset
res
i
j
charToCount
i
copies
i
ch
bits
i
ans
len
dp0
dp1
dp2
dp3
dp4
keys
base
i
r
item
pq
ans
mod
len
dp
prefix
tiles
total
i
i
j
doNot
doTake
max
sum
left
right
mid
i
freq
len
i
total
i
map
i
index
map
list1
list2
res
winner
loser
z
o
zo
oz
zoz
ozo
len
lastPos
res
i
idx
n
newNums
i
max
pos
steps
top
i
val
ways
cntPen
remMoney
i
j
count
s
sb
val
n
m
bfs
fire
i
j
rm
x
y
d
nx
ny
n
m
bfs
isVis
size
rm
x
y
d
nx
ny
dir
fire
lo
hi
mid
count
n
i
x
i
words
result
max
first
second
children
i
st
i
i
maxi
ans
i
result
uniqueWordIdx
currIdx
charMap
word1Arr
word2Arr
ans
count
i
left
count
i
leftSum
rightSum
count
i
i
i1
i2
mostLeft
v
ans
mid
left
sum
i
deque
v
spent
v
mid
stack
direction
prevc
collision
i
first
second
res
res
firstCount
secondCount
start
ans
i
l
r
m
freq
i
maxVariance
a
b
remainingA
remainingB
currBFreq
currAFreq
i
c
set1
set2
set
list
sChar
qChar
root
result
i
root
middle
len
ar
ans
x1
y1
x2
y2
flag
a
b
numsSum
minAverageDiff
sumFromFront
index
i
numbersRight
averageDiff
lastSlope
ans
i
curSlope
matrix
result
i
guardRow
guardCol
i
wallRow
wallCol
i
currentRow
currentCol
i
j
n
q
es
i
ct
ans
i
prevPos
m
n
max
row2
row5
col2
col5
factor2
factor5
r
c
factorTwo
factorFive
r
c
cur2
cur5
up2
up5
down2
down5
left2
left5
right2
right5
factors
xMin
xMax
yMin
yMax
ans
x
y
n
prefix
i
res
i
c
remain
min
dif
dp
result
rslt
numSubarray
i
countDiv
hashCode
j
count
queue
sum
count
hsum
maxElement
graph
weight
i
j
queue
curr
rounds
c
i
i
delivery
currentAmount
i
i
graph
maxScore
u
v
score
i
j
maxi
c
i
s
index
n
i
l
u
d
s
special
previous
i
ch
len
i
n
m
l
r
mid
mx
mxi
i
lv
rv
result
n
line
endpoint
start
end
color
mixedColor
start
end
mod
dp
divisors
i
m
zeroShift
res
i
diff
p
k
zpos
j
openCount
swap
n
i
j
tmp
k
ans
i
rootFolder
folder
foldersWithSameHash
folder
path
subFolderNames
builder
folder
duplicateFolders
currentPath
folder
n
nums
arr
i
val
flag
i
numNegatives
totalSum
minNeg
minPos
e
value
min
m
n
directions
queue
visited
shortestSteps
curr
i
nextX
nextY
max
min
r
a
b
sum
max
random
i
j
tmp
ends
i
r
c
curr
visited
newVisit
i
m
n
i
j
dirs
mod
result
base
time
i
root
root
valCnts
q
size
i
parent
toConnect
toConnect
last
i
ans
count
first
i
cur
oldCount
j
counter
i
bench
i
res
size
stack
idx
visible
i
count
descendingQueue
sum
newValue
currentValue
half
sb
i
ans
i
i
j
charArr
temp
len
i
j
m
dup
i
ans
c
i
l
i
p
userId
y
par
lop
f
que
v
t
p
removed
i
loginSerializeTime
logoutSerializeTime
count
res
cur
i
j
m
seen
i
j
sign
k
j
l
r
res
m
isPossible
sum
applesPerQuadrant
totalCount
min
curr
i
diff
sum
leftSum
rightSum
i
minDiff
i
mod
pq
ways
dist
graph
i
ele
dis
node
wt
adjNode
dp
m
i
steps
opposite
rNext
cNext
loopLen
realK
startPoint
loopLen
arr
idx
currPoint
startPointAfterRotation
x
y
words
count
broken
list
sum
newSum
n
even
odd
i
n
fd
i
ret
q
cur
value
p
msk
a
p
count
i
j
result
i
j
n
dp
j
i
ele
sum
maxEle
l
maxEle
sum
ans
cut
recAns
myAns
i
n1Digit
n2Digit
addons
currentHeight
i
nextRung
adds
node
mid
node
first
minDiff
next
node
mid
left
right
len
qlen
st
answer
i
shop
movie
price
iterator
listOfShops
price
price
ans
iterator
point
minheap
all
i
i
j
seat
i
len
set
len
sb
i
max
num
binary
res
min
i
st
end
mid
set
i
n
set
hash
i
n
curr
prev
m
n
ans
cnt
count
diff
l
i
sorted
len
max
nodes
p
group
num
existing
i
group
m
pre
current
max
j
j
max
max
count
i
n
len
left
max
i
right
i
res
i
len
p
c
r
i
mirror
a
b
i
addZero
count
countEndsWith
i
c
cIndex
endsWithCCount
res
primes
mask
freq
i
j
dp
i
j
ans
i
i
ans
time
i
i
j
common
i
sum
j
mod
len
st
ed
len
length
ans
arr
i
val
idx
ans
mid
count
i
j
product
sq
pq
n
minTime
graph
curr
time
count
m
i
j
j
diff
sb
totalTemplates
totalPaintings
paintingToTemplate
paintingCountForTemplate
templateEdgeCount
templateToIndex
templateCounter
i
c
j
matrixPower
ans
i
s
arr
i
j
i
type
templateIndex
i
digits
first
second
prev
type
curr
res
res
tmp
n
res
i
n
ans
i
j
k
n
i
i
pre
res
res
cnt
list
v
com
choose
mod
prevRoom
b
value
binverse
n
dp
ret
i
choice
j
result
max
isExisted
isVisited
i
length
j
r
r1
res
i
n
arr
test
found
i
j
dp
val
i
j
i
j
r
c
res
index
i
q1
q2
visited
count
i
currLimit
curr
x
y
n
modulo
result
i
numericValue
m
res
i
a
b
count
remainingSum
cur
n
res
i
ans
q
sum
size
i
curr
start
idx
end
piv
i
countMap
goodSubArrays
current
left
right
num
count
num
count
i
i0
i1
l0
l1
s0
s1
sub
path
partitions
partitionValue
digit
i
p
i
mask
j
res
pow2
res
pq
res
val
newVal
lo
hi
lcm
mi
cnt1
cnt2
cntAll
charArray
ans
mul
cnt
j
res
cnt
arr
ans
i
j
pq
n
visited
i
ans
p
idx
p
i
score
v1
v2
leftBridgePQ
rightBridgePQ
leftWHPQ
rightWHPQ
i
effciency
duration
id
e
id
e
id
id
left
right
g
oddList
i
x
y
i
size
x
y
i
a
b
c
d
n
d1
d2
d3
i
j
count
n
cnt
i
mi
nums
x
v
i
m
ans
i
numEighters
possibleEighters
lo
hi
mid
ct
i
dp
startPos
freq
nRepeated
pos
curNum
sum
idxLeft
idxRight
set
powerOfTwo
n
left
right
mid
count
x0
n
ways
currQuestCount
currQuestPoint
pointsEarned
quest
n
j
i
n
dp
ans
sum
r
eleSum
digitSum
sumC
max
min
n
sum
dp
i
smaller
i
result
i
j
ans
b
cnt
curr
i
diff
x
y
prev
i
isPrime
d
sqrt
i
count
xor
map
n
nums
i
sum
ans
pq
i
minVal
visited
output
num
i
j
n
a
i
k
minsResult
min
minIndex
n
min
minIndex
i
count1
count2
d
zip1
zip2
i
d1
j
d2
zip
i
d
count
len
i
i
vol
b
h
perm
count
i
str
count
sum
i
plus
minus
map
res
freq
localKey
n
dp
i
dq
sum
root
n
i
res
node
mid
left
right
root
str
ar
s
i
n
extraPower
i
curPower
req
n
preSum
i
st
last
i
min
sum
power
ans
mid
cnt
num
c1
c2
i
j
len
alPh
map
i
word
idx
s
pairs
freq
n
pcnt
ncnt
i
tp
i
i
j
dMap
dividers
i
nextEnd
i
j
hasPrime
nr
r
i
prime
cStart
cEnd
flag1
flag2
prefixArr
i
res
i
upperBound
lowerBound
val
feedback
pq
result
i
split
sum
result
ans
map
i
value
j
i
num1
num2
addToOne
i
tmpNumber
digit
m
n
left
j
i
right
i
min
i
low
high
pivot
repairedCars
i
g
tmp
m
n
pq
xDir
yDir
vis
curr
currTime
i
newX
newY
b
a
count
r
i
c
s
x
s1
n1
n2
n
g
i
all
add
par
ans
n1
n2
res
i
j
idx
minAns
maxAns
arr
i
i
i
n
ld
rd
ans
i
g
r1
c1
r2
c2
i
j
res
even
odd
i
arr
sum
count
i
n
m
rmove
cmove
cnt
i
j
val
isPoss
d
r
c
maxCapture
n
i
currMax
currMax
roundTrip
s
arr
res
i
ls
rs
i
flip
base
n
res
flipCount
prev
prefix
res
size
ns
i
len1
len2
freq
multiple
i
rem
i
movesRemaining
i
ch1
ch2
diff
number
res
i
mod
mod
result
start1
start2
sum1
sum2
lo
hi
mid
j
cur
lefts
rights
i
idx
result
stack
top
i
idx
newEnd
inheritance
visited
i
pattern
times
j
candidate
minX
minY
maxX
maxY
xMid
yMid
jump
ans
list
found
pointAns
list
totalDistanceSum
xDistance
yDistance
stack
i
c
sb
maxProfit
shift
waiting
profit
i
winner
winTimes
i
lengthAtIndex
countOfLength
res
step
leftLength
rightLength
newLength
count
i
len
sum
i
drunk
emptyBottles
exchangedBottles
unUsedEmptyBottles
m
dp
i
j
k
min
p
len
v
pq
mst
dist
parent
i
cost
i
newPair
pointIndex
i
d
missed
i
result
result
spaceCount
words
sb
i
trailingSpaces
newSpaces
sb
j
i
i
ops
bit
nonzero
i
dp
i
k
unhappyFriends
assignedPair
preference
assignedFriendPreferenceIndex
i
preferredFriend
preferredFriendAssignedFriend
candidateAssignedFriendIndex
i
i
n
m
visited
i
j
temp
ans
i
operations
i
n
ps
i
max
k
l
r
totalOnesCount
mod
waysOfFirstString
waysOfSecondString
onesCount
n
i
onesFirstPart
onesSecondPart
i
highestLeft
smallestRight
i
n
idx
mask
ans
i
j
len
swap
preProcess
i
i
minValueRequired
j
temp
cnt
i
alice
rankAlice
bob
rankBob
i
countAlice
countBob
remove
type
u
v
a
b
b
a
p1
p2
temp
l
tempArr
a
b
prev
i
index
ans
x
y
cached
result
sb
len
i
c
replaceChar
leftChar
rightChar
low
n
high
max
mid
pos
magnet
i
mod
fact
i
root
i
left
right
mod
totNodes
modDiv
perms
b
inv
inv
inv
x1
y1
j
coins
i
labelsCount
labels
nodeNumber
graph
i
parent
child
labelsFrequency
rootLabel
childLabelsFrequency
i
count
res
count
i
j
i
j
dp
i
c
j
ans
i
j
x
k
m
n
numOfIslands
hasArticulationPoint
color
minIslandSize
time
low
i
j
articulationPoints
islandSize
children
nx
ny
len
sum
i
c
i
index
j
m
n
mask
record
col
tmpRecord
row
msk
newMask
left
right
result
i
j
count
i
j
conClosed
opened
total
i
res
start
end
ans
i
posLen
negLen
res
temp
len
arr
idx
prev
i
j
result
mod
i
sb
digitPos
reduceMove
matchAmount
chars
i
cur
curIndex
digit
j
find
next
cur
start
i
hmp
n
target
sum
ans
i
key
str
sb
i
j
result
r
rl
rr
i
pairs
dist
leftToNodeDist
rows
cols
dp
i
j
i
i
i
j
up1
up2
left1
left2
m
count
x
j
k
prod
jNew
kNew
q
indegree
ans
i
hs
dp1
dp2
i
ch
hm
i
ch
count
i
n
cnt
i
i
i
sCnt
tCnt
i
sAsci
tAsci
rem
j
rem
j
count
i
j
k
nodeToNodesList
nodeToProbabilitiesList
i
i
u
v
w
probabilities
visited
queue
u
i
v
w
sarr
i
j
cnts
most
res
j
cost
colorBound
colors
i
j
i
j
printed
visited
i
j
str
minCost
i
culSum
res
map
i
sb
map
steps
totalJobs
maxJobsOneDay
map
maxDiff
k
day
maxEndIndex
maxStartIndex
startIndex
maxDiffOfTheDay
endIndex
totalDiff
map
sb
i
s1arr
i
dp
res
i
state
c
nextstate
c
nextstate
nextstate
i
idx
len
localNext
last
i
leftSubtreeVal
leftProduct
rightSubtreeVal
rightProduct
dp
nxtLargest
current
amount
i
ind
i
list
result
ic
move
c1x
c1y
c2x
c2y
n
third
dp
res
i
prev
prevPrev
j
curr
count
i
minAngle
hourAnglePart1
hourAnglePart2
hourAngle
preResult
popValue
i
count
words
columnMax
matrix
i
j
result
j
sb
str
k
rows
columns
dp
r
c
current
maxScore
paths
currentScore
nextR
nextC
m
n
sorted
i
iCopy
list
j
j
j
jCopy
list
i
i
left
right
left
visited
queue
cost
size
i
pa
k
m
n
d
m
n
validRows
i
j
stateSize
dp
i
ans
i
j
k
queue
sum
size
i
curr
inDeg
i
queue
i
tpLen
curNode
left
right
sb
i
ch
cnt
rsb
ans
or
and
visited
queue
currLevel
size
node
nei
map
f
watchedVideo
pq
res
nodes
i
i
i
sb
i
i
sum
i
left
right
numbers
i
map
count
result
i
list
ans
max
i
list
stationAndTime
startToEndStation
duration
pair
newAverage
result
start
i
i
ans
temp
i
i
sum
sqrt
tmpSum
count
i
i
j
root
i
res
nxtAvailable
counts
sum
i
count
i
d
h
m
dstore
hstore
mstore
sfreq
dstore
chunks
sd
ed
d
sh
eh
hstore
h
sm
em
mstore
m
ans
dp
i
j
n
rs
l
graph
inf
dist
i
j
k
i
j
map
i
j
numOfEle
ans
i
map
freq
i
count
totalLength
sqrt1
sqrt2
ans1
i
ans2
i
rows
maxLength
i
j
j
unused
ci
d
d
arr
i
step
result
i
index
minValue
resultK
index
i
j
start
mid
counts
i
n
result
j
n
dp
i
hash
j
set
res
i
j
res
i
i
query
sum
count
sb
copied
rem
oldRem
i
val
list
i
target
i
largest
map
sumOfDigit
i
val
count
sum
times
prefixHash
suffixHash
multiplier
len
mod
i
size
steps
sb
graph
i
visited
probabilities
queue
i
vertex
nextVerticesCount
arr
sum
set
i
c
i
j
e
k
m
count
sb
i
character
i
character
dp
mod
i
gaps
m
n
visited
q
cur
x
y
num
nx
ny
tmp
mp
i
occupiedFamilySeats
row
col
rowFamilySeats
count
sum
maxIndex
i
remainingSum
parentFirst
parentSecond
chars
count
j
n
dp
jumps
i
temp
l
r
j
j
cp
count
bit
i
reverseCount
reverseBit
i
result
i
sum
l
r
m
inorder
mid
root
strings1
strings2
a
y
m
list1
list2
merged
list
n
result
i
minLine
maxLine
i
diff
i
i
mini
maxi
min
cols
c
max
res
rows
cols
prefixSum
i
j
result
i
j
iMin
iMax
jMin
jMax
time
i
timei
temp
lp
rp
mp
check
tempMax
len
i
ans
index
i
j
engineers
i
speedSum
maximumPerformance
minHeap
len
myHash
i
curList
tempNum
tempIndex
myQueue
step
visited
curCount
j
curIndex
tempList
n
endStartPairs
min
max
curStart
curEnd
res
p
j
ans
i
x
count
len
len2
i
i
n
low
high
mid
res
maxLessThanMid
x
y
total
j
i
fraction
emailToName
graph
name
seen
ans
stack
component
node
mat
left
right
up
down
ans
i
j
i1
i2
i
j
i1
i2
x
big
len
dp
i
c
deta
l2
j
len
aveSize
extra
result
i
aveSizeTmp
aveSizeTmp2
tmp
len
tmp
c
i
dp
i
pq
acc
prev
i
ans
n
color
i
bucket
list
e
list
e
bucket
ans
list
bucket
list
e
prime
result
other
val
sum
n
res
change
i
i
curRow
cur
next
spilled
i
spilledAmount
mid
ord
sb
count
notPrime
i
num
setBits
i
j
i
targetCnt
visited
visitedCnt
crackStr
i
root
i
current
length
maxDiff
start
end
mid
count
i
j
cash
hold
i
len1
len2
dp
c1
c2
i
j
i
j
flag
indexesValueTwo
indexesValueOne
rs
i
residual
temp
n
colToMove
rowToMove
rowOneCnt
colOneCnt
j
i
i1
i2
s1
s2
c1
c2
sol
i
j
sums
i
i
temp
i
s
j
node
node
i
ptr
node
node
i
node
ptr
i
ptr
targetStr
sb
y
x
i
j
seen
q
dir
next
s
nextDepth
nextY
nextX
newBoard
arr
t
dp
i
i
srcAirport
destAirport
cost
swaps
i
coupleValue
coupleIndex
tmp
i
j
val
sum
min
max
dp
i
buckets
i
start
result
currBucket
start
left
right
mid
cnt
rst
pos
pos
pos
prev
curr
del
save
p
v
map
left
right
mid
res
id
visited
islands
scores
walls
i
j
maxVirus
i
i
x
y
nx
ny
x
y
start
end
mid
dp
ans
c2
cherries
a
b
c
d
keyList
list2String
sb
res
sb
j
res
res
c
res
map1
map2
map
key
map1
map2
map
map1
map2
map
res
res
sb
variable
key
res
ans
max
i
graph
visited
dist
spfa
curr
i
result
i
m
n
max
dp
i
j
maxElement
index
i
i
m
n
i
j
sameVal
tmpI
tmpJ
tmpJ
tmpI
a
i
ans
a1
j
j
counts
answer
i
rabbitsInPartialGroup
rabbitsInCompleteGroups
hash
i
max
letter
i
res
idx
i
i
ch
i
nextVars
varName
val
root
cur
n
c
next
pre
next
result
sb
multiComment
n
index
ch
visited
queue
numTarget
node
number
dist
neighbors
neighbors
index
ten
i
n
lmax
rmin
i
i
chunks
i
letters
result
position
i
i
prev
max
currPos
selfDist
ghostDist
list
i
origin
digit
stack
ans
i
ol
lower
sum
winsCol
winsDiag
xWin
oWin
i
str
rowSum
j
intchr
min
i
product
mlrStack
count
i
c
rank
mlr
atom
name
atomList
res
i
digit
endnum
firstendnum
dp
i
o
i
j
count
tempSum
meetingToBook
prevMeeting
nextMeeting
j
len
len
i
max
j
l
r
res
mid
que
visited
cur
x
y
i
dx
dy
res
aCount
i
continuousLCount
arr
hm
maxvalue
newArr
i
left
right
sum
res
set
twice
indexs
i
num
dp
ans
targets
delta
i
target
times
hours
minutes
prev
min
i
times
j
hours
minutes
min
i
m
n
dp
i
j
index
value
maxLen
len
i
tmp
rankMap
len
i
result
i
f
ans
preBit
i
k
countReal
countImagine
arr1
arr2
res
p1
p2
sb
x
y
x
set
minCapital
maxProfit
i
count
temp
list
queue
max
size
i
curr
inp
k
i
largerIdx
i
ret
digit
temp
temp
dist
i
i
j
i
j
s
sq
paths
i
newRow
newCol
m1
cache
map
sum
i
result
num
offset
first
second
numOfDigits
temp
j
digit
i
maxUncommonLen
indx1
isCommon
indx2
indx1
indx2
result
i
result
stack
i
tempSum
ret
sumCount
ls
rs
ans
map
sum
i
remainder
end
max
i
start
min
i
total
avg
cnt
max
map
c
maxLen
res
i
deque
size
j
pair
parent
ans
i
j
ga
gb
newVal
distancesSquared
deltaX
deltaY
i
map
ps
len
i
a
a
b
a
modes
res
i
p
flatArr
ansMat
k
i
j
sum
i
sb
i
stack
i
j
j
k
s
j
k
s
start
end
mid
x
y
m
n
l
i
j
upper
lower
n
firstUpper
i
gcd
idx
rst
list
sb
i
c
dp
i
l
r
len
ch
i
c
max
lastN
curN
cur
i
out
tl
tr
bl
br
isLeafLocal
valLocal
n
leftDash
countDash
ans
i
temp
min
hm
result
i
value
i
n
m
cntS1
cntS2
i
i
i
i
n
st
idx
i
aux
p
count
c
numOfMine
numOfMine
newRow
newCol
leftLength
rightLength
mod
matrix
e
n
e
i
target
j
k
l
exists
idx
lastVal
idx
count
length
i
i
j
str1
t
charCount
charAdded
sb
j
i
curr
phi
arrMod
result
p
cur
res
y
res
root
i
i
i
j
j
ans
i
ind
ind
queue
j
i
result
i
queue
res
i
i
cur
next
lastNum1
ni
x
m
sell
prevSell
buy
prevBuy
primes1
i
index
n1
i
min
j
i
j
n
m
n
i
j
sum
x1
x2
start
result
borderPos
incrPos
i
result
index
i
dp
gap
si
ei
l
r
maxAns
cut
leftAns
rightAns
myAns
lt
gt
i
ans
memo
exp
count
val1
val2
val
count
n
x
y
i
x
y
result
i
x
y
rootX
rootY
rootX
rootY
r1
r2
t
next
res
followers
t
ni
stack
longestLen
currDirLen
i
currLevel
nextLevel
isFile
period
space
currStrLen
j
odd
even
evenHead
i
tails
size
i
j
mid
dp
max
index
i
max2
pos
j
lst
i
cur
i
list
gcd
prod
i
start
end
mid
count
maxSubNums1
maxSubNums2
res
l
j
i
merge
i
j
idx
equal
ii
jj
k
i
j
ans
i
mul
j
map
ans
src
dest
pq
temp
nbr
left
right
index
mid
node
i
prev
curr
len
res
j
node
select
minRes
res
end
cnt
allSum
len
f
i
max
i
maxIncreasingSequenceCount
n
m
memory
i
j
count
answer
graph
degree
i
leaf
remainingNodes
i
size
l
dp
ans
swap1
swap2
val2
row
col
res
i
sum
j
r
curr
max
a
currSum
b
dp
i
prev
i
occ
res
result
i
i
j
k
container
totalArea
p1
p2
p3
p4
minX
maxX
minY
maxY
point
count
sb
c
repeat
shuffled
i
j
tmp
a
n
i
i
minVal
maxVal
range
offset
bit
ans
n
i
ps
nums
i
i
j
n
res
masks
i
i
j
mask
i
c
i
parent
currValue
sum
n
i
low
high
left
right
tmp
res
sum
i
req
len
count
start
s
c
out
left
right
out
count
res
ri
stack
p
prefix
i
sb
start
end
mid
n
sums
i
mid
count
j
k
t
cache
r
i
start
end
mid
row
col
count
r
c
val
boxPos
r
c
boxPos
val
oldRow
oldCol
oldBox
pos
pos2
ans
i
index
sol
r
queenRow
res
prev
count
i
result
firstMatch
dm
s
r
c
node
chars
arr
i
chars
k
arr1
arr2
res
index
i
k
j
carry
i
temp
i
rev
localX
i
j
p2
res
a
m
i
i
b
j
map
i
count
begin
end
d
head
nHead
nTail
ptr
temp
nNext
output
sb
lineTotal
numWordsOnLine
startWord
i
extraSp
j
k
i
ans
l
r
result
mid
lastIndices
i
maxLen
curLen
start
i
cur
lastIndex
endRow
endCol
targetRow
result
i
i
result
i
list
current
mid
c1
c2
m
n
row0
col0
i
i
j
i
j
i
i
sb
ans
temp
i
cur
dp
i
j
i
j
maxi
sum
i
j
res
val
b
len
j
occurTimes
i
length
maxLength
minJump
i
results
octet
i
digit
letters
ans
sb
i
n
j
ch
stk
start
end
s
ans
answer
n1
n2
dp
j
i
pre
j
tmp
tail
count
times
temp
i
newHead
result
i
nresult
node
previous
cr
h
res
i
m
n
i
j
res
heights
n
nLeftGeq
preIdx
res
i
stack
i
c
maxArea
left
right
n
f
i
twodigits
n1
shift
temp
pos
i
num
carry
sum
i
ans
finalResult
i
row
col
diagonal
antiDiagonal
count
c
l
r
res
lowerWall
lVal
rVal
indices
wordMap
wordLength
window
i
j
subStr
map
k
word
count
cut1
cut2
n1
n2
low
high
l1
l2
r1
r2
m
n
i
j
i
j
ans
i
current
next
cache
result
m
n
start
i
k
count
start
end
sqrt
cache
i
res
visited
i
j
eSeen
numberSeen
decimalSeen
i
c
j
len
c
n
prev
i
len
result
l
r
i
sum
list
dummyHead
p
q
curr
carry
x
y
sum
mid
lo
hi
t
used
i
t
i
negetiveSign
input
num
tem
isNegative
ans
divide
divisorAbs
temp
cnt
intMin
intMax
n
dp
len
i
j
k
maxOfTwoBars
areaFromTwo
maxWhenSorted
i
minInd
min
minIndex
index
i
n
i
j
pos
t
k
temp
i
j
starIdx
lastMatch
isMatch
rev
len
cnt
curr
prev
next
i
i
sums
i
num
rStart
rEnd
cStart
cEnd
spiral
k
k
k
k
list
head
zeroes
ones
i
j
k
n
sum
i
temp
j
k
temp
hm
ch
temp
x
y
i
max
left
right
n
ch
i
i
newStr
i
dp
friendCenter
friendRadius
lpsCenter
lpsRadius
i
mid
left
right
res
node
n
i
j
list
r
c
bigR
bigC
i
i
i
i
indexMap
i
requiredNum
aArray
bArray
sb
i
j
carry
sum
sb
m
c
x
i
div
sz
tmp
i
temp
i
j
temp
ans
subList
base
prev
temp
start
k
prev1
p
q
r
n
l
r
res
i
i
j
dummy
prev
curr
flagFoundDuplicate
n
result
i
j
tempTarget
low
high
curSum
tempList
b1
b2
sLen
maxDist
buf
i
index
len
i
ch
lo
hi
mid
i
i
temp
nn
res
sum
al
i
ans
mid
s2
t
i
i
temp
j
ans
arr
i
i
maxVal
total
result
i
root
q
level
size
res
i
cur
i
n
graph
i
sum
k
ans
sum
ans
mask
ans
n
i
temp
i
lengthOfT
indexOfT
indexOfS
position
i
max
tid
temp
arr
j
i
i
counts
ch
result
i
ch1
ans
i
a
b
dp
ans
n
i
left
right
max
sum
diff
adj
n
i
people
letters
len
i
adj
visited
i
comp
count
ans
i
q
ans
group
node
evenNums
oddNums
evenTar
oddTar
i
countPositiveIteration
countNegativeIteration
i
num
tar
diff
iteration
i
num
tar
diff
iteration
totalDifference
kelvin
fahrenheit
arr
res
n
nums
min
max
i
ans
i
totalViews
maxView
globalMaxView
i
currentView
lastIndex
res
old
newNumber
sum
bits
result
i
i
count
arr
ans
i
yes
no
count
i
i
min
res
i
sum
maxVal
res
i
n
j
ans
max
seg
ans
temp
start
end
mid
pivot
tempHeight
tempName
n
bucket
max
maxKey
totalBucket
cost
i
requiredBucket
lackBucket
i
ans
i
lcm
j
xor
counts
endTimes
id
res
count
i
n
i
id
min
i
n
g
pars
par
ord
dep
u
i
dp
i
cur
n
par
depth
q
r
p
cur
g
p
i
rowOne
colOne
m
n
i
c
j
i
c
i
j
total
running
count
totalReq
valUsed
minLimitReq
i
sb
idx
sb2
left
result
i
result
totalNodes
i
maxStarSum
i
sum
end
start
starts
ends
startMonth
endMonth
res
i
i
j
count
sum
i
j
max
i
i
index
i
i
max
sum
i
sum
i
ad
i
res
bitPosition
i
j
ans
i
a
b
mini
maxi
n
parent
maxElement
count
i
ans
a
b
n
x
s
y
index
i
i
b
j
n
leftMinHeap
rightMinHeap
res
i
i
left
right
i
i
m
n
x
i
i
t
j
j
pj
y
l
modulo
map
reminder
freq
maxCount
ans
idx
n
ans
arr
j
i
map
d2
s1
g1
i
d1
cur
n
cnt
i
gcd
j
res
i
word
cur
i
id
cur
localCt
i
id
ans
cnt
j
ans
left
right
i
trips
pairs
count
i
length
mod
powerTracker
productTakingPowers
result
index
left
right
product
i
index
i
power
max
temp
temp1
prev
curr
next
count
sum
res
stack1
stack2
tmp
i
i
n
r
r
i
d
res
cost
j
t
tj
l
tj
frequencyMap
mostFrequent
maxFrequency
cs
n
dp
i
i
sum
j
mod
p
j
n
c
next
i
stack
j
k
i
seen
sum
current
i
j
val
maxElement
prefixSum
ans
i
levels
map
max
n
i
q
node
height
level
lev
left
right
height
lev
set
ret
aStart
aEnd
bStart
bEnd
hours
minutes
isHours
i
q
count
size
al
node
swaps
sorted
i
ind
i
i
n
max
i
gap
i
j
sum
p
ans
list
min
max
set
l
r
m
n
res
i
j
sum
i
amount
result
i
left
right
curr
ans
ans
found
n
ans
mod
count
i
m
j
dp
ans
i
ans
i
n
vis
arr
distinct
sum
i
ans
i
yLen
xLen
secure
deque
nDeque
tmpDeque
queue
root
head
tail
qIdx
end
curY
curX
nextY
nextX
curID
nextID
y
x
start
stop
t
stringBuilder
n
nums
i
dp
sum1
sum2
i
j
i
i
count1
count2
count
limit
digit
nextIsZero
nextHasBound
isValid
i
cnt
i
j
prevNode
currNode
gcd
dp
pq
monoStack
i
score
popIndex
actualRightIndexOfPopedElement
peekIndex
actualLeftIndexOfCurrentElement
result
pair
val
index
times
power
primeCnt
i
j
subProblemRes
third
maxSum
maximumDigitToNumber
i
sum
maxDigit
nMod10
temp1
list1
current
carry
val
prev
nxt
current
n
min
hm
i
v
curr
i
xt
start
j
zx
i
nowr
now
xy
dy
x
