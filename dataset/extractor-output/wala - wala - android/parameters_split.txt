stack
klass
method
receiver
stack
klass
method
receiver
file
Name
filter
File
Name
policy
Class
Name
e
e
e
class
Name
klass
method
receiver
klass
method
receiver
exception
klass
method
receiver
loader
class
Name
class
Being
Redefined
protection
Domain
classfile
Buffer
e
inst
inv
w
w
w
args
ci
w
w
instruction
w
inv
w
type
w
e
w
o
o
size
t
args
ex
i
cr
m
w
iter
cr
m
w
iter
cp
w
i
ci
problem
loader
class
Name
class
Being
Redefined
protection
Domain
classfile
Buffer
e
e1
inst
args
ci
w
w
w
w
args
reader
flags
type
container
Type
m
UID
t
count
args
ex
ci
w
r
instruction
w
w
instruction
w
w
instruction
w
w
args
ci
w
args
ci
w
w
data
in
in
start
Var
Name
end
Var
Name
undefined
Allowed
e
e
e
in
var
Name
e
pc
start
index
pc
end
index
source
start
position
source
end
position
flags
e
e
e
pc
d
d
msg
c
c
start
end
r
data
in
e
pc
e
flags
priority
l
file
level
str
str
str
str
str
str
str
str
str
t
t
t
t
level
level
level
exc
level
str
level
str
out
level
str
str
level
msg
msg
position
line
column
p
data
in
d
e
d
s
instr
stack
instruction
stack
Size
instr
v
w
w
w
w
w
abstract
Def
Stacks
def
instruction
stack
Pointer
abstract
Use
Stacks
use
instruction
stack
Pointer
from
to
bits
from
to
bits
from
to
mb
ze
c
f
je
file
base
Directory
f
cha
f
pass
f
f
name
base
Directory
f
base
Directory
d
base
Directory
a
ex
args
input
Name
s
cl
cl
mods
s
class
Name
cf
name
mods
comment
buf
in
out
ze
new
Entry
type
type
o
types
v
index
index
index
index
index
index
index
index
index
index
index
index
index
index
index
index
index
index
opcode
index
type
index
o
v
is
Constructor
is
Static
class
Type
signature
instructions
handlers
instructions
To
Bytecodes
info
cp
h
v
v
v
v
v
c
c
c
c
name
type
c
name
sig
c
name
sig
b
name
type
is
Static
sig
instr
instruction
instruction
instruction
instruction
offset
v
offset
v
offset
v
i
n
stack
Words
stack
Len
i
stack
Len
stack
Words
visited
instr
Start
instr
Offset
target
Label
instr
Start
instr
Offset
target
Label
instr
Start
instr
Offset
target
Label
patches
instr
Start
instr
Offset
target
Label
patches
buf
start
Instruction
end
Instruction
start
Offset
far
Branches
initial
Stack
instruction
instruction
instruction
start
end
start
end
start
length
code
handlers
from
to
instruction
index
i
l
count
start
len
ret
Var
unread
Stack
untouched
Stack
start
len
ex
ex
name
signature
code
raw
Handlers
new
Bytecodes
To
Old
Bytecodes
max
Locals
max
Stack
is
Static
instructions
To
Offsets
a
b
code
raw
Handlers
cp
index
index
index
index
stack
stack
Ptr
t
sub
ret
Var
stack
Len
stack
Words
sub
v
addr
visited
sub
Addr
jsr
Addr
ret
To
Addr
sub
Addr
stack
Len
stack
Words
addr
sub
sub
index
stack
Len
stack
Words
i
stack
Len
stack
Words
index
stack
Len
stack
Words
ex
ex
s
i
s
i
i
addr
Map
i
num
Handlers
addr
Map
sub
call
Site
new
Code
Index
caller
Map
instruction
Index
instruction
Index
opcode
type
operator
o
types
v
opcode
cases
And
Labels
default
Label
cases
And
Labels
default
Label
target
Map
e
o
v
opcode
type
array
Bounds
Count
type
array
Bounds
Count
o
types
v
type
type
o
types
v
label
label
target
Map
e
o
v
opcode
entering
o
v
opcode
type
o
types
v
opcode
type
class
Type
field
Name
opcode
cp
index
cp
index
is
Static
type
class
Name
field
Name
is
Static
o
types
v
opcode
type
o
v
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
target
Map
popped
Types
To
Check
v
opcode
type
operator
o
types
v
opcode
type
class
Type
method
Name
type
class
Name
method
Name
mode
opcode
cp
index
cp
index
mode
o
types
v
opcode
label
type
operator
label
opcode
label
o
target
Map
e
v
opcode
type
o
v
info
info
info
new
Instructions
new
Handlers
new
Instruction
Map
info
info
info
instruction
instruction
count
info
new
Instructions
new
Handlers
new
Instruction
Map
info
count
info
type
info
info
instructions
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
info
new
Instructions
new
Handlers
new
Instruction
Map
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
info
size
delta
size
delta
delta
o
v
instructions
handlers
instructions
To
Bytecodes
data
prefix
w
w
opcode
type
class
Type
field
Name
opcode
cp
index
cp
index
is
Static
type
class
Name
field
Name
is
Static
o
v
o
v
s
s
index
s
i
type
c
c
t
t
c
t
c
type
e
this
Class
Type
type
this
Class
Type
type
t
t
t
t
s
s
params
result
c
name
e
c
name
e
name
param
Types
c
name
c
name
param
Types
c
name
param
Types
c
name
t
s
bytes
s
instructions
handlers
opcode
index
type
index
types
v
o
cl
cl
cl
cl
hierarchy
t1
t2
visited
hierarchy
t1
t2
hierarchy
t1
t2
visited
hierarchy
t1
t2
hierarchy
t1
t2
hierarchy
t
supers
hierarchy
t
supers
hierarchy
t
supers
hierarchy
t
matches
supers
hierarchy
t
supers
hierarchy
t
supers
hierarchy
t1
t2
hierarchy
t1
t2
is
Constructor
is
Static
class
Type
signature
instructions
handlers
inst
To
BC
vars
h
from
to
t
t1
t2
type
t1
t2
from
reachable
follow
Handlers
mask
from
from
reachable
follow
Handlers
mask
from
follow
Handlers
mask
to
reaching
mask
to
reaching
mask
to
reaching
mask
to
mask
to
stack
Sizes
i
size
offset
reason
path
path
w
index
stack
locals
a
len
i
cur
Stack
cur
Stack
Size
cur
Locals
cur
Locals
Size
path
type
i
cur
Stack
cur
Stack
Size
path
i
cur
Locals
cur
Locals
Size
type
i
visitor
make
Types
At
path
instruction
instruction
instruction
v
make
Types
At
want
Path
index
path
cur
Stack
cur
Locals
info
info
inst
To
BC
vars
info
is
Interface
is
Final
super
Class
super
Interfaces
cl
cl
is
Interface
is
Final
super
Class
super
Interfaces
cl
cl
cl
cl
cl
offset
path
cur
Stack
cur
Locals
i
t
i
t
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
is
Constructor
is
Static
class
Type
signature
instructions
handlers
inst
To
BC
vars
info
info
inst
To
BC
vars
opcode
bootstrap
method
Name
method
Type
types
v
opcode
cp
index
cl
class
Loader
descriptor
cp
index
mode
opcode
type
o
types
v
access
class
Type
name
signature
instructions
access
class
Type
name
signature
instructions
handlers
instructions
To
Bytecodes
d
access
class
Type
name
signature
info
new
Instructions
new
Handlers
new
Instruction
Map
key
key
value
instructions
handlers
new
Instruction
Map
instructions
To
Bytecodes
next
catch
Class
label
patch
info
instructions
handlers
instructions
To
Bytecodes
state
state
h1
h2
num
Labels
label
i
i
handlers
i
instrs
instrs
handlers
next
w
p
i
p
i
p
e
i
p
i
catch
Class
p
e
catch
Class
p
p
hp
v
e
i
p
p
p
catch
Class
p
opcode
type
operator
o
types
v
opcode
target
Map
popped
Types
To
Check
v
size
size
o
v
handler
catch
Class
catch
Class
Loader
handler
catch
Class
h
o
o
types
v
opcode
from
Type
to
Type
a
b
types
o
v
bootstrap
Method
name
type
obj
type
Name
obj
opcode
opcode
value
i
opcode
cp
index
opcode
value
v
opcode
cp
index
opcode
value
v
opcode
cp
index
opcode
value
v
opcode
cp
index
opcode
value
v
opcode
cp
index
opcode
type
Name
v
opcode
cp
index
opcode
descriptor
opcode
cp
index
opcode
value
opcode
cp
index
opcode
value
opcode
cp
index
type
constant
e
i
l
f
d
s
s
cp
index
o
types
v
o
rethrow
is
Rethrow
o
v
r
w
b
b
b
off
len
r
e
e1
e2
args
e
e
e
args
ci
w
w
w
args
cr
w
e
e
args
ci
w
resource
w
args
args
ci
attrs
ci
w
args
cl
attrs
image
cr
w
b
b
args
bytes
pos
len
pad
To
bytes
pos
len
cr
index
flags
e
cr
attrs
r
cp
i
string
cr
input
Name
bytes
cha
offset
input
Name
cr
cha
data
i
e
i
name
sig
access
ex
me
i
i
i
i
md
w
w
ex
w
output
w
old
Code
output
w
old
Code
output
m
w
old
Code
output
md
e
input
Name
s
e
cl
e
cl
mods
s
out
code
out
e
r
r
cpr
s
cr
cp
index
e
index
index
index
index
index
e
index
e
index
e
index
e
index
e
index
e
index
e
index
e
index
e
index
e
index
e
index
e
index
e
store
cr
md
class
Writer
raw
Lines
cw
md
v
v
v
v
v
c
c
c
b
name
type
s
cw
md
c
name
type
c
name
sig
c
name
sig
is
Static
sig
writer
frames
writer
frames
writer
method
output
cha
vars
writer
method
output
cha
vars
reuse
Frames
sm
new
Bytecodes
To
Old
Bytecodes
w
sm
new
Bytecodes
To
Old
Bytecodes
type
s
v
s
v
s
v
types
type
types
locals
inst
index
method
output
cha
vars
reuse
Frames
buf
offset
iter
label
offset
val
obj
enum
Type
enum
Val
vals
begin
type
element
Values
offset
name
type
iter
e
major
minor
s
type
o
type
c
n
t
o
type
kind
c
n
t
o
n
t
o
b
n
t
o
cp
cache
Entries
force
o
size
s
i
f
l
d
s
type
c
s
s
s
c
n
t
c
n
t
c
n
t
n
t
b
n
t
f
c
c
ifaces
c
c
ifaces
buf
offset
buf
offset
len
dest
dest
Offset
e
e
access
name
type
attributes
access
name
type
attributes
access
name
type
attributes
buf
offset
access
name
type
attributes
access
name
type
attributes
attribute
size
e
buf
offset
v
e
buf
offset
v
e
buf
offset
v
buf
offset
v
buf
offset
v
buf
offset
v
e
attr
expected
Name
offset
len
offset
len
offset
iter
code
iter
iter
iter
label
exception
Reader
code
Reader
signature
Reader
location
iter
label
signature
Reader
iter
label
exception
Reader
signature
Reader
iter
label
iter
label
code
Reader
begin
begin
target
info
value
target
type
target
info
location
target
Info
visitor
target
target
target
target
target
target
target
target
target
target
type
parameter
index
visitor
super
Type
visitor
type
parameter
index
bound
index
bound
Signature
visitor
visitor
index
visitor
throw
Type
visitor
start
pc
length
index
range
range
range
visitor
raw
Handler
catch
Type
visitor
offset
visitor
offset
type
argument
index
visitor
type
path
kind
value
annotation
Target
annotation
Attribute
type
Path
target
Type
name
type
iter
signature
Reader
type
iter
exception
Reader
signature
Reader
type
iter
type
iter
codereader
type
iter
new
Reader
e
iter
code
iter
s
writer
code
s
writer
type
s
writer
cr
type
Index
type
s
writer
frame
new
Offset
frame
Type
offset
local
Types
stack
Types
out
writer
w
table
buf
offset
var
Map
output
e
bytes
offset
required
offset
count
offset
count
offset
count
addr
ex
i
i
i
i
i
i
i
i
f
f
addr
ex
f
f
f
f
cr
offset
f
iter
f
f
m
m
m
m
m
m
m
m
m
iter
iter
iter
w
w
v
w
v
w
v
w
v
w
v
buf
offset
value
value
value
value
value
index
kind
class
Name
element
Name
descriptor
obj
bytes
offset
item
Count
offset
required
i
i
ex
i
ex
i
ex
b
i
ex
i
ex
i
ex
i
ex
i
ex
i
ex
i
ex
i
ex
i
ex
i
i
i
i
i
ex
i
ex
i
ex
item
offset
i
offset
item
Count
i
i
i
i
i
i
offset
s
iter
s
s
w
buf
offset
exceptions
cl
i
i
i
attr
i
i
cl
i
e
i
iter
w
buf
offset
code
exn
Handlers
max
Locals
max
Stack
attributes
w
buf
offset
classes
iter
cur
Vector
var
Index
name
Index
type
Index
code
w
buf
offset
source
Debug
source
Debug
e
w
table
buf
offset
new
Line
Map
iter
iter
w
buf
offset
index
attr
first
Line
last
Line
first
Col
last
Col
p
method
Nr
code
code
cr
raw
Offset
raw
Size
pos
r
line
Number
Map
args
loader
scope
file
Name
e
e
apk
Name
exclusions
loader
cha
e
apk
File
Name
out
Dir
cg
caller
Ref
callee
Ref
zip
In
out
File
Name
e
java
Scope
jar
File
e
type
name
sig
cg
uncalled
test
Parameters
string
empty
android
Libs
android
Java
Jar
filter
droid
Bench
Root
android
Libs
android
Java
Jar
filter
android
Libs
android
Java
Jar
apk
File
uncalled
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
test
Parameters
android
Libs
main
Class
java
Scope
File
file
scope
File
main
Class
from
to
user
Only
main
Class
java
Scope
File
java
android
e
android
android
Methods
java
Methods
java
Extra
Edges
cg
filter
map
cg
java
Jar
Path
main
Class
options
cache
node
android
Libs
android
API
Jar
apk
File
Name
monitor
policy
android
Libs
android
API
Jar
dex
File
Name
android
Libs
android
API
Jar
main
Class
Name
dex
File
Name
args
e
task
total
Work
sub
Task
units
e
cha
parent
cha
caller
site
callee
actual
Parameters
caller
site
parent
a
Ctx
T
name
obj
declaring
Class
target
Accuracy
component
Type
relevant
Parameters
declaring
Class
target
Accuracy
component
Type
relevant
Parameters
flags
component
m
Ref
m
Ref
m
Sel
cha
intent
key
key
action
key
action
key
key
key
intent
key
key
action
key
action
is
Explicit
key
key
key
action
is
Explicit
intent
action
is
Explicit
key
action
Key
is
Explicit
action
action
action
uri
action
uri
action
action
action
intent
intent
intent
intent
strict
strict
strict
other
o
other
cha
options
cache
intent
method
ctx
node
node
e
e
node
node
node
node
node
node
node
node
klass
node
node
intent
parent
intent
name
obj
instruction
Factory
pm
body
main
Thread
main
Thread
ep
cha
options
cache
target
model
name
entrypoints
i
entrypoints
ep
cha
options
cache
target
model
name
entrypoints
i
entrypoints
caller
cha
options
cache
synthetic
Methods
child
parent
child
caller
site
receiver
ep
cha
options
cache
target
model
name
entrypoints
i
entrypoints
cha
as
Method
flags
caller
instruction
Factory
acc
pm
redirect
self
info
activities
application
thread
context
i
Binder
Token
intent
android
Context
i
Binder
all
Activities
intent
all
Activities
result
Codes
result
Data
all
Activities
from
cha
cha
selector
selector
model
method
name
name
type
ep
cha
options
cache
target
model
cha
options
cache
name
name
entrypoints
i
model
ep
entrypoints
as
Method
caller
info
caller
Nd
e
type
as
Parameter
To
in
Call
with
Name
param
in
Call
To
with
Name
type
as
Parameter
To
in
Call
with
Name
number
name
type
m
Ref
descriptor
Offset
instance
Behavior
for
Model
entrypoints
in
Call
To
param
No
type
in
Call
To
param
in
Call
To
e
return
Type
pm
body
instruction
Factory
pm
cha
scope
analysis
Scope
parent
T
as
Managed
key
seen
T
as
Managed
key
seen
current
Depth
T
T
key
T
key
type
behaviour
m
Ref
is
Static
acc
type
ssa
Value
set
By
type
ssa
Value
val
type
ssa
Value
set
By
type
type
type
type
type
type
with
Super
type
type
type
type
does
Loop
type
type
behaviour
exactness
cache
From
base
base
base
o
cha
default
Behavior
type
as
Parameter
To
in
Call
with
Name
type
as
Parameter
To
in
Call
with
Name
type
beh
exactness
pack
beh
exactness
type
stream
stream
behaviour
exactness
cache
From
base
base
base
pack
o
cha
type
as
Parameter
To
in
Call
with
Name
type
as
Parameter
To
in
Call
with
Name
type
stream
stream
body
instruction
Factory
pm
cha
scope
analysis
Scope
cls
T
as
Managed
key
seen
instance
val
self
ctor
ctor
Params
val
overrides
T
T
seen
T
T
type
body
instruction
Factory
pm
cha
scope
analysis
Scope
body
instruction
Factory
pm
cha
scope
analysis
Scope
max
Depth
cls
T
as
Managed
key
seen
T
as
Managed
key
seen
current
Depth
instance
val
self
ctor
ctor
Params
val
overrides
current
Depth
T
T
seen
T
type
ep
cha
options
cache
for
Compo
model
ep
cha
options
cache
target
model
body
insts
param
Manager
entry
Points
PC
PC
PC
body
insts
param
Manager
entry
Points
PC
PC
start
end
body
insts
param
Manager
entry
Points
order
PC
PC
PC
PC
PC
PC
PC
PC
PC
section
PC
PC
body
insts
param
Manager
entry
Points
PC
PC
PC
PC
PC
PC
PC
PC
PC
body
insts
param
Manager
entry
Points
PC
PC
p
method
cha
in
Component
p
method
cha
o
method
cha
in
Component
o
method
cha
compo
klass
a
b
o
val
label
after
before
after
before
after
before
after
before
after
before
after
before
after
after
after
before
before
o
o
method
cha
method
cha
method
i
xml
File
e
xml
File
e
xml
tag
Name
allowed
Sub
Tags
relevant
item
e
e
attr
tag
attr
Name
tag
self
sax
Attrs
e
e
sax
Attrs
uri
name
q
Name
attrs
uri
local
Name
q
Name
action
action
action
uri
o
action
action
action
uri
o
action
action
action
uri
o
action
action
action
uri
o
action
action
action
uri
o
pack
name
uri
fully
Qualified
Action
uri
fully
Qualified
Action
compo
flat
Components
cha
instantiation
monitor
do
Boot
Sequence
body
insts
param
Manager
entry
Points
e
abstract
Android
Model
pack
intent
intent
from
to
overrides
from
to
intent
clazz
from
intent
allow
manager
cha
skip
flags
cha
bases
eps
cha
e
method
cha
eps
cha
method
cls
cls
n
o
n
o
o
a
b
eps
possible
Entry
Points
possible
Entry
Points
possible
Entry
Points
possible
Entry
Points
possible
Entry
Points
possible
Entry
Points
possible
Entry
Points
type
pretty
Name
type
pretty
Name
T
cha
type
type
type
type
cha
method
cha
code
File
Name
exclusions
loader
code
File
Name
api
Level
exclusions
loader
e
class
Path
scope
loader
e
e
method
context
o
index
start
Index
last
e
pei
b
b
o
index
T
T
cache
node
node
klass
node
node
node
node
node
node
node
node
n
cdefitems
container
obj
as
clr
ea
clr
clr
v
ref
type
clr
field
Type
method
C

method
C
options
instruction
Index
method
encoded
Field
klass
loader
cha
dex
Entry
obj
types
runtime
Invisible
runtime
Invisible
m
set
m
m
loader
parent
exclusions
cha
modules
s
t
M
module
Entries
class
Name
class
Name
class
Name
class
Name
value
value
value
value
encoded
Method
klass
bc
Index
local
Number
index
bc
Index
obj
i
e
pc
op
method
visitor
inst
wala
Instructions
inst
Counter
inst
Loc
cname
mname
pname
args
opcode
index
bytecodeindex
instruction
Index
instruction
Index
instruction
Index
instruction
Index
param
Num
runtime
Invisible
e
c
o
c
o
o
o
c
c
a
pc
index
id
pc
f
f
api
Level
f
f
f
f
api
Level
e
f
entry
api
Level
e
f
entry
type
is
Int
Zero
Constant
type
size
ir
do
Primitives
ir
do
Primitives
value
Number
instruction

lhs

rhs
types
o
class
Path
exclusions
File
pc
destination
opcode
method
visitor
pc
type
object
opcode
method
visitor
pc
array
offset
type
op
method
visitor
inst
inst
Loc
offset
opcode
method
inst
Loc
offset
op
oper1
opcode
method
inst
Loc
offset
op
oper1
oper2
opcode
method
visitor
pc
destination
new
Site
Ref
sizes
opcode
method
visitor
pc
op
destination
oper1
oper2
opcode
method
visitor
pc
op
destination
oper1
oper2
opcode
method
visitor
pc
opcode
method
pc
opcode
method
pc
source
primitive
opcode
method
pc
source1
source2
opcode
method
visitor
inst
Loc
destination
source
op
method
visitor
pc
source
clazz
Name
field
Name
field
Type
opcode
method
pc
source
instance
clazz
Name
field
Name
field
Type
opcode
method
pc
source
clazz
Name
field
Name
field
Type
opcode
method
visitor
pc
destination
new
Site
Ref
opcode
method
visitor
pc
destination
array
offset
type
op
method
visitor
type
pc
destination
type
source
opcode
method
visitor
pc
op
destination
source
opcode
method
visitor
inst
default
Offset
pc
destination
new
Site
Ref
my
Type
sizes
args
opcode
method
visitor
inst
Loc
reg
A
table
Address
Offset
opcode
method
pad
visitor
pc
destination
clazz
Name
field
Name
field
Type
opcode
method
pc
destination
instance
clazz
Name
field
Name
field
Type
opcode
method
pc
destination
clazz
Name
field
Name
field
Type
opcode
method
visitor
pc
value
destination
opcode
method
pc
destination
opcode
method
pc
value
destination
opcode
method
pc
value
destination
opcode
method
pc
value
destination
opcode
method
visitor
inst
Loc
clazz
Name
method
Name
descriptor
args
opcode
method
inst
Loc
clazz
Name
method
Name
descriptor
args
opcode
method
inst
Loc
clazz
Name
method
Name
descriptor
args
opcode
method
inst
Loc
clazz
Name
method
Name
descriptor
args
opcode
method
inst
Loc
clazz
Name
method
Name
descriptor
args
opcode
method
inst
Loc
clazz
Name
method
Name
descriptor
args
opcode
method
visitor
instruction
instruction
instruction
instruction
instruction
binary
Literal
Operation
instruction
check
Cast
instruction
instruction
inst
instruction
instruction
instruction
instruction
new
Array
new
Array
Filled
instruction
return1
instruction
instruction
instruction
pc
op
method
visitor
pc
enter
object
opcode
method
visitor
pc
source
array
offset
type
op
method
visitor
inst
default
Offset
pc
throwable
opcode
method
visitor
G
meeter
flow
node
lhs
rhs
o
from
to
lhs
rhs
o
n
IN
from
to
size
e
bb
meeter
lhs
rhs
o
n
rhs
bb
lhs
rhs
bb
meeter
lhs
rhs
bb
meeter
lhs
rhs
bb
meeter
operands
operands
bb
i
j
i
from
to
val
other
exit
entry
basic
Block
entry
from
to
cfg
v
ev
entry
basic
Block
entry
from
to
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
method
cfg
scfg
instructions
symbol
Table
build
Local
Map
pi
Node
Policy
method
cfg
scfg
instructions
symbol
Table
build
Local
Map
pi
Node
Policy
cfg
dex
CFG
n
rhs
bb
rhs
dex
CFG
instructions
cfg
pi
Node
Policy
s
cfg
instruction
instruction
instruction
instruction
instruction
instruction
e
dest
result
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
pi
Cause
ref
call
cond
vn
instruction
instruction
e
dex
Cfg
n
Instructions
n
Blocks
max
Locals
pc
local
Number
value
Number
builder
index
vn
e
pc
vn
x
y
lhs
rhs
o
other
B
other
other
b
b
i
instances
other
filter
other
filter
statement
statement
s
v
v
v
v
v
v
i
v
lhs
rhs
o
other
B
other
other
b
b
i
obj
cell
lhs
rhs
o
o
lhs
operator
rhs
lhs
rhs
o
obj
order
Number
b
other
other
other
b
obj
lhs
rhs
lhs
rhs
lhs
rhs
monitor
expected
Out
lhs
rhs
lhs
cell
lhs
operator
lhs
operator
op1
op2
lhs
operator
op1
op2
op3
lhs
operator
rhs
size
o
eq1
eq2
eq
cell
lhs
o
lhs
operator
size
monitor
string
wrap
s
s
v
lhs
operator
to
Work
List
eager
to
Work
List
eager
s
lhs
operator
rhs
to
Work
List
eager
lhs
operator
op1
op2
op3
lhs
operator
op1
op2
lhs
operator
rhs
lhs
operator
size
lhs
operator
op1
op2
to
Work
List
eager
lhs
operator
op1
op2
op3
to
Work
List
eager
lhs
operator
rhs
to
Work
List
eager
s
code
code
code
i
i
d
expected
Out
obj
s
statement
s
s
s
v
number
e
v
v
n
v
v
n
n
s
v
other
it
o1
o2
cutoff
key
value
key
key
value
key
t
t
size
arg0
arg1
o
e
arg0
it
xtra
it
xtra
s
size
arg0
it
o
it
iterator
cls
elts
elts
start
x
x
value
capacity
fst
snd
x
y
o
o
x
y
o
item
initial
Size
expansion
x
x
value
capacity
x
array
n
e
o
o
o
M
key
M
key
M
key
M
key
M
key
M
key
factory
M
key
m
m
m
i
delegate
elts
elts
start
elts
start
last
obj
n
check
Dupes
other
other
o
other
obj
other
visitor
i
obj
ind
e
other
i
i
i
f
f
i
f
i
o
elt1
elt2
initial
Capacity
elt
index
index
index
min
index
elt
index
i
f
S
o
key
key
val
key
val
key
key
vals
key
A
B
x
page
x
x
value
x
page
page
element
collection
element
element
elements
i
i
arg0
arg0
arg0
arg0
arg0
arg0
arg0
a
o
x
x
value
A
B
i
delegate
index
element
index
c
index
o
o
index
index
index
element
from
Index
to
Index
iter
iter
element
elements
element
i
f
create
key
key
val
key
val
key
key
key
vals
outer
outer
thrown
c
klass
c
p
c
p
c
p
c
v
src
List
f
src
Set
f
data
new
Size
obj
perm
e
fully
qualified
name
s1
s2
type
Str
val
vals
e
proposed
Size
entries
o
entry
size
tmp
Entries
i
e
entry
other
other
other
t
size
t
size
s
obj
it
xtra1
xtra2
key
val
key
vals
create
key
create
a
b
o
i
e
i
e
key
value
key
key
value
key
t
slot
slot
slot
problem
slot
s
cause
string
t
column
value
t
attribute
column
value
t
column
P
t
column
value
t
column
value
t
columns
row
column
e
i
row
p
p
b
length
t
columns
file
Name
comment
f
comment
s
comment
Token
s
comment
Token
delimiter
reader
comment
Token
line
comment
Token
row
line
delimiter
line
delimiter
input
klass
Name
klass
klass
Name
klass
x
x
n
n
hi
lo
n
n
n
n
s
cause
string
task
total
Work
units
sub
Task
g
p
g
p
n
n
n
n
n
n
N
src
dst
src
dst
node
node
node
src
dst
n
for
Edge
G
fmember
n
N
n
inst
fconnected
N
N
N
N
N
N
src
dst
src
dst
node
src
dst
node
node
n
for
Edge
N
number
s
G
default
Value
size
value
x
p
obj
G
root
node
G
root
node
G
root
G
root
node
master
node
node
N
N
N
N
src
dst
src
dst
node
node
node
src
dst
from
to
node
node
node1
node2
node
node
node
node
addend
node
node
dominator
node
node
parent
node
node
ancestor
node
node
label
node
node
size
node
node
child
node
node
semi
G
root
n
node
master
node
number
n
n
g
filter
n
monitor
n
from
to
value
value
i
i
i
tree
G
G
G
G
e
msg
i1
i2
s
string
c
n
G
nodes
n
G
N
G
nodes
G
G
nodes
N
n
G
N
G
nodes
G
n
v
iterator
G
N
f
G
src
target
G
src
targets
G
sources
target
G
nodes
f
node
history
n
G
N
k
G
nodes
k
G
nodes
N
n
G
C
filter
n
G
C
G
G
n
order
o1
o2
G
G
roots
G
N
G
G
ie
G
G
nodes
full
Coloring
G
colors
num
Colors
G
colors
full
Coloring
colors
num
Colors
G
G
G
max
Colors
G
order
max
Colors
from
to
from
to
g
i
j
k
G
G
i
j
k
e
from
to
G
i
j
k
e
from
to
G
N
G
nodes
G
n
v
iterator
graph
G
N
G
nodes
G
n
v
iterator
G
nodes
f
G
N
f
n
n
v
iterator
G
N
G
nodes
G
n
v
iterator
G
nodes
n
v
iterator
elt
n
nodes
N
n
v
iterator
n
from
to
elt
G
N
f
G
nodes
f
n
v
iterator
n
elt
node
node
entity
entity
from
to
G
types
graph
Id
node
Ids
node
Properties
g
node
i
i
src
dst
G
root
G
root
result
root
G
visited
onstack
result
root
G
p
G
root
G
root
src
sink
max
n
n
N
original
N
N
N
N
src
dst
src
dst
src
dst
node
node
node
node
node
N
number
e
n
number
n
n
s
src
dst
i
src
dst
n
N
N
N
N
N
src
dst
node
src
dst
node
n
N
node
node
i
original
first
original
n
n
n
n
src
dst
src
dst
node
node
node
src
dst
delegate
src
dst
n
N
N
N
N
N
src
dst
node
src
dst
node
n
N
node
node
extra
n
n
n
n
src
dst
src
dst
node
node
node
src
dst
node
node
original
n
n
n
N
number
s
n
n
node
n
N
node
src
dst
src
dst
node
node
node
src
dst
n
i
G
G
normal
Out
Count
g
g
into
G
original
N
N
N
N
src
dst
src
dst
src
dst
node
node
node
obj
number
n
n
N
s
node
Manager
delegate
N
node
N
N
N
src
dst
src
dst
node
node
node
src
dst
node
i
nodes
edges
i
nodes
edges
G
G
eq
Number
eq
Number
eq
Number
eq
Number
node
Manager
node
Manager
normal
Case
delegate
Impl
N
N
N
number
node
node
N
number
src
dst
src
dst
node
node
src
dst
node
node
n
n
n
n
src
dst
src
dst
node
node
node
src
dst
s
node
Manager
normal
Case
node
Manager
edge
Manager
n
n
n
delegate
ignore
Edges
node
Numbers
N
N
N
N
src
dst
node
node
s
node
src
dst
node
src
dst
node
node
g
src
dst
label
N
N
label
N
label
N
N
label
N
label
src
dst
label
src
dst
label
src
dst
g
g
into
default
Label
src
dst
label
N
N
label
N
label
N
N
label
N
label
node
label
node
label
src
dst
label
src
dst
label
src
dst
from
to
label
src
dst
label
N
label
N
label
N
label
N
label
src
dst
label
node
src
dst
label
node
node
node
Manager
default
Label
node
Manager
N
N
src
dst
src
dst
N
N
N
N
src
dst
src
dst
node
label
node
label
node
node
N
label
N
pred
N
N
label
N
label
N
N
label
src
dst
label
src
dst
label
src
dst
label
src
dst
node
label
node
label
n
n
n
N
src
dst
src
dst
node
node
node
src
dst
n
n
n
n
n
src
dst
src
dst
src
dst
node
node
node
N
n
n
for
Edge
from
to
n
number
N
s
node
node
msg
cause
msg
task
total
Work
sub
Task
units
monitor
task
total
Work
monitor
monitor
units
progress
Monitor
progress
Monitor
sub
Task
progress
Monitor
progress
file
Name
input
F
input
F
F
args
string
x
args
e
in
args
dir
regex
recurse
directory
recurse
p
src
File
Name
dest
File
Name
directory
f
file
Name
s
f
content
action
filter
top
suffix
out
Type
g
labels
dot
File
output
File
dot
Exe
g
labels
title
dot
File
output
File
dot
Exe
dot
Exe
output
File
dot
File
e1
e
e
e
e
g
labels
title
dotfile
e
g
labels
title
labels
result
dot
Nodes
labels
result
n
g
n
d
n
d
n
d
font
Size
n
new
Psfile
new
Gv
Exe
e
process
name
just
Base
e
module
Name
b
string
b
string
o
s
msg
reset
msg
x
y
x
x
x
x
y
x
x
y
sparse
Part
sparse
Part
dense
Part
set
i
set
that
that
action
X
action
that
that
set
i
set
i
i
set
other
filter
B
A
B
size
backing
Array
S
S
S
i
x
x
idx
that
that
that
A
B
A
B
str
i
i
j
that
that
action
X
action
s
j
that
set
set
set
bit
bit
bit
other
other
other
other
other
other
other
bit
Index
e
i
start
set
e
initial
x
set
A
B
A
B
factory
A
B
factory
A
B
data
key
low
high
default
Int
Set
Factory
s
j
s
set
set
i
i
set
other
filter
default
Value
x
x
value
capacity
x
set
V
W
set
other
filter
i
i
set
i
that
that
action
X
action
B
initial
Size
expansion
Factor
x
that
that
that
that
that
set
string
x
offset1
offset2
new
Offset
new
Capacity
new
Offset
new
Capacity
offset
nbits
s
fraction
bit
e
bit
bit
start
obj
set
set
other
set
set
set
set
set
s
b1
b2
b1
b2
b1
b2
default
Value
initial
Size
default
Value
default
Value
initial
Size
size
x
x
value
value
index
index
value
capacity
value
default
Value
initial
Size
expansion
i
set
that
that
that
action
X
action
x
y
obj
x
y
default
Value
x
x
page
page
x
x
value
page
default
Value
default
Value
initial
Size
x
x
value
capacity
number
number
set
string
x
x
x
value
nbits
new
Capacity
s
bit
e
bit
bit
s
set
b1
b2
set
set
set
b1
b2
b1
b2
set
other
B
other
vector
obj
b1
b2
set
initial
Capacity
set
backing
Store
initial
Capacity
value
value
that
set
set
set
that
that
that
Size
p
s
i
i
i
set
that
that
that
that
set
set
set
other
filter
action
X
action
set
string
x
set
s
s
s
i
that
that
that
action
X
action
X
action
X
action
that
that
that
that
that
that
set
set
set
set
set
i
i
set
set
a
b
set
other
filter
other
filter
other
filter
other
filter
p
s
set
string
x
x
x
set
string
x
default
Value
x
x
value
capacity
x
n
o
o
o
value
implementation
vector
Impl
x
y
x
x
x
x
x
x
x
y
x
x
y
set
string
x
S
mapping
that
A
B
a
b
A
B
object
instances
c
m
bit
Index
nbits
s
bit
e
bit
e
bit
e
s
set
b1
b2
set
b1
b2
set
other
set
obj
e
set
string
x
initial
Size
expansion
set
string
x
e
set
A
B
A
B
factory
A
B
factory
A
B
data
key
low
high
default
Long
Set
Factory
s
j
i
set
that
that
action
X
action
that
that
i
set
that
that
action
X
action
that
that
array
n
e
o
o
o
i
n
a
b
i
o
set
string
x
set
backing
Store
initial
Capacity
value
value
that
i
set
set
set
that
that
that
Size
v
v
set
other
filter
A
B
set
initial
Capacity
map
B
B
B
B
o
o
o
other
other
other
other
delegate
offset
delegate
offset
offset
o
o
n
o
v
S
set
set
set
i
i
set
that
that
action
X
action
X
action
X
action
action
starting
Index
word
i
n
that
that
that
set
set
set
other
filter
other
set
set
i
i
set
size
x
y
size
x
x
size
backing
Array
S
S
S
i
x
x
idx
that
that
that
A
B
str
i
i
j
that
action
X
action
s
j
that
set
set
value
value
value
value
value
value
val
bits
value
program
Args
main
Class
classpath
Entries
logger
program
Args
main
Class
inherit
Classpath
classpath
Entries
capture
Output
capture
Err
logger
program
Args
main
Class
inherit
Classpath
xtra
Classpath
capture
Output
capture
Err
logger
java
Exe
s
e
s
enable
Assertions
arg
capture
Output
capture
Err
logger
new
Cmd
e
e
logger
capture
Output
capture
Err
logger
new
Working
Dir
new
Env
cmd
cmd
ev
p
p
p
p
p
e1
e
e
capture
s
p
e
s
p
e
s
b
e
s
b
e
new
Output
new
Err
input
e
trace
Statics
c
trace
Statics
args
t
root
Dir
f
classpath
o
o
c
root
result
objects
Visited
root
instance
result
objects
Visited
root
result
objects
Visited
root
array
container
result
objects
Visited
root
scalar
container
result
objects
Visited
c
root
f
scalar
container
objects
Visited
result
e
c
c
field
trace
Statics
e
instances
trace
Statics
e
key
o
o1
o2
root
root
predecessor
contents
o1
o2
lhs
rhs
o
node
src
dst
problem
n
IN
src
dst
node
node
key
src
dst
i
all
Vars
var
Map
n1
n2
i
i
i
i
to
Work
List
eager
G
functions
uf
uf
G
functions
uf
v
lhs
rhs
o
problem
n
IN
src
dst
size
mask
lhs
rhs
o
v
lhs
rhs
o
lhs
rhs
o
problem
n
IN
src
dst
size
o
lhs
rhs
o
lhs
rhs
kill
gen
lhs
rhs
o
flow
Graph
transfer
Function
Provider
lattice
Values
lhs
rhs
o
lhs
rhs
o
v
lhs
rhs
o
flow
Graph
transfer
Function
Provider
lhs
rhs
o
c
lhs
rhs
o
i
e
i
e
i
e
i
e
e
a
i
i
i
args
args
args
o
o2
o
o2
o
o2
args
o
b
b
v
v
v
args
o
field1
field2
x
args
e
args
t1
t2
args
args
args
args
args
s
i
s
i
s
i
s
i
a
b
e
x
o
args
args
name
args
args
i
args
x
x
o
args
args
x
x
args
x
x
o
args
args
x
state
x
x
args
e
args
message
x
o
args
f
o
args
o
args
o
args
o
args
args
i
i
args
w
o
args
x
y
a
o
o
args
o
args
argv
x
i
i
args
i
args
i
j
o
args
args
z
x
x
args
o
args
e
args
o
args
args
o
args
args
x
args
input
input
value
args
o
o
o
c
c
c
c
a
args
args
args
clazz
args
args
args
args
args
args
args
args
args
args
args
args
args
e
args
args
args
args
x
a
a
b
a
b
c
a
b
a
b
a
b
x
x
args
args
args
args
args
i
args
x
other
i
x
other
f
x
other
x
i
args
other
i
other
f
other
x
args
o
args
multi
args
i
i
arr
arr
a
b
src
dst
a
b
arr
from
Index
to
Index
arr
arr
i
arr
arr
arr
left
right
i
i
arr
arr
arr
arr
i
arr
i
arr
arr
condition
arr
arr
arr1
arr2
i
arr
arr
index
arr
index
arr
index
args
a
foo
e
args
args
o
args
p1
p2
b
o1
o2
b
p1
p2
b
x
args
args
args
o
args
o
ind
f
args
object
args
args
args
args
args
args
args
args
args
args
e
o
args
args
args
args
args
args
o
args
args
args
args
args
o
o
object
object2
key1
type
o
o
c1
o
args
args
o
args
a1
a2
a3
args
n
c
x
x
l
r
x
v
l
r
x
v
l
r
x
l
r
args
i
i
i
args
args
s
args
a
a
args
i1
i2
arg
arg
arg
args
args
unknown
b1
b2
unknown
b1
b2
unknown
b1
b2
unknown
b1
b2
unknown
b1
b2
b4
unknown
b1
unknown
b1
unknown
b1
unknown
b1
args
unknown
b1
b2
unknown
b1
b2
unknown
b1
b2
unknown
b1
b2
unknown
b1
b2
b4
unknown
b1
unknown
b1
unknown
b1
unknown
b1
args
args
args
x
x
e
args
args
x
x
args
t
e
argv
cha
check
Runtime
Retention
Only
check
Runtime
Retention
Only
expected
actual
type
Under
Test
expected
Runtime
Invisible
Annotations
expected
Runtime
Visible
Annotations
type
Ref
selector
test
Jar
Location
main
Class
exclusions
File
static
CG
caller
callee
callee
Class
callee
Method
static
CG
static
CG
filter
static
CG
static
CG
filter
static
CG
test
filter
ssa
Options
test
Class
elt
args
args
application
Jar
Files
application
Main
Class
cha
options
cache
f
result
e
args
args
args
e1
e
e
e
args
args
e
scope
n
node
cfg
block
normal
Succ
cfg
normal
Succ
original
filtered
softly
softly
node
analysis
softly
node
analysis
softly
annotation
path
type
Under
Test
expected
Runtime
Invisible
Annotations
expected
Runtime
Visible
Annotations
method
Ref
Under
Test
expected
Runtime
Invisible
Annotations
expected
Runtime
Visible
Annotations
field
Name
Str
type
Under
Test
expected
Annotations
args
e
e
cha
args
method
Sig
e
e
e
cfg
assertions
cha
args
method
e
e1
iterator
instructions
args
e
args
e
args
e
e
tmp
Dir
w
w
signature
index
type
instructions
type
signature
test
Jar
Location
main
Class
exclusions
File
args
e
args
p
s
args
scope
cg
nodes
jar
File
args
cha
pkg
cha
options
cache
cha
options
cache
cha
test
PA
To
String
e1
cg
e
cg
super
CG
this
Algorithm
e1
name
cg
N
N
N
N
N
n
n
src
dst
src
dst
node
N
node
node
src
dst
args
use
Pi
Nodes
cg
desired
Number
Of
Targets
desired
Number
Of
Calls
num
Local
Cast
Callees
cg
ctnodes
x
expected
test
Class
test
Id
Signature
scope
File
main
Class
exclusions
File
scope
File
exclusions
File
make
Entrypoints
args
CG
cls
method
descr
code
scope
File
main
task
total
Work
sub
Task
units
cgbe
G
node
from
to
G
node
from
to
solver
factory
factory
uf
bv
v1
v2
edges
g
start
end
paths
expected
Count
base
base
base
G
colors
full
Color
data
data
number
number
n
n
G
args
cg
cg
method
Name
pk1
pk2
pa
n
main
Class
expected
Size
n
main
Class
cg
main
Class
method
method
name
softly
softly
softly
softly
i
Class
expected
Number
Of
Array
Accesses
softly
block
cfg
pruned
Cfg
method
identifyer
softly
cfg
pruned
Cfg
block
method
name
softly
softly
softly
softly
i
Class
expected
Number
Of
Array
Accesses
matcher
main
Class
main
Class
main
Class
scope
File
cg
cg
name
args
cg
declaring
Class
name
args
n
method
Name
heap
Model
main
Class
size
main
Class
main
Method
heap
Model
main
Class
expected
Size
main
Class
main
Class
scope
main
Class
args
e
args
e
args
cfg
return
Node
return
Node
exploded
Cfg
cg
bench
Name
p
e
args
main
Class
e
c1
c2
pk
result
options
cha
cg
fam
args
main
Class
e
app
Jar
e
cha
options
node
key
options
cha
cg
fam
args
args
p
app
Jar
main
Class
src
Caller
src
Callee
go
Backward
d
Options
c
Options
e
e
slice
g
e1
s
sdg
slice
p
args
p
class
Path
exclusion
File
Path
args
args
app
Jar
method
Sig
e
e
args
app
Jar
directories
s
args
args
app
Jar
exclusion
File
e
e
app
Jar
exclusion
File
g
p
o
args
args
p
p
app
Jar
main
Class
d
Options
c
Options
e1
e
e
sdg
p
args
args
app
Jar
method
Sig
e
e
args
args
cha
entry
Class
e
args
args
e
g
f
g
args
cha
ecfg
cha
src
dst
node
e
icfg
cha
node
src
dst
src
dst
e
num
cg
p1
p2
domain
src
dest
src
dest
ret
src
dest
src
dest
src
dest
d1
d1
d1
d1
call
src
dest
node
cg
Node
e
cg
p1
p2
domain
src
dest
src
dest
ret
src
dest
src
dest
src
dest
d1
call
src
dest
node
cg
Node
e
e
v
instruction
Index
ir
du
ir
statements
ir
s
ir
i
alloc
Node
alloc
PC
node
cg
hg
alloc
Method
alloc
PC
m
alloc
Node
alloc
PC
node
alloc
N
alloc
PC
nodes
n
alloc
PC
alloc
Method
alloc
PC
m
alloc
Method
alloc
PC
m
instruction
Index
ik
m
instruction
Index
ik
m
instruction
Indices
call
Graph
heap
Graph
expensive
Intraprocedural
Analysis
alloc
Method
alloc
PC
m
instruction
Index
ik
m
instruction
Index
ik
m
ik
m
instruction
Index
ik
ik
m
instruction
Indices
xml
File
scope
e
xml
uri
name
q
Name
atts
cname
atts
uri
name
q
Name
governing
Method
atts
atts
atts
atts
atts
atts
atts
atts
atts
atts
atts
atts
cl
Name
cl
Name
method
method
C
options
method
caller
inst
T
cha
invoke
selector
name
e
e
kind
i
s
insts
defs
uses
symbol
Table
v
summary
program
Counter
count
enable
program
Counter
program
Counter
program
Counter
statement
statement
number
name
merge
vn
value
reason
i
b
b
b
T
real
Type
loader
cha
selector
name
arg0
method
method
number
Of
Parameters
name
Table
v
statement
vn
value
reason
b
b
i
b
ref
summary
declaring
Class
ref
summary
declaring
Class
local
Names
ref
summary
declaring
Class
local
Names
index
vn
method
context
cfg
instructions
options
constants
local
Names
bc
Index
local
Number
context
options
parent
allocatable
Types
cha
bypass
Loader
caller
site
method
Summaries
allocatable
cha
m
m
m
target
type
target
klass
method
context
cfg
instructions
options
constants
instructions
method
instructions
constants
cfg
constants
symbol
Table
s
instruction
Index
ref
summary
declaring
Class
options
context
options
i
bc
Index
local
Number
base
caller
site
receiver
e
caller
site
target
invoke
parent
method
Summaries
ignored
Packages
cha
caller
site
dispatch
Type
m
is
Static
m
is
Static
l
m
is
Static
m
is
Static
l
method
is
Static
m
m
me
parent
exclusions
cha
class
Name
class
Name
the
Class
klass
modules
to
Remove
klass
method
offset
method
offset
node
obj
node
node
pi
obj
node
call
Index
value
Number
obj
node
st
obj
node
phi
obj
name
ignore
Base
Ptrs
ignore
Heap
terminate
At
Cast
ignore
Exceptions
name
ignore
Exceptional
Edges
ignore
Interproc
Edges
s
cg
pa
d
Options
c
Options
s
cg
pa
d
Options
c
Options
sdg
s
sdg
s
sdg
ss
sdg
ss
backward
sdg
roots
backward
sdg
roots
backward
monitor
roots
sdg
View
backward
s
cg
pointer
Analysis
roots
sdg
backward
node
mod
Ref
heap
Model
node
ir
pa
mod
statements
exclusions
cg
e
solver
domain
node
h
pa
mod
cfg
ssa
Instruction
Index2Statement
exclusions
cg
pointer
Key
Mod
solver
domain
node
h
pa
mod
cfg
ssa
Instruction2Statement
domain
node
h
pa
map
key
key
value
o
key
key
value
t
key
s
pointer
Key
Mod
solver
domain
node
h
pa
mod
cfg
ssa
Instruction
Index2Statement
solver
domain
node
h
pa
mod
cfg
ssa
Instruction
Index2Statement
exclusions
cg
cg
r
mod
s
n
h
pa
exclusions
domain
statements
node
cfg
pa2
domain
ssa
Instruction
Index2Statement
exclusions
src
dst
node
b
b
node
instruction
Index
node
instruction
Index
obj
node
call
Index
node
pa
mod
ref
d
Options
c
Options
exclusions
cg
mod
Ref
node
pa
mod
ref
d
Options
c
Options
exclusions
cg
mod
Ref
ignore
Alloc
Heap
Defs
c
Options
ir
instruction
Indices
call
call
call
c
Options
ir
instruction
Indices
ir
instruction
Indices
t
klass
klass
Name
set
set
klass
klass
Name
pk
use
use
ir
ir
s
ir
instruction
Indices
node
s
instruction
Indices
ir
ir
instructions
s
ref
ir
ir
ir
ref
call
Index
ref
ir
cg
n
call
loc
obj
N
N
N
N
N
N
src
dst
N
n
N
n
src
dst
node
src
dst
node
node
number
N
s
node
node
node
label
node
label
N
label
N
N
label
N
label
N
N
label
src
dst
label
src
dst
label
src
dst
label
src
dst
sdg
backward
src
dest
r
callee
call
procedure
procedure
procedure
i
n
call
procedure
n
call
callee
n
n
n
n
N
n
N
n
src
dst
N
N
N
N
src
dst
node
src
dst
node
node
number
N
s
node
node
cg
pa
d
Options
c
Options
cg
pa
mod
Ref
d
Options
c
Options
cg
pa
mod
Ref
d
Options
c
Options
heap
Exclude
node
N
number
s
s
number
src
dst
N
N
N
N
t
src
dst
src
dst
node
src
dst
node
node
node
node
node
src
dst
cg
pa
d
Options
c
Options
cg
pa
mod
Ref
d
Options
c
Options
sdg
pa
mod
Ref
seed
seeds
sdg
pa
sdg
pa
sdg
pa
mod
Ref
sdg
pa
ignore
Alloc
Heap
Defs
mod
Ref
sdg
pa
mod
Ref
cg
pa
cg
pa
mod
Ref
no
Heap
mod
ref
src
dst
n
N
obj
number
N
node
N
node
N
N
node
N
src
dst
s
node
src
dst
node
n
N
node
src
dest
ret
src
dest
src
dest
src
dest
call
src
dest
src
dest
src
dest
node
loc
node
call
Index
loc
obj
node
loc
obj
node
call
Index
loc
obj
node
loc
obj
node
node
obj
node
call
Index
node
value
Number
obj
node
set
s
p
pk
pk
n
method
Name
n
slice
slice
w
slice
file
Name
slice
application
Only
s
slice
application
Only
slice
slice
slice
slice
slice
slice
slice
slice
application
Only
slice
slice
d1
src
dest
src
dest
src
dest
call
src
dest
src
dest
src
dest
ret
node
obj
method
C
m
node
site
node
site
src
target
method
C
method
ir
method
context
parent
languages
name
loader
loader
file
file
Name
loader
file
module
Name
loader
stream
loader
file
loader
m
other
loader
m
name
cl
Name
ref
ref
impl
Class
classes
loader
klass
name
desc
loader
e
method
method
cha
program
Counter
m
i
obj
m
i
node
node
node
method
C
obj
reference
target
cha
cha
application
Only
entrypoints
site
node
site
e
node
site
src
target
method
C
reference
target
method
C
target
method
C
n
outer
o
N
src
dst
src
dst
node
node
node
src
dst
node
node
node
e
node
e
cg
node
Results
e
cg
node
Result
Computer
ir
Factory
ssa
Options
cache
method
C
method
context
m
ir
A
B
name
obj
type
caller
site
caller
site
callee
actual
Parameters
caller
site
caller
site
receiver
nodes
edges
methods
bytecode
Bytes
obj
cg
cg
cg
cg
name
num
Flow
To
Cast
Iterations
ignore
Method
Invoke
ignore
Interpret
Calls
application
Classes
Only
scope
e
analysis
Scope
entrypoints
max
Number
Of
Nodes
x
x
i
i
d
ssa
Options
use
Constant
Specific
Keys
v
v
v
reflection
Options
handle
Static
Init
handle
Zero
Length
Array
method
allocation
type
obj
CG
field
obj
system
L
R
system
L
R
concrete
Type
o
system
L
R
system
L
R
concrete
Type
o
system
system
L
R
system
L
R
concrete
Type
o
system
L
R
system
L
R
target
Method
o
system
L
sense
i
system
L
R
system
L
R
m
key
op
o
eq
v
eq
eq
s
p
eq
eq
op
use
defs
op
uses
def
eq
N
n
n
N
v
v
v
v
src
dst
node
v
v
v
v
eq
eq
v
statement
eq
eq
eq
N
n
n
N
v
v
v
v
src
dst
node
obj
node
value
Number
obj
options
cha
node
allocation
node
allocation
dim
type
S
node
pei
Loc
type
obj
obj
Type
node
type
obj
cg
instance
Keys
c
node
value
Number
type
Filter
l
cha
options
cache
app
Context
Selector
app
Context
Interpreter
instance
Policy
cha
options
context
Interpreter
instance
Policy
options
cache
cha
cl
scope
xml
Files
instance
Policy
l
cha
options
cache
app
Context
Selector
app
Context
Interpreter
instance
Policy
cha
options
cache
app
Context
Selector
app
Context
Interpreter
instance
Policy
cha
keys
A
B
node
node
node
node
node
klass
node
node
n
base
caller
site
target
site
method
site
method
length
base
o
cs
o
name
caller
base
Context
name
obj
options
cache
node
node
node
node
klass
N
node
caller
call
Site
base
Context
name
obj
allocation
String
o
name
cs
base
o
name
type
base
caller
site
target
caller
site
target
caller
site
callee
receiver
caller
site
n
abstract
Root
Method
options
cache
app
Context
Selector
app
Context
Interpreter
caller
call
Site
name
obj
allocation
Site
allocation
Sites
o
caller
name
obj
options
cache
node
node
node
node
node
node
node
klass
N
node
node
value
Number
node
value
Number
filter
node
node
f
I
field
I
n
base
caller
site
callee
actual
Parameters
receiver
caller
site
callee
curr
base
caller
site
base
Selector
caller
site
callee
receiver
caller
site
cha
delegate
caller
site
callee
keys
m
m
m
m
M
C
receiver
m
c
M
C
site
target
Method
receiver
C
caller
site
n
cha
options
cache
app
Context
Selector
app
Context
Interpreter
instance
Policy
options
cha
context
Interpreter
policy
node
allocation
c
node
node
node
allocation
dim
type
S
type
node
pei
type
obj
obj
Type
C
C
c
c
c
shrike
CI
node
node
node
node
node
klass
node
node
node
node
node
n
node
obj
node
allocation
type
obj
CG
builder
monitor
return
Statement
casts
context
Interpreter
cha
cha
caller
site
callee
receiver
caller
site
monitor
abstract
Root
Method
options
cache
pointer
Key
Factory
e
abstract
Root
Method
options
klass
options
options
monitor
e
options
entrypoint
entrypoint
n
monitor
monitor
node
value
Number
node
value
Number
filter
node
value
Number
filter
node
value
Number
filter
node
node
f
I
field
I
exception
Var
catch
Classes
e
exception
Var
catch
Classes
e
t
t
base
type
base
type
obj
catch
Classes
klass
cha
key
lhs
rhs
obj
interpreter
pk
Fact
caller
site
recv
i
Key
e
selector
keys
node
allocation
node
allocation
dim
type
S
obj
obj
Type
node
node
node
node
node
def
rhs
o
val
rhs
o
field
def
rhs
value
o
field
val
rhs
value
o
field
instance
dummy
LHS
var
o
instance
dummy
LHS
var
o
klass
klass
S
klass
lhs
rhs
node
monitor
node
monitor
node
node
node
node
n
node
obj
obj
system
builder
monitor
type
obj
pei
cha
CG
outer
options
cha
node
allocation
node
allocation
dim
type
S
node
pei
type
obj
obj
Type
builder
cg
points
To
Map
instance
Keys
pointer
Keys
i
Key
Factory
key
key
analysis
lpk
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
lpk
key
node
instruction
node
instruction
node
instruction
node
instruction
node
field
ref
Vn
is
Static
node
instruction
node
instruction
lpk
node
call
ik
node
call
node
allocation
node
allocation
dim
type
S
node
pei
Loc
type
obj
obj
Type
node
value
Number
node
value
Number
filter
node
node
f
I
field
I
cg
pointer
Key
Factory
instance
Key
Factory
builder
p
s
p
rep
klass
klass
klass
i
ik
set
key
key
key
lhs
op
rhs
lhs
op
rhs
lhs
op
rhs1
rhs2
lhs
op
rhs
lhs
op
rhs
lhs
value
klass
index
dim
index
a
Class
index
element
Class
dim
element
dim
index
element
Class
dim
klass
index
index
T
op
arg0
op
arg0
op
arg0
arg1
builder
s
v
v
key
verbose
Interval
periodic
Maintain
Inteval
s
s
rep
s
rep
p
Ref
p
as
p
Ref
p
as
result
result
p
size
node
allocation
type
obj
options
cha
node
allocation
node
allocation
dim
type
S
node
pei
type
obj
obj
Type
fixed
Set
lhs
rhs
rhs
o
p
constant
constant
obj
CG
container
selector
caller
site
callee
R
name
o
caller
site
node
value
Number
node
value
Number
filter
node
node
f
I
field
I
key
obj
b
B
b
other
pointer
Key
node
obj
cha
instance
field
instance
obj
cha
r1
r2
k1
k2
k1
k2
if1
if2
key1
key2
key1
key2
key1
key2
key1
key2
key1
key2
key1
key2
key1
key2
key1
key2
o
p
id
key
key
v
key
key
key
key
p
p
s
i
j
src
dest
p
type
Filter
p
i
caller
site
callee
receiver
caller
site
abstract
Root
Method
options
cache
pointer
Key
Factory
node
x
type
ik
Factory
node
monitor
node
monitor
e
node
node
monitor
node
monitor
node
ir
b
v
monitor
node
control
Flow
Graph
b
v
node
ir
du
ir
du
node
peis
exception
Var
catch
Classes
call
ir
call
ir
node
ir
bb
invariants
call
caller
f
pi
rhsi
param
Index
rhsi
builder
node
value
Number
value
Number
filter
f
I
f
I
allocation
allocation
dim
S
instr
type
obj
type
caller
site
recv
i
Key
symbol
Table
du
value
Number
symbol
Table
du
value
Number
value
Number
symbol
Table
du
node
value
Number
vn
klass
instruction
def
array
Ref
array
Ref
value
instruction
instruction
instruction
instruction
lval
ref
is
Static
field
instruction
rval
ref
is
Static
field
rval
ref
f
rval
field
f
instruction
instruction
invs
x
instruction
instruction
instruction
c
v
c
v
instruction
instruction
dst
src
block
call
call
instruction
klass
method
i
klass
caller
instruction
target
const
Params
unique
Catch
Key
caller
instruction
target
const
Params
unique
Catch
Key
call
node
const
Params
unique
Catch
dispatch
Indices
rhs
param
Vn
rhsi
lhs
rhs
receiver
Vals
keys
side
Effect
o
caller
call
invariants
f
caller
instruction
invs
caller
site
node
vn
du
node
vn
vn
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
target
klass
filter
target
index
method
symbol
Table
du
value
Number
symbol
Table
du
value
Numbers
symbol
Table
du
node
value
Number
hm
symbol
Table
du
node
value
Number
hm
ensure
Indexes
symbol
Table
value
Number
type
type
field
field
instruction
ir
node
instr
type
CG
node
allocation
node
allocation
dim
type
S
node
instr
type
obj
obj
Type
node
node
node
node
klass
options
klasses
cg
c
options
klasses
cg
key
type
c
key
pk
cha
options
cache
app
Context
Selector
app
Context
Interpreter
node
monitor
node
node
node
f
klass
e
node
site
site
node
site
caller
site
target
node
new
Site
klass
i
Key
node
ns
app
Context
Selector
app
Context
Interpreter
node
monitor
fake
Root
Class
options
options
cache
node
e
node
e
node
e
node
klass
A
B
node
node
node
node
node
node
klass
fake
Root
Class
options
cache
method
C
site
site
y
site
site
delegate
Node
delegate
Site
method
context
src
dst
node
node
node
src
dst
N
node
options
klasses
cg
node
node
klass
node
allocation
node
allocation
dim
type
S
node
instr
type
obj
obj
Type
node
value
Number
node
value
Number
filter
node
node
f
I
field
I
site
node
cha
options
cache
context
Selector
context
Interpreter
klass
i
Key
node
n
declarer
i
Key
site
selector
site
caller
lhs
rhs
o
site
node
options
cache
node
node
node
node
node
node
node
klass
selector
arg0
node
type
Filter
node
allocation
type
obj
T
d
node
allocation
type
dim
obj
instance
field
obj
node
type
obj
CG
base
base
x
caller
site
callee
actual
Parameters
ref
i
caller
site
lhs
rhs
lhs
rhs
o
I
name
obj
x
base
x
base
parameter
Objs
name
other
lhs
rhs
o
system
builder
monitor
value
value
Class
obj
CG
key
pk
cg
cg
d
name
cg
name
cause
cg
pointer
Analysis
msg
cg
pointer
Analysis
msg
cg
pointer
Analysis
cause
cg
pointer
Analysis
ir
Factory
ssa
Options
ssa
Options
ir
Factory
name
type
method
declaring
Class
cha
options
cache
method
cha
options
cache
options
context
options
params
site
vn
is
Primitive
T
T
length
T
T
invoke
Ctor
c
c
c
t
t
values
ref
object
ref
types
rv
is
PEI
ref
base
Object
value
ref
value
element
Type
base
Object
index
Value
value
element
Type
base
Object
index
Value
node
node
node
node
klass
node
node
scope
cha
is
Application
Class
scope
cha
klass
method
C
K
N
method
K
node
method
C
obj
CG
n
N
method
C
m
C
o
m
node
N
interpreter
cha
caller
site
node
Manager
node
N
node
cha
caller
call
receiver
fake
Root
Method
options
cache
method
context
method
context
method
C
site
site
to
site
site
t
Node
pc
t
Node
target
obj
node
N
N
src
dst
src
dst
x
y
node
node
node
src
dst
node
site
src
target
node
site
node
site
A
B
caller
site
callee
receiver
caller
site
A
B
caller
site
callee
receiver
caller
site
name
obj
cg
partial
Roots
partial
Graph
cg
partial
Roots
nodes
cg
partial
Roots
method
C
m
nodes
index
n
node
node
node
site
src
target
node
site
caller
site
callee
receiver
caller
site
clr
clr
cha
type
Ref
cha
m
name
field
Type
selector
name
A
B
options
cha
caller
site
callee
receiver
caller
site
xml
File
options
cha
options
scope
cl
xml
File
cha
options
cl
xml
File
cha
e
options
scope
cl
summary
cha
options
cl
summary
cha
scope
cha
cha
clr
cha
scope
cha
class
Name
cha
class
Name
scope
cha
class
Names
cha
class
Names
loader
Ref
cha
class
Names
x
sup
G
sub
G
options
cache
cha
scope
options
cache
cha
l
options
cache
cha
scope
l
options
cache
cha
l
options
cache
cha
scope
custom
Selector
custom
Interpreter
l
options
cache
cha
custom
Selector
custom
Interpreter
l
options
cache
cha
scope
l
options
cache
cha
l
options
analysis
Cache
cha
scope
custom
Selector
custom
Interpreter
l
options
analysis
Cache
cha
custom
Selector
custom
Interpreter
l
options
analysis
Cache
cha
scope
l
options
analysis
Cache
cha
l
options
cache
cha
scope
custom
Selector
custom
Interpreter
l
options
cache
cha
custom
Selector
custom
Interpreter
options
cache
cha
scope
options
cache
cha
options
cache
cha
scope
options
cache
cha
scope
app
Selector
app
Interpreter
options
cache
cha
options
cache
cha
app
Selector
app
Interpreter
n
options
cache
cha
scope
n
options
cache
cha
n
options
cache
cha
scope
n
options
cache
cha
n
options
cache
cha
scope
n
options
cache
cha
n
options
cache
cha
scope
n
options
cache
cha
options
cache
cha
scope
options
cache
cha
options
scope
cl
cha
options
cl
cha
e
e
fake
Root
Class
options
cache
m
block
method
cha
method
cha
method
method
i
i
i
types
obj
fake
Root
Class
options
cache
method
iface
klass
method
cha
i
method
cha
method
cha
method
method
i
site
target
options
monitor
v
v
obj
c
index
n
cg
keep
cg
keep
remove
n
n
n
n
src
target
n
n
n
n
src
dst
src
dst
node
node
node
src
dst
N
number
s
node
node
method
C
m
node
site
node
site
src
target
n
cg
depth
depth
policy
root
node
n
exclusions
module
Lines
List
ldr
Impl
Lines
List
mods
refs
cg
cg
node
node
node
node
node
i
obj
h
node
value
Number
filter
node
allocation
obj
obj
Type
type
S
node
allocation
dim
node
instr
type
I
node
I
field
node
value
Number
node
f
I
flow
Graph
gen
gen
gen
node
node
src
dst
cg
pa
heap
Exclude
cg
pa
heap
Exclude
cg
pa
cg
pa
cg
pa
heap
Exclude
cg
pa
heap
Exclude
pa
n
pa
heap
Exclude
n
pa
heap
Exclude
n
result
pa2
h
instruction
instruction
instruction
n
result
h
pa
ignore
Alloc
Heap
Defs
instruction
instruction
instruction
n
result
pa
h
n
result
pa
h
ignore
Alloc
Heap
Defs
n
h
pa
s
hexcl
n
h
pa
s
hexcl
ignore
Alloc
Heap
Defs
n
result
pa
h
n
h
pa
s
hexcl
I
m
m
string
s
cause
klass
e
scope
factory
language
progress
Monitor
map
super
Class
Handling
scope
factory
progress
Monitor
map
super
Class
Handling
scope
factory
languages
progress
Monitor
map
super
Class
Handling
e
loader
progress
Monitor
klass
e
e
e
klass
klass
iface
ref
e
declared
Class
ref
declared
Class
ref
ref
klass
m
f
klass
f
receiver
Class
selector
clazz
selector
node
selector
klass
klass
n
buffer
N
klass
child
obj
a
b
c
a
b
a
a
sub
sup
c
t
c
i
type
T
type
type
loader
Ref
klass
klass
klass
klass
c
c
klass
message
klass
message
c1
c2
scope
scope
scope
scope
monitor
scope
factory
scope
factory
super
Class
Handling
scope
factory
scope
factory
scope
factory
monitor
scope
factory
languages
scope
factory
language
scope
factory
language
monitor
loader
Ref
klass
c
c
ref
receiver
Class
ref
m
f
klass
f
receiver
Class
selector
A
type
A
B
A
B
c
T
c
i
type
type
klass
klass
c1
c2
message
message
scope
scope
monitor
scope
factory
scope
factory
monitor
scope
factory
languages
scope
factory
language
scope
factory
language
monitor
cha
cfg
filter
cfg
current
CFG
Nodes
filter
N
N
N
N
N
N
N
N
N
N
src
dst
src
dst
src
dst
node
node
node
nodes
subset
N
number
node
Iterator
s
n
n
N
cfg
filter
N
N
N
N
index
index
bb
exception
exception
is
Subclass
Filtered
thrown
Exceptions
filtered
Exceptions
cha
thrown
Exceptions
filtered
Exceptions
cha
thrown
Exceptions
filtered
Exceptions
cha
thrown
Exceptions
filtered
Exceptions
exception
node
node
filter
e
c
node
node
node
filter
node
node
filter
cha
cfg
src
dst
src
dst
instruction
analysis
instruction
instruction
to
Be
Ignored
to
Be
Ignored
to
Be
Ignored
instruction
instruction
exception
Filter
e
c
instruction
instruction
analysis
instruction
instruction
instruction
instruction
instruction
instruction
cg
cg
cg
filter
n
n
for
Edge
n
cg
CG
relevant
n
n
cfg
instrs
bb
pb
instrs
caller
return
Block
target
target
CFG
caller
call
Block
target
target
CFG
n
cfg
n
entry
Block
exit
Block
caller
cfg
N
b
B
B
N
on
Behalf
Of
n
node
return
Block
n
call
Block
n
n
n
N
N
N
N
N
N
src
dst
src
dst
node
N
B
B
cfg
B
B
cfg
Bnode
B
cfg
node
node
src
dst
N
number
s
node
node
n
n
call
Block
return
Block
callee
bb
src
dst
src
dst
CG
cg
filtersection
n
cfg
src
dst
src
dst
cfg
node
bb
obj
s
s
s
s
string
s
begin
s
klass
method
s
s
s
t
s
sig
w
s
s
type
Args
s
s
type
Sigs
s
s
v
klass
e
s
generics
Signature
method
method
s
s
cha
sig
s
obj
sig
sig
start
klass
t
name
start
length
name
name
package
Name
class
Name
package
Name
class
Name
dim
key
obj
s
package
Name
class
Name
mask
package
Name
class
Name
dim
obj
result
e
n
cl
n
name
cl
type
Name
cl
type
Name
cl
type
Name
cl
type
Name
t
t
t
cl
tn
other
loader
package
Name
class
Name
classloader
name
other
type
named
Arguments
unnamed
Arguments
t
named
Arguments
unnamed
Arguments
t
unnamed
Arguments
t
t
named
Arguments
r
cl
Ref
r
cl
Ref
cl
Ref
all
Annotations
obj
m
type
e
c
type
e
field
type
annotation
type
Path
type
Annotation
Target
target
Type
obj
r
converter
cl
Ref
annotation
type
Path
type
Annotation
Target
target
Type
annotation
type
Annotation
Target
target
Type
type
parameter
index
obj
super
Type
obj
type
parameter
index
bound
index
obj
obj
index
obj
throw
Type
obj
var
Iindex
name
obj
catch
I
Index
catch
Type
obj
iindex
obj
iindex
type
argument
index
obj
cl
Ref
type
Name
info
location
cl
Ref
method
target
target
target
target
target
target
target
target
e
target
e
target
e
cl
Ref
target
target
target
target
target
target
target
target
target
target
cl
Ref
target
target
target
target
target
target
target
target
target
target
target
target
target
target
target
target
target
target
target
target
tref
mn
field
Type
loader
class
Type
field
Name
field
Type
key
field
Type
type
name
field
Type
other
type
name
hash
other
name
language
parent
obj
parameters
return
Type
l
b
b
s
l
s
key
obj
return
Type
parameters
obj
result
p
selector
Str
l
selector
Str
e
name
descriptor
obj
tref
mn
md
tref
selector
t
method
Name
descriptor
l
t
method
Name
descriptor
loader
method
Class
method
Name
method
Signature
l
loader
method
Class
method
Name
method
Signature
key
i
type
name
descriptor
other
cha
cha
options
cache2
cha
options
save
Pointer
Analysis
monitor
module
Files
e
exclusions
cha
libs
libs
b
data
ctrl
exclusions
File
entrypoints
cha
builder
builder
category
category
category
category
category
category
module
Files
libs
libs
b
entrypoints
src
dest
array
index
scope
entrypoints
scope
File
exclusions
File
scope
File
exclusions
File
my
Class
Loader
options
cache
cha
options
cache
cha
test
P
Ato
String
options
cache
cha
options
cache
cha
test
P
Ato
String
options
cache
cha
options
cache
cha
n
options
cache
cha
reader
my
Loader
basic
File
scope
File
Name
exclusions
File
java
Loader
scope
scope
File
Name
exclusions
File
java
Loader
e
scope
scope
File
URI
exclusions
File
java
Loader
e
scope
java
Loader
line
e
e
scope
wala
Loader
language
entry
Type
entry
Pathname
exclusions
File
exclusions
File
class
Path
exclusions
File
class
Path
scope
loader
e
e
monitor
ms
Per
Work
Item
check
Memory
from
to
from
to
from
to
from
to
code
method
method
method
loader
type
entry
e
e
is
bytes
cha
cache
referent
reference
cha
e
type
Name
cha
target
Package
Name
target
Simple
Class
Name
target
Method
Name
klass
m
test
Class
uri
e
file
Name
file
Name
file
Name
file
Name
file
Name
file
Name
file
Name
uri
file
Name
file
Name
loader
file
Name
file
Name
loader
file
Name
file
Name
loader
file
Name
loader
e
file
Name
loader
file
Name
loader
e
url
e
monitor
ms
Per
Work
Item
check
Memory
name
total
Work
e
sub
Task
work
e
e
e
b
b
start
length
e
i
i
length
e
b
b1
s
utf8
e
s
s
bytes
e
s
e
b
length
d
String
d
String
desc
l
desc
l
b
descriptor
l
descriptor
l
b
name
i
name
start
length
e
name
name
start
length
e
name
b
start
length
e
b
start
length
e
a
name
start
length
e
method
Sig
l
method
Sig
jvm
Type
jvm
Type
path
path
path
type
Name
str
str
utf8
utf8
off
len
bytes
b
b
start
length
count
count
start
key
e
e
utf8
other
obj
i
e
b
b
c
bs
c
b
ma
mb
b
msg
cause
msg
w
level
other
obj
b
m
bc
index
opc
w
num
num
value
low
high
num
num
num
value
num
opcode
index
index
type
type
no
name
o
number
name
type
disp
based
On
m
Ref
descriptor
Offset
o
m
Ref
cha
m
Ref
has
Implicit
This
method
no
no
param
as
Type
e
ssa
ssa
type
cha
no
t
Name
t
Ref
t
Name
cha
t
Ref
cha
t
Name
cha
t
Ref
cha
args
args
target
cha
self
args
self
args
target
cha
callee
overrides
defaults
cha
instantiator
e
e
from
to
cha
sub
super
C
cha
from
to
cha
args
target
cha
self
args
target
cha
callee
overrides
defaults
cha
s
s
s
s
s
obj
instruction
cha
iindex
result
params
exception
site
iindex
params
exception
site
iindex
result
iindex
target
Value
containing
Instance
field
iindex
target
Value
field
iindex
target
Instance
new
Value
field
iindex
new
Value
field
iindex
result
site
iindex
result
site
params
iindex
result
params
super
Class
sub
Class
from
to
e
iindex
iindex
target
iindex
operator
type
val1
val2
target
iindex
result
array
index
iindex
array
index
value
s
message
type
o
type
name
o
type
name
o
number
type
valid
In
key
number
type
valid
In
variable
Name
number
type
valid
In
number
copy
From
o
value
key
acc
value
set
By
value
set
By
type
key
type
key
type
key
type
name
key
key
key
key
with
Super
key
key
key
key
does
Loop
s
s
map
key
value
key
key
value
key
m
cg
e
event
event
tree
Node
tree
Node
rec
pc
e
ir
e
line
e
selected
Pc
Listner
pc
ir
pc
e1
e2
ir
pc
ir
url
url
source
Line
url
e
cg
pa
event
event
e
pa
tree
Node
rec
node
ik
map
index
o
l
tree
value
selected
expanded
leaf
row
has
Focus
value
path
cha
e
event
event
tree
Node
tree
Node
rec
cg
pa
cg
pa
e
event
cha
ir
pdf
File
dot
File
dot
Exe
pdf
View
Exe
cha
ir
pdf
File
dot
File
dot
Exe
pdf
View
Exe
annotations
ir
A
B
n
ir
bb
pdf
File
gv
Exe
args
e
scope
wala
Loader
language
entry
Type
entry
Pathname
e
module
pp
e
e
e
i
bc
Index
runtime
Invisible
url
parent
entry
obj
selector
name
name
type
f
file
Name
container
f
cloned
From
e
root
file
file
dir
obj
class
Name
delegator
cha
l
class
Loader
Reference
cha
scope
program
Counter
obj
url
type
loader
cha
sig
name
name
type
Name
reference
obj
i
bc
Index
instruction
Index
param
Num
bc
Index
local
Number
method
declaring
Class
is
Static
is
Factory
method
declaring
Class
is
Static
is
Factory
instructions
obj
options
context
options
i
bc
Index
param
Num
bc
Index
bc
Index
local
Number
container
name
e
name
name
obj
program
Counter
declared
Target
obj
program
Counter
declared
Target
program
Counter
declared
Target
program
Counter
declared
Target
program
Counter
declared
Target
program
Counter
declared
Target
invocation
Code
invocation
Code
reader
loader
cha
e
e
e
obj
e
e
runtime
Invisible
runtime
Invisable
runtime
Invisible
runtime
Invisible
iter
iter
attr
Name
reader
e
e
runtime
Invisible
field
Index
field
Index
field
Index
field
Index
runtime
Invisible
runtime
Invisible
field
Index
field
Index
field
Index
field
Index
runtime
Invisible
index
e
loader
cha
e
entry
Name
jar
File
e
obj
url
e
e
m
m
m
m
m
m
m
m
m
wrapper
method
M
M
statements
instruction
statements
statements
instruction
statements
instruction
statements
instruction
statements
instruction
statements
instruction
statements
instruction
statements
instruction
declaring
Class
canonical
Ref
access
Flags
annotations
sig
declaring
Class
canonical
Ref
access
Flags
annotations
type
Annotations
sig
declaring
Class
canonical
Ref
access
Flags
annotations
obj
l
o
t
t
t
t
t
t
t
t
t
t
value
name
target
cha
pointee
reference
cha
options
cache
instructions
method
context
o
n
result
pa
h
n
result
pa
h
ignore
Alloc
Heap
Defs
message
f
z
obj
entry
e
klass
index
ex
file
Name
first
Line
last
Line
first
Col
last
Col
p
bc
Info
e
e
bc
Index
local
Number
e1
e
e
attr
Name
reader
type
type
type
runtime
Invisible
runtime
Invisible
runtime
Invisible
e
e
instruction
Index
instruction
Index
T
cha
obj
name
type
Name
resource
URL
base
l
o
instructions
method
context
o
stream
name
e
name
name
obj
obj
method
method
C
options
e
v
Length
v
Length
du
instruction
Index
e
method
f
container
o
e
klass
instruction
Index
bc
Index
a
e
bc
Info
info
simple
Visitor
info
obj
info
i
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
i
e
bc
Index
param
Num
bc
Index
e
bc
Index
local
Number
T
cha
selector
name
root
file
file
e
loader
cha
class
Name
class
Name
name
name
type
e
e
selector
e1
interfaces
name
L
name
field
Type
access
Flags
annotations
type
Annotations
sig
runtime
Visible
iindex
result
arrayref
iindex
result
arrayref
index
declared
Type
iindex
arrayref
index
value
declared
Type
iindex
operator
overflow
unsigned
result
val1
val2
may
Be
Integer
insts
defs
uses
iindex
result
val
type
Values
is
PEI
iindex
result
val
types
is
PEI
iindex
result
val
type
Value
is
PEI
iindex
result
val
type
is
PEI
iindex
operator
result
val1
val2
iindex
operator
type
val1
val2
target
iindex
result
val
from
Type
to
Type
overflow
insts
defs
uses
iindex
bb
Number
exception
Value
Number
iindex
result
field
iindex
result
ref
field
iindex
target
iindex
result
ref
checked
Type
iindex
result
params
exception
site
bootstrap
iindex
params
exception
site
bootstrap
iindex
ref
is
Enter
iindex
result
site
iindex
result
params
iindex
ref
value
field
iindex
value
field
iindex
iindex
result
is
Primitive
iindex
val
default
Label
cases
And
Labels
iindex
exception
iindex
operator
result
val
iindex
lval
entity
Type
token
iindex
result
site
params
iindex
result
val
pi
Block
successor
Block
cause
iindex
lval
local
pointee
Type
iindex
lval
local
index
Val
pointee
Type
iindex
lval
local
field
pointee
Type
iindex
lval
t
address
Val
iindex
address
Val
rval
pointee
Type
o
type
name
target
cha
pei
type
type
type
type
type
type
type
type
type
value
pointee
reference
loader
instruction
cha
options
cache
n
result
pa
h
n
result
pa
h
ignore
Alloc
Heap
Defs
name
constituents
cbuf
off
len
line
Number
class
Name
method
offset
method
offset
klass
klass
modules
to
Remove
program
Counter
declared
Type
program
Counter
declared
Type
f
container
loader
array
Class
Loader
parent
exclusions
cha
M
M
s
t
entry
contents
module
Entries
file
Contents
is
JMOD
Type
e
jar
File
Contents
file
Name
entry
Sizes
e
size
is
class
Name
class
Name
class
Name
class
Name
source
Modules
modules
module
name
archive
e
e
class
Name
klass
method
offset
method
offset
klass
to
Remove
root
root
file
Ext
file
file
exclusions
class
Loader
Reference
cha
scope
class
Loader
Reference
cha
parent
scope
e
e2
impl
impl
pei
loader
instruction
ir
e
instruction
instrcution
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
roots
P
call
Graph
n
n
N
number
n
s
N
N
N
N
N
N
src
dst
src
dst
node
node
node
src
dst
N
node
Manager
node
Manager
node
Manager
R
node
Manager
R
arg1
arg2
N
number
N
N
N
N
n
n
from
to
from
to
from
to
node
N
node
node
node
node
pa
s
roots
N
type
rhs
obj
type
other
type
ir
do
Primitives
ir
do
Primitives
monitor
e
e
e
type
lhs
o
lhs
rhs
o
lhs
rhs
Operands
o
lhs
rhs
o
load
lhs
rhs
o
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
s
type
instruction
instruction
instruction
value
Number
value
Number
value
Number
value
Number
value
Number
size
type
rhs
obj
reference
reference
size
rhs
other
rhs
other
rhs
obj
reference
size
reference
size
cha
options
i
Analysis
Cache
View
node
node
klass
node
node
node
node
node
node
node
node
n
cha
node
node
node
node
node
node
method
context
klass
node
klass
node
node
N
node
node
node
node
node
node
node
cls
name
cls
name
ref
return
Values
context
constants
context
constants
name
context
constants
name
node
klass
node
node
N
node
method
obj
base
cls
method
Name
name
obj
base
method
name
obj
base
caller
site
callee
actual
Parameters
caller
site
base
caller
site
receiver
context
options
target
node
node
node
node
node
node
node
node
node
filter
node
node
node
klass
node
node
node
node
n
node
node
node
node
options
builder
caller
site
callee
receiver
instance
caller
site
caller
site
callee
receiver
instance
target
Method
instance
caller
site
type
name
name
obj
caller
site
callee
receiver
e
target
Method
instance
instance
caller
site
node
node
node
node
node
node
context
method
context
node
klass
node
node
N
node
node
node
node
node
node
node
context
method
context
node
klass
node
node
N
node
options
caller
site
callee
receiver
caller
site
T
T
T
T
cha
type
T
n
Implementors
T
n
T
T
method
declaring
Class
is
Static
is
Factory
method
declaring
Class
is
Static
is
Factory
T
instr
is
Allocation
t
t
alloc
node
node
node
node
node
node
klass
method
context
klass
node
klass
node
node
node
node
node
node
N
node
caller
site
callee
receiver
caller
site
caller
site
callee
receiver
caller
site
name
m
call
caller
site
callee
receiver
caller
site
node
node
method
context
node
node
node
node
cls
cls
cls
cls
ref
return
Values
context
constants
ref
return
Values
context
constants
context
constants
context
constants
context
constants
context
constants
context
constants
context
constants
context
constants
context
constants
node
klass
node
node
N
node
options
i
Analysis
Cache
View
node
node
context
node
node
node
node
node
cha
context
type
node
klass
node
e
node
e
node
node
e
node
e
node
e
node
e
N
node
m
context
S
T
T
T
m
it
obj
i
C
options
application
Classes
Only
caller
site
callee
receiver
instance
cha
str
target
Method
instance
caller
site
type
name
obj
node
node
node
node
node
node
method
target
recv
node
klass
node
node
N
node
intra
Result
cg
transformer
node
dst
src
exceptions
exceptions
exceptions
bit
Vector
bit
Vector
problem
n
IN
src
dst
analysis
node
src
dst
src
dst
cg
pointer
Analysis
cha
filter
node
ir
filter
cha
node
filter
cha
pointer
Analysis
ir
filter
cha
pointer
Analysis
node
throwing
Instruction
throwing
Instruction
instruction
add
To
instruction
block
block
callsite
instruction
callgraph
pointer
Analysis
cha
callgraph
pointer
Analysis
cha
filter
e
monitor
node
throw
Block
catch
Block
node
block
node
instruction
instruction
node
G
meeter
flow
node
lhs
rhs
o
from
to
lhs
rhs
o
n
IN
from
to
size
e
bb
meeter
lhs
rhs
o
slot
rhs
bb
bb
n
rhs
bb
lhs
rhs
bb
meeter
lhs
rhs
bb
meeter
lhs
bb
meeter
lhs
rhs
bb
meeter
lhs
rhs
bb
meeter
operands
operands
bb
i
stack
Height
max
Locals
i
j
i
from
to
val
array
n
other
exit
entry
basic
Block
entry
from
to
cfg
v
ev
entry
basic
Block
entry
from
to
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
other
ir
instruction
check
To
Add
ir
ir
instruction
pi
Var
pi
Parent
pi
Restrictor
op
handle
graph
graph
todo
handle
instruction
instruction
instruction
instruction
instruction
instruction
pi
cnd
index
graph
source
comparator
graph
comparator
weight
other
Weight
weight
other
Weight
edge
edge
new
Weight
o1
o2
o1
o2
number
type
number
other
obj
weight
value
obj
weight
weight
value
weight
value
in
Edges
new
Weight
out
Edges
value
weight
src
dst
value
array
variable
value
src
dst
value
dst
dst
src1
src2
var
array
array
index
array
variable
variable
variable
cnd
lhs
branch
Is
Taken
op
op
instruction
ir
op
other
value
assigned
v
dst
call
Site
call
Site
v
dst
v
dst
filter
obj
filter
v
dst
v
dst
call
Site
call
Site
v
dst
field
field
obj
v
dst
cg
heap
Model
fam
cha
node
node
node
node
N
N
N
N
pk
pk
node
pk
call
Instr
pk
f
pk
writes
pk
r
field
src
dst
node
node
ir
ir
node
peis
exception
Var
catch
Classes
node
ir
du
node
cfg
b
v
node
cfg
b
node
ir
du
ir
e
node
ir
du
instruction
instruction
instruction
instruction
instruction
lval
is
Static
field
instruction
rval
is
Static
field
instruction
instruction
instruction
instruction
instruction
block
instruction
node
node
pk
pk
pk
pk
node
ir
node
ir
node
ir
node
cfg
b
v
node
cfg
b
node
ir
e
formal
Pk
node
site
actual
Pk
b
cg
heap
Model
mam
cha
call
Site
call
Site
v
dst
cg
heap
Model
mam
cha
node
ir
node
node
instruction
instruction
instruction
instruction
instruction
lval
ref
is
Static
field
instruction
rval
ref
is
Static
field
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
block
instruction
v
dst
field
field
obj
v
dst
v
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
call
Site
call
Site
v
dst
key
call
Site
Ref
obj
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
node
v
node
v
node
node
pk
pk
pk
sfk
sfk
pk
f
pk
f
formal
Pk
caller
site
actual
Pk
v
dst
cg
heap
Model
mam
cha
node
ir
node
heap
Model
g
cha
cg
node
instruction
instruction
instruction
instruction
instruction
lval
ref
is
Static
field
instruction
rval
ref
is
Static
field
instruction
instruction
instruction
instruction
ir
node
peis
exception
Var
catch
Classes
instruction
block
instruction
new
Instrs
arr
Store
Instrs
instruction
heap
Model
node
v
dst
field
field
v
dst
obj
filter
filter
v
dst
obj
v
dst
mam
heap
Model
cha
cg
node
v
node
v
node
ir
pk
pk
pk
sfk
sfk
pk
f
pk
h
pk
f
array
Ref
array
Ref
node
ir
ir
node
peis
exception
Var
catch
Classes
node
ir
obj
field
field
v
dst
call
Site
obj
cg
pa
pa
sdg
pa
mod
ref
array
Ref
array
Ref
base
Ref
field
base
Ref
field
field
field
stmts
result
base
Ref
field
base
Ref
field
array
Ref
array
Ref
field
field
node
cg
heap
Model
include
Prim
Ops
cg
n
e
n
i
instruction
instruction
instruction
instruction
instruction
loader
node
instruction
Index
instruction
instruction
instruction
instruction
instruction
pk
field
pk
field
pk
pk
field
field
index
node
obj
orig
from
CG
to
CG
ik
from
CG
to
CG
heap
Model
pk
from
CG
to
CG
heap
Model
traversal
Budget
cg
model
mam
cha
options
traversed
field
base
Ptr
val
label
state
field
base
Ptr
val
label
state
call
Site
And
CG
Node
a
b
field
base
Ptr
val
label
state
field
base
Ptr
val
label
state
field
base
Ptr
val
label
state
field
base
Ptr
val
label
state
declaring
Class
found
Pattern
klass
klass
cha
refine
Pattern
call
Site
And
CG
Node
cha
cha
call
Site
And
CG
Node
pass
Num
cha
cha
cha
field
Refine
Policy
cg
Refine
Policy
num
Passes
budget
Per
Pass
field
Refine
Policy
cg
Refine
Policy
pass
Num
field
base
Ptr
val
label
state
klass
klass
cha
call
Site
And
CG
Node
field
Refine
Policy
cg
Refine
Policy
budget
field
Refine
Policy
cg
Refine
Policy
field
Refine
Policy
cg
Refine
Policy
budget
prev
State
label
prev
State
label
pk
label
dst
label
dst
label
dst
label
dst
prev
State
label
ik
state
node
value
Number
filter
node
allocation
obj
obj
Type
type
S
node
allocation
dim
node
instr
type
I
node
I
field
node
value
Number
target
method
node
f
delegate
cha
wrapped
state
cg
model
fam
cha
options
pk
wrapped
state
obj
pk
state
entries
tmp
Entries
size
entry
cg
model
fam
cha
options
state
Machine
Factory
flow
Graph
e
e1
pk
ikey
Pred
pk
ikey
Pred
p2Set
With
States
cg
model
mam
cha
options
state
Machine
Factory
queried
ikey
Pred
e
e
pk
ikey
Pred
pa
e
e
cur
P2Set
ikey
Pred
pk
pk
ik
ik
And
State
ik
And
State
e
e
src
dst
label
obj
base
field
val
obj
base
field
val
pk
pk
And
State
int
Set
queried
p2set
Map
pk
And
State
vals
label
vals
type
Filter
cur
Pk
And
State
succ
Pk
label
cur
Pk
And
State
succ
Pk
And
State
label
cur
Pk
succ
Nodes
label
cur
Pk
And
State
pred
Pk
label
cur
Pk
And
State
succ
Pk
label
cur
Pk
And
State
pred
Pk
label
cur
Pk
And
State
pred
Nodes
label
pk
And
State
pk
And
State
pk
And
State
receiver
And
State
call
Site
And
CG
Node
src
dst
dst
To
Src
Label
label
dst
label
dst
label
dst
label
dst
src
dst
label
cur
Pk
And
State
handler
caller
State
ik
And
State
field
ik
To
Fields
ik
And
State
call
Site
And
CG
Node
call
Instrs
caller
State
label
dst
label
dst
label
dst
label
dst
label
dst
src
dst
label
cur
Pk
And
State
handler
add
Graphs
caller
State
add
Graphs
callee
pk
And
State
label
dst
label
dst
label
dst
label
dst
label
dst
src
dst
label
load
Edge
ik
And
State
field
M
key
M
key
cur
Tracked
Set
pred
Pk
And
State
label
node
site
node
cur
State
label
func
state
Machine
Factory
refinement
Policy
Factory
pk
pred
pto
Computer
pa
pk
And
State
pointer
Key
call
Site
And
CG
Node
call
Instrs
caller
State
cur
Pk
And
State
caller
State
pto
Computer
pointer
Key
And
State
pto
Computer
base
P
To
Set
pto
Computer
base
P
To
Set
putfield
Base
label
dst
label
dst
field
Write
field
field
load
Base
label
dst
label
dst
cur
Pk
pred
pa
cur
Pk
heap
Model
field
base
Ptr
val
label
state
call
possible
Targets
ik
And
State
cur
Tracked
Set
pred
Pk
And
State
label
prev
Stack
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
label
dst
call
Site
label
dst
call
Site
label
dst
label
dst
label
dst
label
dst
prev
State
label
recursion
Handler
prototype
call
Site
call
Sites
call
Site
call
Sites
just
Base
e
e
dir
e
path
loader
file
Name
index
index
method
o
N
N
N
number
number
number
N
N
N
N
N
N
number
N
N
number
number
n
number
N
src
dst
src
dst
src
dst
src
dst
src
dst
src
dst
src
dst
N
n
N
i
i
node
b
b
s
node
node
b
b
node
node
m
method
o
e
e
index
start
Index
last
e
e
b
b
o
index
e
T
T
instructions
method
context
e
o
instructions
r
r
instructions
r
i
instruction
instruction
instruction
instruction
instruction
instruction
index
r
i
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
index
phi
Instruction
pi
Instruction
arg0
start
last
b
b
normal
Succ
Node
Number
index
iindex
b
b
b
b
cfg
b
G
b
G
b
G
b
G
b
G
b
G
b
c
G
b
s
G
b
s
G
bb
c1
c2
cfg
a
b
ir
cha
e1
e
cha
ir
s
n
n
ir
ignored
Exceptions
ir
ignored
Exceptions
ir
param
State
m
State
ignored
Exceptions
ir
param
State
m
State
opt
Has
Exception
ir
ignored
Exceptions
ir
ignored
Exceptions
ir
param
State
m
State
cg
progress
ignored
Exceptions
cg
default
Exception
Method
State
progress
ignored
Exceptions
cg
default
Exception
Method
State
progress
opt
Has
Exceptions
progress
bb
primary
fallback
node
method
cg
map
node
CG
node
invoke
Instruction
cfg
ignored
Exceptions
cg
default
Method
State
progress
opt
Has
Exceptions
ignored
Exceptions
default
Method
State
opt
Has
Exceptions
cg
progress
start
Node
param
State
visited
progress
start
Node
param
State
progress
start
Node
param
State
progress
cg
filter
Set
full
CG
intra
node
cfg
deleted
Edges
progress
block
block
block
throws
Exception
map
n
n
orig
cfg
index
index
b
b
b
b
max
Var
Num
symbol
Table
parameter
State
max
Var
Num
symbol
Table
parameter
State
default
State
var
Num
from
Vars
var
Num
var
Num
phi
Functions
var
Num
var
Num
v
var
Num
rhs
other
var
Num
var
Num
obj
ssa
Var
Num
o
lhs
rhs
var
Num
from
Vars
lhs
rhs
o
var
Num
lhs
rhs
o
var
Num
lhs
rhs
o
lhs
rhs
o
m
state
parameter
Numbers
var
Num
state
var
Num
v
operators
o
lhs
rhs
ignored
Exceptions
ir
param
State
m
State
progress
bb
cfg
ir
block
src
dst
node
ir
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
deleted
src
dst
src
dst
problem
max
Var
Num
ir
entry
problem
max
Var
Num
entry
ir
initial
State
src
dst
n
IN
size
ir
cfg
ignore
Exceptions
initial
State
m
State
cfg
progress
block
bb
instr
instr
instr
var
Num
instr
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
cfg
ir
ignored
Exceptions
ir
param
State
m
State
opt
Has
Exceptions
progress
bb
node
node
want
Edge
Labels
from
to
s
forward
Edges
N
node
N
N
node
N
src
dst
src
dst
src
dst
node
node
node
cfg
want
Edge
Labels
cfg
from
to
bb1
bb2
call
d
exit
d
p
monitor
p
e
seed
edge
edge
edge
c
D4
edge
c
D4
entries
ret
Site
retf
c
entries
ret
Site
d4
D5
edge
s
p
n
d2
edge
edge
call
Node
Num
all
Return
Sites
callee
Entry
call
Node
callee
d1
got
Reuse
call
d
exit
d
f
d1
f
d2
f
s
p
i
n
j
s
p
s
p
i
n
j
s
p
i
n
j
s
p
proc
s
p
node
node
n1
d1
n2
p1
p2
n2
d2
n1
edge
m
d3
edge
callee
Entry
d3
edge
To
Call
Site
callee
Summary
Edge
return
Site
d5
p
bound
monitor
p
bound
monitor
s
p
i
n
j
i
i
n
call
call
call
callee
ret
callee
n
n
procedure
procedure
procedure
n
procedure
i
n
n
src
dest
p1
p2
cause
r
c
d1
d2
c
d2
d2
r
dest
i
i
dest
src
dest
call
src
dest
src
dest
src
dest
src
dest
ret
fast
Merge
i
n
j
i
n
n
j
n
d2
i
n
j
n
d1
n
d1
n
d1
n
x
j
gen
i
i
gen
s
p
x
d1
d2
s
p
x
d1
d2
s
p
x
d1
s
p
x
d2
c
r
p
monitor
p
monitor
s
p
i
n
j
seed
s
p
i
s
p
i
n
j
d2
icfg
cg
src
dest
r
callee
call
procedure
procedure
procedure
i
n
call
procedure
n
call
callee
n
n
n
n
N
n
N
n
src
dst
N
N
N
N
src
dst
node
src
dst
node
node
number
N
s
node
node
node
d1
src
dest
p
bound
monitor
p
bound
monitor
s
p
i
n
j
node
n1
d1
n2
elt
n
kill
i
i
kill
forward
Graph
forward
Graph
n
o
ret
ret
c
callee
n
n
N
n
n
N
N
N
N
src
dst
N
src
dst
src
dst
node
object
object
n
r
callee
n
src
dest
node
node
procedure
n
procedure
i
N
number
s
node
node
src
dest
src
dest
ret
call
src
dest
src
dest
src
dest
d1
p1
p2
s
p
d1
n
d2
s
p
d1
n
d2
obj
instruction
value
Number
ir
var
Factory
op
Factory
op
Factory
op
Factory
s
factory
value
Number
iindex
field
ref
iindex
val
default
Label
cases
And
Labels
insts
defs
uses
symbol
Table
v
j
case
Value
iindex
lval
entity
Type
token
insts
defs
uses
symbol
Table
v
i
iindex
result
site
iindex
result
site
params
insts
defs
uses
symbol
Table
params
symbol
Table
v
i
j
iindex
result
val
from
Type
to
Type
symbol
Table
v
i
j
iindex
result
val
pi
Block
successor
Block
cause
insts
defs
uses
symbol
Table
v
iindex
operator
result
val1
val2
insts
defs
uses
symbol
Table
v
i
j
iindex
result
val
types
is
PEI
insts
defs
uses
symbol
Table
v
i
j
iindex
lval
local
pointee
Type
iindex
lval
base
Pointer
index
Val
pointee
Type
iindex
lval
base
Pointer
field
pointee
Type
insts
defs
uses
symbol
Table
v
i
i
m
c
options
m
c
options
aux
method
c
iindex
result
val
i
j
method
c
method
c
options
method
iindex
result
val1
val2
i
j
iindex
object
Ref
member
Ref
symbol
Table
j
iindex
result
params
exception
site
iindex
params
exception
site
insts
defs
uses
result
params
site
v
i
j
call
Site
pei
Loc
i
v
iindex
operator
result
val
insts
defs
uses
symbol
Table
v
iindex
lval
local
pointee
Type
iindex
lval
local
index
Val
pointee
Type
iindex
lval
local
field
pointee
Type
iindex
result
arrayref
iindex
result
arrayref
index
declared
Type
iindex
arrayref
index
value
declared
Type
iindex
operator
overflow
unsigned
result
val1
val2
may
Be
Integer
iindex
result
val
type
Values
is
PEI
iindex
result
val
type
Value
is
PEI
iindex
result
val
types
is
PEI
iindex
result
val
type
is
PEI
iindex
operator
result
val1
val2
iindex
operator
type
val1
val2
target
iindex
result
val
from
Type
to
Type
overflow
iindex
bb
Number
exception
Value
Number
iindex
result
field
iindex
result
ref
field
iindex
target
iindex
result
ref
checked
Type
iindex
result
params
exception
site
bootstrap
iindex
params
exception
site
bootstrap
iindex
lval
t
address
Val
iindex
lval
entity
Type
token
iindex
ref
is
Enter
iindex
result
site
iindex
result
site
params
iindex
result
params
iindex
result
val
pi
Block
successor
Block
cause
iindex
ref
value
field
iindex
value
field
iindex
iindex
result
is
Primitive
iindex
address
Val
rval
pointee
Type
iindex
val
default
Label
cases
And
Labels
iindex
exception
iindex
operator
result
val
m
c
options
m
c
options
aux
method
c
constant
constant
constant
obj
iindex
insts
defs
uses
symbol
Table
symbol
Table
value
Number
v
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
i
j
obj
instruction
Index
method
cfg
scfg
instructions
symbol
Table
build
Local
Map
pi
Node
Policy
method
cfg
scfg
instructions
symbol
Table
build
Local
Map
pi
Node
Policy
symbol
Table
cfg
shrike
CFG
slot
rhs
bb
n
rhs
bb
rhs
bb
shrike
CFG
instructions
symbol
Table
local
Map
cfg
pi
Node
Policy
s
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
locals
instruction
locals
rval
instruction
pi
Cause
ref
call
cond
vn
instruction
instruction
e
shrike
Cfg
n
Instructions
n
Blocks
pc
local
Number
value
Number
builder
index
vn
e
max
Locals
locals
local
Number
value
Number
pc
vn
x
y
iindex
ref
val
field
iindex
val
field
insts
defs
uses
symbol
Table
v
j
method
instructions
symbol
Table
cfg
options
instruction
Index
j
val
Names
val
Num
b
b
b
i
i
x
v
v
start
site
site
site
site
pc
site
s
index
vn
index
vn
instruction
cond
def1
def2
symbol
Table
call
symbol
Table
cond
def1
def2
symbol
Table
instruction
instruction
instruction
iindex
address
Val
rval
pointee
Type
insts
defs
uses
symbol
Table
v
p1
p2
p1
p2
cond
def1
def2
symbol
Table
call
symbol
Table
obj
cond
def1
def2
symbol
Table
instruction
Index
name
instruction
Index
name
new
Def
instruction
Index
name
instruction
Index
name
new
Use
iindex
operator
type
val1
val2
target
insts
defs
uses
symbol
Table
v
j
iindex
result
params
exception
site
bootstrap
iindex
params
exception
site
bootstrap
insts
defs
uses
symbol
Table
iindex
result
ref
field
iindex
result
field
insts
defs
uses
symbol
Table
v
i
j
iindex
exception
insts
defs
uses
v
bytecode
Local
Number
obj
instruction
Array
Length
instruction
Index
name
instruction
Index
name
instruction
Index
name
new
Def
instruction
Index
name
new
Use
phi
call
symbol
Table
cond
def1
def2
symbol
Table
cond
def1
def2
symbol
Table
iindex
ref
is
Enter
insts
defs
uses
symbol
Table
v
j
iindex
result
arrayref
insts
defs
uses
symbol
Table
v
i
j
iindex
result
ref
checked
Type
insts
defs
uses
symbol
Table
v
i
j
factory
ir
Cache
du
Cache
m
c
options
m
c
options
ir
C
method
c
method
c
method
c
ir
e
s
i
s
i
s
s
v
v
uses
v
v
symtab
value
Number
default
Values
pi
Node
Policy
obj
iindex
lval
t
address
Val
insts
defs
uses
symbol
Table
v
method
cfg
instructions
cfg
cfg
o
set
loader
G
instruction
Index
n
src
path
x
number
slot
n
slot
phi
n
phi
to
Remove
n
path
n
path
pi
a
number
arg0
number
catch
Instruction
exception
Type
i
b
number
b
b
b
b
n
src
dst
src
dst
node
N
n
index
N
b
b
block
src
dest
src
dest
b
b
s
node
node
src
dst
b
node
type
method
type
method
bb
ir
e
ir
solution
ir
DU
value
size
ir
ir
index
bb
bb
bb
bb
index
N
n
N
n
src
dst
bb
bb
N
bb
src
dst
node
src
dst
node
node
number
n
s
node
node
instruction
Index
original
number
obj
iindex
result
arrayref
index
element
Type
insts
defs
uses
symbol
Table
v
i
iindex
result
is
Primitive
iindex
insts
defs
uses
table
v
j
cond
def1
def2
symbol
Table
obj
call
symbol
Table
cond
def1
def2
symbol
Table
iindex
bb
Number
exception
Value
Number
insts
defs
uses
symbol
Table
v
i
iindex
arrayref
index
value
element
Type
insts
defs
uses
symbol
Table
v
j
number
Of
Parameters
o
o
is
Default
vn
val
e
vn
default
Value
vn
b
i
l
f
d
v
s
i
e
vn
i
e
value
Number
v
e
v
e
v
e
v
e
v
v
v
e
v
v
e
v
e
v
e
v
e
v
e
v
e
v
e
v
e
rhs
value
Number
e
v
v
v
v
v
v
value
Number
value
Number
e
call
symbol
Table
cond
def1
def2
symbol
Table
cond
def1
def2
symbol
Table
iindex
target
insts
defs
uses
symbol
Table
v
iindex
arrayref
index
element
Type
j
method
c
options
method
iindex
operator
result
val1
val2
may
Be
Integer
symbol
Table
v
iindex
result
params
insts
defs
uses
symbol
Table
v
i
j
i
symbol
Table
value
Number
iindex
exception
site
i
i
symbol
Table
iindex
exception
symbol
Table
j
node
lhs
rhs
o
pa
e
n
n
n
n
src
dst
n
n
N
n
src
dst
node
src
dst
node
node
options
cha
caller
site
callee
receivers
node
call
input
ir
b
targets
src
dst
o
lhs
rhs
node
v
one
two
instance
other
i
instance
prefix
instance
ID
string
Instance
ID
input
instance
ID
uri
Instance
ID
string
Instance
ID
input
instance
ID
dependencies
input
instance
ID
constant
Value
input
ik
pa
ik
pa
instance
ID
concatenated
Instance
Keys
input
csr
k
mref
ik
pa
ik
mapping
unresolved
Dependencies
ik
pa
e
nain
mapping
unresolved
Dependencies
lpk
pa
mapping
unresolved
Dependencies
ik
pa
mapping
unresolved
Dependencies
ik
pa
mapping
unresolved
Dependencies
n
n
n
n
src
dst
n
n
N
n
src
dst
node
src
dst
node
node
im
mref
tref
ik
type
Name
n
signature
im
signature
pk
signature
ik
signature
ik
other
id
obj
field
Ref
obj
other
code
Element
e
o
o
p1
p2
n
o
code
Element
taint
Source
obj
value
Number
obj
object
field
Ref
other
block
ssa
Val
sink
Flow
ctx
flow
Result
domain
obj
taint
Map
block
taint
Type
new
Elements
taint
Map
block
taint
Type
element
ctx
taint
Map
ss
cg
graph
cha
pa
ctx
taint
Map
ss
cg
graph
pa
ctx
taint
Map
ss
AL
graph
pa
cha
cg
analysis
Context
s
ctx
cg
cha
graph
pa
s
domain
d
domain
def
d1
domain
d
domain
use
To
Def
List
d
domain
actual
Params
d1
domain
graph
pa
instruction
instruction
instruction
in
Block
instruction
instruction
p
instruction
p
instruction
p
ch
instruction
p
ch
instruction
p
instruction
p
instruction
p
ch
instruction
p
instruction
p
ch
method
ch
declared
Field
d1
set
taint
Type
d1
src
dest
ret
src
dest
src
dest
src
dest
dest
call
d1
call
src
dest
domain
pa
node
d
use
def
src
dest
src
dest
ret
call
src
dest
src
dest
src
dest
domain
d1
domain
elts
d1
function
d1
fst
snd
domain
pa
domain
pa
taint
Static
Fields
key
key
src
dest
ret
e
src
src
dest
src
dest
src
dest
e
dest
dest
inst
flow
Function
call
src
dest
node
inst
node
inst
e
node
inst
inst
node
inst
g
h
f
g
block
arg
Num
source
obj
v
block
field
source
v
obj
ik
block
source
obj
v
block
source
v
block
source
obj
a
b
v
flow
flow
flow
flow
flow
block
field
source
obj
v
analysis
Context
initial
Taints
d
analysis
Context
initial
Taints
d
flow
Function
Map
graph
cg
pa
initial
Taints
d
graph
cg
initial
Taints
d
flow
Function
Map
e
ctx
specs
graph
source
dest
flow
Result
domain
flow
Graph
sink
Specs
flow
Result
domain
flow
Graph
ss
flow
Result
domain
flow
Graph
ss
flow
Result
domain
flow
Result
domain
s
flow
Result
domain
flow
Graph
ss
sink
Spec
sink
Spec
sink
Spec
invoke
Inst
sink
Spec
sink
Spec
ctx
flow
Result
domain
spec
block
ctx
flow
Result
domain
analysis
Context
e
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
task
total
Work
units
sub
Task
analysis
Context
specifier
analysis
Context
specifier
extra
Summaries
e
root
IK
method
g
labels
dot
File
output
File
dot
Exe
g
labels
title
dot
File
output
File
dot
Exe
dot
Exe
output
File
dot
File
e1
e
e
e
e
g
labels
title
dotfile
e
g
labels
title
labels
result
dot
Nodes
labels
result
n
g
n
d
o
d
o
d
font
Size
s
node
clr
method
clr
decl
Class
clr
cha
cha
cha
cha
classpath
e
e
s
Tag
e
Element
base
Package
e
Element
cha
intent
name
args
req
Args
exp
arg
req
Args
s
s
options
options
exclusions
options
cache
cha
scope
custom
Selector
custom
Interpreter
summaries
Stream
extra
Summary
options
cache
cha
scope
custom
Selector
custom
Interpreter
summaries
Streams
extra
Summary
options
scope
xml
I
Stream
cha
extra
Summary
e
scope
xml
I
Stream
e
i
Root
method
p
cha
scope
specs
specs
tr
tr
tr
i
is
Inner
params
site
c
name
args
block
cha
method
Signature
name
block
c
m
d
c
m
c
cha
method
Ref
s1
s2
a
b
field
method
block
n
ctx
taint
Map
im
block
inv
Inst
new
Arg
Nums
graph
pa
cg
name
args
ctx
taint
Map
target
block
inv
Inst
new
Arg
Nums
graph
pa
cg
block
name
args
block
name
args
ctx
taint
Map
im
block
inv
Inst
new
Arg
Nums
graph
pa
cg
block
c
m
cl
field
ctx
taint
Map
im
block
inv
Inst
new
Arg
Nums
graph
pa
cg
name
args
ctx
taint
Map
im
block
inv
Inst
new
Arg
Nums
graph
pa
cg
n
block
cha
doc
arg
Count
instruction
instruction
e
instruction
e
instruction
instruction
instruction
instruction
instruction
instruction
instruction
e
instruction
e
instruction
e
instruction
e
instruction
e
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
def
Num
def
Num
field
Type
e
string
e
summary
class
Loader
Name
pkg
class
Name
class
Loader
Name
class
Loader
Name
pkg
summary
summary
e
e
options
source
Plugin
project
Name
zip
File
Name
plugin
project
Name
zip
File
Name
monitor
project
Name
e
project
Name
e
project
Name
root
monitor
project
Name
zip
File
monitor
e
provider
monitor
project
Name
root
e
plugin
filename
e
plugin
test
Archive
e
e
args
classpath
e
cha
g
g
f
args
args
app
Jar
e
app
Jar
args
p
e
e
args
context
context
project
project
cha
options
cache
e
project
project
file
Ext
entrypoints
new
Application
Window
new
Block
Input
viewer
result
pdf
File
dot
File
dot
Exe
pdf
View
Exe
labels
viewer
result
ps
File
dot
File
dot
Exe
gv
Exe
result
o
s
e
new
Graph
Input
new
Roots
Input
new
Node
Decorator
Input
e
e
graph
parent
viewer
old
Input
new
Input
parent
Element
element
element
input
Element
element
e
new
Dot
Exe
new
Gv
Exe
r
roots
r
roots
labels
e
e
r
roots
labels
scratch
Directory
r
viewer
cg
ps
File
dot
File
dot
Exe
gv
Exe
e
plug
In
file
Name
e
file
Name
loader
p
file
Name
p
file
Name
e
url
e
file
Name
loader
file
Name
loader
e
p
file
Name
d
d
task
total
Work
units
sub
Task
p
entry
project
entry
loader
include
Source
cpe
From
Main
Project
project
include
Source
ref
scope
Type
project
loader
p
z
loader
include
Source
cpe
From
Main
Project
p
o
exclude
Paths
file
Extension
include
Source
p
e1
p
include
Source
e
project
bd
loader
include
Source
bd
project
j
project
l
loader
include
Source
entries
From
Top
Level
Project
p
class
Loader
exclusions
File
scope
exclusions
File
loader
e
p
bd
cmd
Line
e
pred
file
project
files
errors
modules
compiler
scope
File
Name
exclusions
File
java
Loader
scope
File
Name
exclusions
File
java
Loader
plug
In
exclusions
File
exclusions
File
plug
In
class
Path
exclusions
File
class
Path
exclusions
File
plug
In
exception
exception
context
context
pattern
excludes
root
exclude
Paths
root
exclude
Paths
file
Ext
file
file
f
f
e
project
p
p
context
context
context
context
file
plugin
project
mes
file
project
files
errors
node
e
e
node
node
source
ast
e
project
Name
e
ref
models
p
models
project
p
e
entry
project
entry
loader
include
Source
cpe
From
Main
Project
project
include
Source
e
models
p
models
loader
include
Source
cpe
From
Main
Project
p
o
exclude
Paths
file
Extension
e1
e1
project
models
builder
Type
exclusions
project
script
Name
project
builder
Type
entrypoints
cha
exclusions
project
cha
options
cache
script
Name
m
roots
function
context
action
target
Part
selection
selection
scope
Type
monitor
e1
e2
e
project
Paths
loader
project
Paths
scope
seen
action
e
action
selection
java
Elt
e
cu
e
type
type
java
Elt
jdt
Handle
cu
e
java
Elt
java
Project
type
Signature
app
Jar
project
Name
e
fully
Qualified
Name
projects
e
class
Name
resources
klass
selector
projects
t
e
type
selector
type
e
selector
e
sigs
method
Sig
match
e
elt
e
match
e
project
Names
project
Name
java
Source
File
pos
root
pos
ref
scope
Type
p
scope
Type
p
e
entry
project
entry
loader
include
Source
cpe
From
Main
Project
e
project
include
Source
e
start
end
start
Line
end
Line
eclipse
File
path
e
arg0
obj
pos
context
context
project
project
Name
dump
exclusions
project
cha
options
cache
proj
source
ast
e
scope
source
Loader
scope
source
Loader
dump
scope
modules
cu
source
File
full
Path
start
end
exclusions
exclusions
dump
class
Loader
Reference
cha
parent
scope
class
Loader
Reference
cha
parent
loader
Ref
parent
cha
loader
Ref
parent
cha
dump
args
e
main
Class
scope
File
bench
Name
e
scope
File
main
Class
bench
Name
bench
Name
cha
options
e
cha
cg
dmp
context
context
project
main
Class
Descriptors
sources
libs
main
Class
Descriptors
project
cha
e
context
context
package
Name
cg
cg
fully
Qualified
Type
Name
method
Name
method
Parameter
method
Return
Type
project
Name
cg
src
Descriptor
src
Descriptor
tgt
Descriptor
src
Descriptor
tgt
Descriptor1
tgt
Descriptor2
src
Descriptor
tgt
Descriptor1
tgt
Descriptor2
tgt
Descriptor3
src
Descriptor
tgt
Descriptor1
tgt
Descriptor2
tgt
Descriptor3
tgt
Descriptor4
call
Graph
method
find
Instruction
operand
position
cg
method
variable
Name
defining
Line
Number
cg
m
ir
class
Name
annotation
Type
Name
method
Sig
annotation
Type
Name
cg
folder
pkg
Name
pkg
Name
main
Class
Descriptors
sources
libs
sources
libs
main
Class
Descriptors
ca
assert
Reachable
exclusions
File
cg
sources
assert
Reachable
src
Method
Descriptor
cha
loader
Name
type
Str
cha
loader
Name
cha
engine
sources
libs
e
test
Src
Path
pkg
Name
pkg
Name
project
Name
e
project
Name
project
Name
cg
s
e
class
Name
method
Name
method
Descriptor
tmp
Dir
test
Direction
sync
Node
rest
o
Ast
recursive
f
original
test
Direction
sync
Node
parent
n
node
Map
old
Source
label
old
Target
orig
src
c
n
root
n
cfg
c
node
Map
sdg
ss
sdg
ss
backward
CG
partial
Roots
filter
CG
partial
Roots
CG
partial
Roots
CG
partial
Roots
CG
partial
Roots
CG
pa
partial
Roots
multi
Threaded
Code
cha
options
cache
app
Context
Selector
app
Context
Interpreter
instance
Policy
options
cache
cha
cl
scope
xml
Files
instance
Policy
cha
options
cache
languages
loader
m
builder
basic
base
cls
base
smik
name
fake
Root
Class
options
cache
pointer
Key
Factory
field
Key
inner
outer
o
ir
vn
inst
instruction
node
vn
builder
node
lval
Key
cls
obj
Key
lhs
rhs
o
inst
instruction
instruction
node
op
Node
defining
Method
language
cha
options
cache
app
Context
Selector
app
Context
Interpreter
cha
options
context
Interpreter
cha
keys
n
result
pa
h
instruction
inst
n
result
pa
h
n
result
h
pa
instruction
inst
n
result
pa
h
ignore
Alloc
Heap
Defs
long
Name
short
Name
long
Name
long
Name
M
M
M
exclusions
e
cha
entrypoints
cha
options
cache
options
cache
cha
options
cache
cha
options
cache
cha
src
Loader
exclusions
src
Loader
cast
Rewriter
Factory
exclusions
src
Loader
cast
Rewriter
Factory
debug
exclusions
module
ce
modules
module
source
File
Entity
loader
exclusions
type
context
exception
context
result
array
Value
array
Ref
Node
dim
Values
context
array
Value
array
Ref
Node
dim
Values
rval
context
result
receiver
elt
parent
context
receiver
elt
parent
rval
n
context
result
exception
fn
context
new
Node
result
type
arguments
n
context
context
call
result
exception
name
receiver
arguments
context
name
type
rval
top
Entity
defining
Context
n
N
defining
Context
N
defining
Context
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
result
Val
context
primitive
Call
parent
f
entity
entity
type
wc
n
c
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
wc
visitor
name
n
instruction
inst
instruction
value
Number
ir
do
Primitives
value
Number
lhs
rhs
o
type
Name
super
Type
Names
position
qualifiers
loader
enclosing
Class
annotations
method
Entity
owner
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
method
Entity
owner
field
Entity
e
field
Entity
loader
declaring
Class
annotations
method
Entity
owner
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
method
Entity
owner
i
method
Entity
method
Entity
method
Entity
owner
bc
Index
local
Number
method
Entity
owner
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
bc
Index
local
Number
qualifiers
exists
Common
Super
Class
loader
Ref
parent
cha
loader
Ref
parent
cha
modules
modules
n
owner
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
n
owner
n
owner
type
type
type
Name
owner
iindex
lval
type
iindex
result
site
enclosing
iindex
result
params
exception
site
iindex
value
from
Specification
iindex
result
val
iindex
value
object
Ref
prop
Ref
iindex
value
object
Ref
prop
Ref
iindex
rvals
iindex
lhs
global
iindex
global
rhs
iindex
lval
rval
field
Val
field
Ref
iindex
lval
rval
field
Ref
iindex
lval
rval
field
Val
iindex
lval
rval
iindex
accesses
iindex
access
iindex
lhs
definer
global
Name
type
iindex
accesses
iindex
access
iindex
definer
global
Name
type
rhs
iindex
rvals
iindex
result
object
Ref
member
Ref
iindex
object
Ref
member
Ref
value
method
Entity
field
Entity
i
iindex
result
site
enclosing
insts
defs
uses
iindex
lval
type
i
insts
defs
uses
symbol
Table
v
iindex
results
params
exception
site
iindex
result
params
exception
site
iindex
params
exception
site
insts
results
params
exception
v
instruction
inst
instruction
inst
iindex
result
params
exception
site
iindex
lval
type
iindex
result
site
enclosing
args
ch
args
v
v
args
a
z
a
b
args
absuba
i
a
args
args
args
args
x
s
args
ss
args
x
x
args
args
args
args
args
e
xx
args
args
args
var
e
x
N
args
args
args
args
x
x
args
absuba
args
args
i
o
val
i
o
wrapper
args
args
e
e
x
N
args
c
c
args
args
args
args
fs
args
fs
args
v
v
args
args
x
args
args
i
args
args
args
args
a
args
args

y
args
f
f
args
args
args
args
args
args
args
args
args
args
e
args
args
a
b
a
b
args
c
c
c
args
x
x
x
args
args
translation
d
args
a
c
x
y
args
s
args
args
args
args
d
args
x
x
args
x
args
args
x
y
a
b
a
a
b
args
args
args
x
y
x
y
foo
xa
ya
z
args
args
args
args
caballo
args
a
args
path
con
e
args
instruction
state
s
register
register
register
register
register
register
address
address
address
address
address
address
args
args
day
Of
Week
Arg
args
i
arr
ex
t
args
args
args
elt
elt
l
elt
args
args
e
e
e
e
classes
object
Class
reference
args
args
main
Class
Descriptors
sources
libs
cha
main
Class
Descriptors
sources
libs
cha
main
Class
Descriptors
sources
libs
cha
main
Class
Descriptors
sources
libs
cha
main
Class
Descriptors
sources
libs
cha
cg
cg
main
Class
Descriptors
sources
libs
cha
exclusions
class
Loader
Reference
cha
parent
ast
Root
full
Path
start
end
e
exclusions
ast
identity
Mapper
ast
Type
ast
Type
array
Type
type
constituents
exception
Binary
Name
variable
Type
o
dimension
type
type
binding
clr
ast
type
type
type
field
key
type
ID
met
Name
return
Type
ID
met
met
exclusions
class
Loader
Reference
cha
parent
scope
class
Loader
Reference
cha
parent
loader
Ref
parent
cha
loader
Ref
parent
cha
dump
source
Loader
ast
Root
full
Path
replicate
For
Do
Loops
dump
start
end
e
source
Map
source
ast
scope
source
Loader
scope
source
Loader
dump
scope
e
modules
cu
full
Path
modifiers
is
Interface
is
Annotation
op
operator
type
type
t1
t2
ast
n
ct
return
Type
ast
return
Type
ast
op
met
klass
superclassonly
overridden
met
met1
met2
source
Loader
ast
Root
full
Path
replicate
For
Do
Loops
source
Loader
ast
Root
full
Path
replicate
For
Do
Loops
dump
arg
jdt
Type
name
quals
entities
pos
name
Pos
construct
node
decl
n
context
n
body
Decls
enum
Constants
type
Binding
name
modifiers
is
Interface
is
Annotation
context
name
Pos
n
context
n
context
ctor
n
old
Context
inits
class
Binding
old
Context
inits
positioning
Node
super
Class
n
class
Binding
context
inits
overriding
overriding
Binding
overridden
old
Context
n
class
Binding
old
Context
inits
binding
construct
mdast
decl
type
entities
context
annotations
mdast
type
entities
context
annotations
mdast
decl
type
entities
context
parameter
Types
return
Type
annotations
mdast
decl
type
entities
context
parameter
Types
return
Type
modifiers
annotations
arg
node
context
name
type
quals
position
annotations
name
Pos
construct
arg
n
context
n
context
n
context
n
context
n
context
n
context
n
context
nn
arguments
ctor
Binding
qual
anon
Decl
context
met
mapped
Ast
Node
context
n
context
n
context
n
context
pos
method
Binding
target
arguments
context
children
method
Binding
arguments
context
r
context
n
context
assign
context
n
context
n
n
n
context
n
context
n
context
n
context
type
Of
This
owning
Type
is
Private
n
context
target
Node
field
Name
possibly
Parameterized
Binding
positioning
Node
context
n
context
n
context
n
context
op
left
Type
left
Start
Position
left
Length
left
Node
right
context
n
context
n
context
n
context
ctor
Binding
arguments
caller
Node
context
is
Super
n
context
n
context
n
context
pos
arg
Node
casted
From
casted
To
context
n
context
n
context
n
context
n
context
n
context
n
context
loop
name
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
context
n
wc
n
context
n
context
n
context
n
context
n
context
n
context
coll
package
Declaration
top
Level
Decls
construct
arg
type
parent
type
type
parent
parent
try
Node
label
parent
label
break
To
label
parent
label
break
To
continue
To
label
parent
entities
v
node
entity
label
wc
Ast
n
kind
wc
Ast
n
kind
c
wc
Ast
pos
kind
c
wc
Ast
n
kind
c1
c2
wc
Ast
n
kind
c
wc
Ast
n
kind
c1
c2
c3
wc
Ast
n
kind
c1
c2
c3
c4
wc
Ast
pos
kind
c1
c2
c3
wc
cn
jdt
Node
n
start
end
decl
node
context
enum
Type
old
Context
enum
Type
constants
old
Context
type
Binding
member
Entities
context
n
context
ctor
n
old
Context
inits
non
Default
Ctor
CG
builder
time
args
scope
args
processor
main
Class
cha
CG
assertion
Data
CG
assertion
Data
vn
instruction
Index
name
CG
assertion
Data
CG
assertion
Data
CG
source
Description
dest
Description
CG
function
Identifier
data
file
Names
cha
cha
assertions
args
assertions
arg
assertions
e
root
construct
arg
ast
Ast
source
URL
factory
prepend
construct
arg
kind
children
p
n
names
context
result
array
Value
array
Ref
dim
Values
context
array
Value
array
Ref
dim
Values
rval
Ast
source
URL
source
File
Name
fl
fc
ll
lc
name
modifiers
is
Static
declaring
Class
S
N
file
type
file
type
factory
prepend
message
n
s
new
Node
visit
label
label
new
Node
visit
label
label
parent
parent
break
Target
label
l
parent
break
To
continue
To
label
l
parent
catch
Node
parent
catch
Node
s
parent
s
construct
e
replicate
For
Do
Loops
ast
loop
Test
loop
Body
continue
Node
break
Node
wc
context
n
p
type
from
to
from
to
label
n
pos
n
type
Ast
pos
construct
construct
child
type
type
wc
N
context
N
defining
Context
cfg
symtab
has
Catch
Block
catch
Types
has
Monitor
Op
lexical
Info
debug
Info
top
Entity
context
field
Entity
parent
f
context
exception
context
result
array
Value
array
Ref
dim
Values
context
array
Value
array
Ref
dim
Values
rval
context
result
receiver
elt
parent
context
receiver
elt
parent
rval
node
context
result
exception
fn
context
new
Node
result
type
arguments
context
call
result
exception
name
receiver
arguments
label
context
result
Val
context
primitive
Call
context
name
type
context
nm
type
rval
node
context
name
type
name
context
name
type
context
name
defining
Scope
type
E
entity
Name
is
Write
context
name
type
rval
node
context
name
type
context
name
type
rval
global
Name
loader
named
Entity
Resolver
array
Op
Handler
loader
named
Entity
Resolver
loader
code
Body
Name
Position
code
Body
Position
instruction
Positions
operand
Positions
parameter
Positions
names
code
Positions
instruction
Offset
instruction
Offset
operand
param
a
b
instruction
Offset
set
instruction
Offset
instruction
Offset
number
first
Index
last
Index
unwind
Ast
ast
Context
ast
Visitor
o
other
block
context
node
context
source
target
exception
node
Map
old
Source
label
old
Target
orig
src
fall
Thru
From
Prior
src
dst
exception
bb
bb
n
n
exit
Block
node
context
n
n
context
src
dst
exception
src
dst
exception
src
exception
src
exception
src
dst
block
n
instruction
instruction
instruction
f
n
src
dst
blocks
icfg
normal
except
icfg
n
icfg
symtab
insts
o
index
index

name
type

name
type

name
type

is
Final

name
type

is
Final

is
Case
Insensitive

name
type

is
Final

is
Case
Insensitive

default
Init
Value
s
c
value
Number
value
Number
s
s
value
Number
name
name
name
s
s
defining
Scope
is
Final
Value
default
Value
cv
o
value
Number
value
Number
s
vn
s
parent
nm
s
s
vn
nm
type
is
Final
is
Internal
Name
default
Init
Value
vn
parent
nm
nm
nm
s
s
s
parent
s
nm
type
is
Final
is
Internal
Name
default
Init
Value
vn
definer
f
f
f
parent
s
n
nm
type
is
Final
is
Internal
Name
default
Init
Value
value
Number
definer
parent
s
nm
type
is
Final
is
Internal
Name
default
Init
Value
vn
definer
nm
s
s
c
value
Number
value
Number
name
name
name
s
vn
s
type
parent
nm
s
s
c
value
Number
value
Number
name
name
nm
s
vn
s
bb
catch
Type
catch
Node
catch
Type
e
name
e
n
n
v
n
entity
write
Set
e
parent
e
bb
catch
Type
catch
Node
catch
Type
e
name
e
n
n
v
n
entity
write
Set
parent
unit
Name
unwind
Node
parent
visitor
parent
s
parent
entity
Scope
s
e
entity
write
Set
catch
Node
catch
Type
bb
catch
Type
n
n
v
n
parent
n
parent
local
Scope
original
exposed
Names
entity
Name
exposed
Names
entity
Name
scope
instrs
exposed
Names
For
Read
Set
exposed
Names
For
Write
Set
accesses
instruction
Offset
name
caller
site
context
e
access
entity
declaration
name
value
Number
is
Write
context
context
symtab
vn
value
op
op
op
n
scopes
insts
context
node
map
n
c
n
c
n
context
n
n
context
visitor
n
context
file
Context
visitor
n
context
file
Context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
type
Context
visitor
n
context
type
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
function
Context
n
parent
Context
function
Context
e
context
n
context
n
name
name
name
nm
type
is
Final
is
Internal
Name
default
Init
Value
vn
parent
s
context
n
visitor
n
context
n
c
visitor
n
c
visitor
n
c
visitor
n
context
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
op
context
n
context
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
is
Expr
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
i
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
i
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
c
n
v
a
temp
c
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
context
ls
nm
rval
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
context
n
caught
Type
n
c
visitor
n
c
visitor
n
c
visitor
n
context
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
n
c
visitor
expr
root
cfg
c
node
Map
N
c
N
module
bb
catch
Type
cast
Node
catch
Type
e
name
e
n
n
v
n
entity
write
Set
e
N
module
N
context
context
result
ref
f
type
Ast
op
lhs
rhs
root
cfg
context
node
Map
m2
base
factory
prepend
Ast
name
type
modifiers
top
N
context
n
n
c
visitor
n
c
visitor
n
c
visitor
c
nm
is
Write
n
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
context
visitor
n
context
v
a
visitor
parent
index
index
b
b
b
b
CFG
Y
X
instructions
method
context
r
inst
inst
inst
inst
instruction
instruction
instruction
inst
inst
inst
inst
r
inst
inst
inst
inst
instruction
instruction
instruction
inst
inst
inst
inst
r
r
iindex
accesses
iindex
access
iindex
lhs
definer
global
Name
type
insts
defs
uses
i
i
symbol
Table
v
iindex
results
exception
site
i
iindex
result
object
Ref
member
Ref
symbol
Table
i
name
definer
type
vn
other
iindex
accesses
accesses
i
iindex
value
from
Specification
i
insts
defs
uses
symbol
Table
v
iindex
result
object
Ref
member
Ref
insts
defs
uses
v
iindex
rvals
insts
defs
uses
symbol
Table
v
iindex
lval
rval
field
Val
field
Ref
iindex
lval
rval
field
Ref
iindex
lval
rval
field
Val
iindex
lval
rval
insts
defs
uses
symbol
Table
v
i
j
iindex
rvals
insts
defs
uses
symbol
Table
v
iindex
definer
global
Name
type
rhs
iindex
access
iindex
accesses
insts
defs
uses
i
i
symbol
Table
v
inst
inst
inst
index
inst
inst
index
inst
Y
V
vn
value
Number
value
Y
B
index
B
index
inst
phi
new
Defs
BB
phi
Index
rval
Index
new
Rval
inst
index
new
Uses
inst
index
new
Defs
new
Uses
inst
index
new
Rhs
inst
index
ir
options
ir
ir
A
BB
i
BB
BB
v
BB
BB
v
X
i
X
stack
elt
stack
stack
X
X
inst
inst
inst
index
v
value
Number
value
Number
v
iindex
rvals
i
i
iindex
l
Value
object
Ref
previous
Prop
insts
defs
uses
symbol
Table
v
instruction
instruction
instruction
instruction
instruction
instruction
instruction
inst
inst
inst
inst
method
ast
Factory
method
context
options
method
context
ssacfg
oldcfg
cfg
map
instruction
Index
method
instructions
symbol
Table
cfg
options
method
context
options
method
instruction
Index
use
Number
o
B
Bnumber
phi
Number
use
Number
o
o
instruction
Index
rhs
rec
instruction
Index
use
BB
phi
Number
use
inst
use
val
rhs
ir
instruction
use
ir
from
Inst
from
Use
to
Inst
to
Use
pc
vn
instruction
Index
use
Number
from
Inst
from
Use
to
Inst
to
Use
v
stack
elt
stack
inst
inst
index
inst
inst
index
inst
vn
Y
V
BB
phi
value
Y
B
index
B
index
inst
phi
new
Defs
BB
phi
Index
rval
Index
new
Rval
inst
index
new
Rhs
inst
index
new
Uses
inst
index
new
Defs
new
Uses
inst
index
value
Number
inst
index
M
ir
options
v
ir
M
ir
options
M
ir
options
values
i
iindex
result
val
iindex
value
from
Specification
iindex
rvals
iindex
lhs
global
iindex
global
rhs
iindex
lval
rval
field
Val
field
Ref
iindex
lval
rval
field
Ref
iindex
lval
rval
field
Val
iindex
lval
rval
iindex
accesses
iindex
access
iindex
lhs
definer
global
Name
type
iindex
accesses
iindex
access
iindex
definer
global
Name
type
rhs
iindex
l
Value
object
Ref
previous
Prop
iindex
l
Value
object
Ref
previous
Prop
iindex
result
object
Ref
member
Ref
iindex
object
Ref
member
Ref
value
iindex
rvals
iindex
object
Ref
member
Ref
value
insts
defs
uses
symbol
Table
v
instruction
instruction
instruction
instruction
instruction
inst
inst
inst
inst
inst
instruction
instruction
iindex
result
val
insts
defs
uses
symbol
Table
v
iindex
global
rhs
insts
defs
uses
symbol
Table
v
iindex
object
Ref
member
Ref
value
symbol
Table
index
iindex
l
Value
object
Ref
previous
Prop
Val
insts
defs
uses
symbol
Table
v
iindex
lhs
global
insts
defs
uses
symbol
Table
v
bb
value
Number
bb
value
Number
instr
ir
cfg
symtab
cfg
symtab
consider
Live
At
Exit
o
lhs
rhs
block
o
inst
bits
inst
bits
lhs
rhs
node
s
d
e
bb
value
Number
bb
value
Number
instr
iindex
results
params
exception
site
iindex
result
params
exception
site
iindex
params
exception
site
insts
result
params
exception
insts
defs
uses
v
j
object
x
fake
Root
Class2
options
cache
root
Method
declaring
Class
cha
options
cache
root
Method
cha
options
cache
statements
type
name
root
Method
declaring
Class
cha
options
cache
root
Method
cha
options
cache
function
Vn
arg
Vns
call
Site
T
method
context
e
callback
callbacks
callback
callback
cs
site
node
method
context
language
Selectors
type
site
site
type
node
allocation
node
allocation
dim
type
S
node
instr
type
obj
obj
Type
base
node
value
Number
node
value
Number
filter
node
node
f
I
I
f
I
I
F
F
I
F
I
F
type
field
Name
language
fake
Root
Class
options
cache
pointer
Key
Factory
app
Context
Interpreter
options
cha
options
builder
builder
cg
points
To
Map
instance
Keys
pointer
Keys
i
Key
Factory
I
I
F
I
F
I
lpk
analysis
lpk
instruction
instruction
instruction
instruction
instruction
instruction
instruction
inst
inst
inst
inst
fake
Root
Class
options
vn
instruction
instruction
instruction
instruction
instruction
instruction
instruction
inst
inst
inst
inst
node
vn
node
vn
du
node
builder
node
I
I
F
I
F
op
instruction
instruction
instruction
instruction
lexical
Key
vn
instruction
lexical
Key
vn
instruction
instruction
inst
e
lhs
rhs
o
instruction
inst
inst
lhs
rhs
o
inst
inst
node
accesses
is
Load
lhs
rhs
lexical
Key
vn
o
op
Node
definer
lhs
name
definer
defining
Node
name
definer
defining
Node
name
x
field
Key
field
Key
const
Obj
const
Prop
op
Node
obj
Vn
fields
Vn
is
Load
Operation
action
op
Node
is
Load
Operation
action
obj
Vn
fields
Keys
is
Load
Operation
action
obj
Key
field
Key
lhs
rhs
o
is
Load
Operation
action
obj
Key
fields
Keys
lhs
rhs
o
is
Load
Operation
action
field
Key
obj
Keys
lhs
rhs
o
is
Load
Operation
action
obj
Keys
fields
Keys
op
Node
obj
Vn
fields
Vn
rhs
Vn
rhs
Fixed
Values
field
Key
const
Obj
const
Prop
field
Key
op
Node
obj
Vn
fields
Vn
rhs
Fixed
Values
op
Node
obj
Vn
field
Keys
rhs
Values
rhs
field
Key
const
Obj
const
Prop
field
Key
op
Node
obj
Vn
fields
Vn
rhs
op
Node
obj
Vn
field
Keys
rhs
op
Node
obj
Vn
fields
Vn
lhs
Vn
lhs
field
Key
const
Obj
const
Prop
field
Key
lhs
op
Node
obj
Vn
fields
Vn
lhs
field
Key
op
Node
defining
Method
language
Selectors
target
site
caller
site
script
dir
name
script
script
Name
e
files
loaders
language
files
loaders
language
factory
nd
method
interp
PA
CG
e
file
Name
Args
e
options
cache
method
N
N
language
Selectors
target
site
site
caller
site
receiver
loaders
languages
source
File
Names
loaders
languages
sources
loaders
languages
loader
file
name
concrete
Type
CG
base
index
instance
Key
name
obj
base
Selector
caller
site
callee
receiver
caller
site
global
Name
x
special
base
cha
descriptors
caller
site
callee
receiver
caller
site
script
Code
Body
program
Counter
i
m
cha
script
Type
m
pc
script
Name
roots
fake
Root
Class2
options
cache
language
e
declaring
Class
cha
options
cache
cha
options
cache
type
values
ref
object
ref
type
rv
is
PEI
type
params
site
params
site
type
name
function
Vn
arg
Vns
call
Site
I
F
I
F
I
cha
base
caller
site
receiver
base
creator
base
name
o
CG
creator
Node
allocation
Site
smik
name
node
allocation
dim
type
S
node
instr
type
obj
obj
Type
builder
basic
container
obj
lit
instance
map
From
instance
instance
analysis
fake
Root
Class
options
cache
pointer
Key
Factory
fake
Root
Class
options
node
node
vn
node
options
builder
builder
cg
points
To
Map
instance
Keys
pointer
Keys
i
Key
Factory
lpk
language
Selectors
site
site
caller
site
callee
receiver
caller
site
pa
n
result
pa
h
instruction
instruction
instruction
instruction
instruction
instruction
instruction
inst
inst
inst
inst
n
result
pa
h
n
result
h
pa
instruction
instruction
instruction
instruction
instruction
inst
inst
inst
inst
instruction
instruction
n
result
pa
h
ignore
Alloc
Heap
Defs
language
loader
loader
cls
cls
ref
ref
loader
Ref
klass
c
c
ref
receiver
Class
ref
m
f
klass
f
receiver
selector
A
type
A
B
A
B
c
T
c
i
type
type
klass
klass
c1
c2
o
scope
factory
hierarchies
scope
factory
cg
pa
cg
pa
n
n
n
name
And
Definer
cls
context
n
context
n
context
n
context
n
context
n
visitor
entity
entity
parent
n
context
visitor
n
all
Scoped
Entities
context
visitor
n
i
context
visitor
context
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
file
C
visitor
n
context
file
Context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
type
Context
visitor
n
context
type
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
visitor
n
context
v
a
visitor
n
start
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
context
n
n
context
visitor
n
v
a
assign
pre
Op
context
visitor
n
context
v
a
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
i
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
i
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
context
n
context
n
context
n
context
n
context
n
visitor
entity
entity
parent
delegate
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
visitor
n
context
file
Context
visitor
n
context
file
Context
visitor
n
context
visitor
n
context
visitor
n
context
type
Context
visitor
n
context
type
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
code
Context
visitor
n
context
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
i
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
i
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
v
a
c
visitor
n
v
a
c
visitor
n
v
a
pre
c
visitor
n
v
a
pre
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
n
c
visitor
node
construct
arg
type
ref
o
from
label
from
to
n
o
cbuf
off
len
n
o
Ast
context
recursive
root
cfg
context
node
Map
n
ce
root
cfg
c
node
Map
construct
Ast
recursive
Ast
Ast
context
recursive
root
cfg
context
node
Map
root
cfg
context
node
Map
pair
Key
root
cfg
pos
types
children
defaults
o
Ast
recursive
root
Context
root
cfg
context
node
Map
n
cfg
c
node
Map
n
cfg
c
node
Map
pair
Key
n
cfg
context
node
Map
n
cfg
context
node
Map
node
Map
old
Source
label
old
Target
orig
src
node
Map
orig
new
Src
node
Map
new
Map
node
Map
orig
node
Map
orig
root
node
Map
children
root
cfg
pos
types
children
defaults
root
construct
construct
iteration
rest
o
Ast
recursive
Ast
recursive
unwind
Factor
original
iteration
parent
node
Map
old
Source
label
old
Target
orig
src
n
cfg
c
node
Map
ast
ast
pattern
rewrite
root
cfg
context
node
Map
n
n
p
n
fl
fc
ll
lc
url
file
n
fl
fc
ll
lc
url
file
n
line
Number
url
file
n
line
Number
url
file
other
name
type
name
type
is
Final
name
type
is
Final
is
Case
Sensitive
name
type
default
Init
Value
name
type
is
Final
default
Init
Value
name
type
is
Final
is
Case
Sensitive
default
Init
Value
url
start
Line
end
Line
start
Offset
end
Offset
url
line
start
Offset
end
Offset
o
kind
cs
kind
cs
kind
c1
cs
kind
kind
c1
kind
c1
c2
kind
c1
c2
c3
kind
c1
c2
c3
c4
kind
c1
c2
c3
c4
c5
kind
c1
c2
c3
c4
c5
c6
kind
value
value
value
value
value
value
value
value
value
label
from
o
src
from
label
from
to
from
to
label
node
ast
other
node
o
o
ast
Type
ast
Type
cast
Type
ref
node
node
type
other
url
local
File
line
Number
base
construct
arg

name
type

name
type

is
Final

name
type

is
Final

is
Case
Insensitive

name
type

default
Init
Value

name
type

is
Final

default
Init
Value

name
type

is
Final

is
Case
Insensitive

default
Init
Value
kind
cs
o
kind
cs
value
o
value
op
kind
kind
c1
kind
c1
c2
kind
c1
c2
c3
kind
c1
c2
c3
c4
kind
c1
c2
c3
c4
c5
kind
c1
c2
c3
c4
c5
c6
kind
kind
first
Child
other
Children
kind
cs
value
value
value
value
value
value
value
value
name
o
node
left
right
node
kind
node
kind
node
node
node
o
name
name
other
name
result
name
kind
children
name
value
pattern
Name
references
tree
i
cs
j
s
tree
s
tree
i
cs
j
s
tree
s
p
n
pattern
String
e
e
p
e
n
c
visitor
c
top
n
context
visitor
n
context
v
a
visitor
pattern
String
internal
tree
f
tree
n
v
iterator
n
tree
f
function
values
bad
function
sb
cbuf
off
len
printer
kind
kind
top
top
top
pos
top
pos
ce
ce
top
w
top
w
top
pos
w
top
pos
w
top
w
top
w
top
pos
w
top
pos
w
x
from
to
x
top
pos
w
depth
ugly
Brackets
top
pos
w
depth
ugly
Brackets
e
kind
kind
e
w
e
w
e1
ast
Root
e
doc
root
ast
Node
cha
language
construct
end
Offset
end
Line
end
Column
start
Column
p
start
Line
start
Offset
o
p
range
new
Text
inst
inst
inst
inst
instruction
instruction
instruction
inst
inst
inst
inst
ir
boolean
Type
do
Primitives
reference
super
Reference
loader
source
Position
reference
loader
source
Position
e
selector
name
name
type
ref
pc
ref
pc
invocation
Code
pc
source
Position
type
Name
loader
modifiers
declared
Fields
declared
Methods
selector
name
name
type
xlator
instruction
Offset
instruction
Offset
operand
param
instruction
Offset
instruction
Offset
instruction
Offset
name
cls
qualifiers
cfg
symtab
ref
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
annotations
cls
qualifiers
ref
annotations
o
param
Num
instruction
Index
param
Index
instruction
Index
class
Loader
Reference
cha
scope
e
cha
is
Static
cls
name
descriptor
obj
cha
parent
cha
module
module
message
module
message
severity
m
class
Name
cha
class
Name
method
bc
Offset
klass
klass
e
method
bc
Offset
e
to
Remove
ref
qualifiers
declaring
Class
cha
annotations
source
Position
type
Name
loader
modifiers
declared
Methods
default
Descriptor
name
name
cha
parent
cha
ast
M
modules
entity
top
Level
Entities
M
modules
e
module
Entry
ast
top
Level
Entities
modules
e
e
e
module
ast
top
Level
Entities
modules
code
Name
parent
loader
source
Position
entity
context
code
Body
cls
qualifiers
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
xlator
bc
Index
local
Number
i
name
super
Name
loader
source
Position
CG
function
Identifier
in
out
str
test
Name
in
out
e
tmp
ast
ast
module
use
Temp
Name
output
File
Directory
labeller
indent
entity
entity
indent
buf
entity
indent
buf
node
node
node
indent
buf
cfg
file
data
ctrl
CG
builder
sites
t
factory
CG
ptr
CG
ptrs
functions
local
CG
pa
functions
local
pa
page
filter
test
dir
name
filter
test
filter
test
fb
CG
fb
PA
prop
CG
prop
PA
fb
PA
CG
proto
node
vn
fb
PA
hg
CG
node
vn
fb
PA
CG
node
vn
page
name
in
out
test
Name
in
out
entity
e
tmp
ast
ast
module
cha
options
cache
support
Full
Pointer
Analysis
bound
monitor
flowgraph
monitor
flowgraph
pending
Call
Worklist
factory
reaching
Functions
reflective
Callee
Vertices
worklist
flowgraph
pending
Reflective
Call
Worklist
reflective
Callee
Vertices
worklist
flowgraph
c
callee
worklist
flowgraph
from
to
worklist
flowgraph
reflective
Callee
invk
real
Callee
worklist
is
Function
Prototype
Call
cha
cache
support
Pointer
Analysis
flowgraph
flowgraph
method
flowgraph
ir
flowgraph
def
phi
proto
val
prop
Name
put
instruction
instruction
pw
lw
get
instruction
pr
lr
ret
thr
katch
invk
invk
definer
name
visitor
caller
site
invk
visitor
cache
method
visitor
CG
cache
func
invk
func
invk
method
instruction
created
Type
klass
func
index
name
func
func
func
value
Number
definer
name
func
visitor
cache
var
Vertex
prop
Vertex
unknown
Vertex
func
Vertex
cs
Vertex
param
Vertex
ret
Vertex
arg
Vertex
callee
Vertex
lexical
Access
Vertex
global
Vertex
proto
Vertex
reflective
Call
Vertex
func
value
Number
visitor
cache
visitor
cache
func
index
visitor
cache
visitor
node
instruction
Index
created
Type
CG
visitor
func
visitor
cache
var
Vertex
prop
Vertex
unknown
Vertex
func
Vertex
cs
Vertex
param
Vertex
ret
Vertex
callee
Vertex
lexical
Access
Vertex
arg
Vertex
global
Vertex
proto
Vertex
reflective
Call
Vertex
CG
visitor
prop
Name
visitor
func
site
invk
visitor
cache
field
type
visitor
cha
cache
full
Pointer
Analysis
filter
flowgraph
method
monitor
graph
monitor
type
unknown
Vertex
from
to
dest
monitor
v
cg
cache
monitor
cache
func
property
o
f
o
n
key
pk
node
value
Number
node
I
field
node
allocation
node
allocation
dim
type
S
node
instr
type
obj
obj
Type
node
value
Number
filter
node
f
I
I
I
F
I
F
I
n
core
Type
roots
cha
options
i
Analysis
Cache
View
support
Full
Pointer
Analysis
monitor
function
flowgraph
method
symtab
du
flowgraph
invk
cha
options
i
Analysis
Cache
View
support
Full
Pointer
Analysis
monitor
flowgraph
c
callee
flowgraph
c
monitor
cha
options
i
Analysis
Cache
View
support
Full
Pointer
Analysis
constructors2
options
monitor
call
Graph
pointer
Analysis
flow
Graph
eps
monitor
flowgraph
eps
monitor
interpreter
flowgraph
eps
monitor
flowgraph
monitor
cg
call
Vertex
caller
site
target
cg
site
target
caller
cg
site
target
caller
target
Context
flow
Graph
call
Vertex
monitor
flow
Graph
call
Vertex
monitor
flowgraph
monitor
method
symtab
du
invk
ref
summary
declaring
Class
o
instructions
ref
declared
Parameters
i
cha
ref
summary
declaring
Class
constructor
For
Type
to
String
Extra
ref
summary
declaring
Class
constructor
For
Type
key
m
cls
value
cls
cls
nargs
value
cls
cls
cls
nargs
cls
nargs
cls
cls
nargs
cls
nargs
cls
cls
cls
nargs
cls
cls
cls
nargs
receiver
cls
caller
IR
call
Stmt
cls
nargs
e
e
cls
nargs
caller
IR
call
Stmt
receiver
nargs
caller
IR
call
Stmt
receiver
nargs
cha
options
cache
app
Context
Selector
app
Context
Interpreter
instance
Policy
do
One
CFA
options
app
Context
Selector
do
One
CFA
cha
options
cha
options
cache
app
Context
Interpreter
options
cache
cha
cl
scope
xml
Files
instance
Policy
do
One
CFA
options
cache
node
node
o
argument
Count
base
name
base
caller
site
callee
actual
Parameters
caller
site
default
Options
method
method
context
options
Ast
n
root
cfg
context
node
Map
loader
f
f
parent
f
N
defining
Context
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
LI
debug
Info
N
context
method
context
base
caller
site
callee
actual
Parameters
base
Context
callee
base
Context
cur
Encountered
worklist
caller
Node
caller
site
m
base
recursion
Bound
caller
site
callee
actual
Parameters
base
Context
cur
Level
caller
site
base
method
caller
site
callee
arguments
caller
site
translator
Factory
scope
cha
roots
preprocessor
scope
loaders
cha
CG
fun
Name
fun
Name
cha
cl
url
cha
cl
M
N
defining
Context
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
LI
debug
Info
n
c
visitor
e
e
v
name
stream
url
name
base
caller
site
caller
site
callee
receiver
base
declaring
Class
receiver
caller
site
receiver
caller
site
receiver
e1
base
builder
language
field
field
url
abstract
Root
Method
options
cache
pointer
Key
Factory
symbol
Table
value
Number
type
field
Name
field
Key
e
var
Name
fake
Root
Class
options
ir
cha
exception
Var
catch
Classes
e
vn
instruction
instruction
inst
instruction
instruction
instruction
instruction
instruction
node
vn
builder
cg
points
To
Map
instance
Keys
pointer
Keys
i
Key
Factory
analysis
lpk
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
lpk
options
builder
node
ir
method
builder
node
inst
inst
t
inst
inst
inst
instruction
instruction
instruction
instruction
instruction
instruction
receiver
Type
field
Key
lhs
ptrs
call
o
field
Key
const
Obj
const
Prop
instruction
lhs
rhs
e
o
instruction
node
symbol
Table
du
o
vn
k
k
lhs
rhs
e
e
l
t
left
right
instruction
instruction
lhs
rhs
x
o
instruction
instruction
caller
instruction
target
const
Params
unique
Catch
Key
builder
caller
instruction
target
const
Params
unique
Catch
Key
op
Node
defining
Method
base
caller
site
delegate
is
Non
Null
Array
name
obj
caller
site
callee
receiver
node
param
o
cha
options
cache
K
I
I
f
I
I
F
I
F
I
F
F
base
obj
key
base
obj
key
du
inst
values
caller
site
cache
base
cache
index
base
method
caller
site
callee
receiver
caller
site
scope
e
handle
Call
Apply
use
It
m
pc
cha
loader
fake
Root
Class
options
cache
cha
options
cache
instructions
function
params
site
m
options
cache
node
node
node
insts
nargs
S
params
To
Pass
To
Invoked
insts
nargs
S
params
To
Pass
To
Invoked
node
node
cha
builder
basic
base
base
smik
name
cha
base
constructors
base
caller
site
receiver
base
node
allocation
obj
obj
Type
type
S
node
allocation
dim
node
instr
type
method
instr
Indices
correlation
pos
pos
pos
pos
parent
index
parent
pos
index
ps
obj
ps
obj
node
parent
pos
ps
ps
node
tree
node
node
label
Ast
policy
Factory
entity
root
cfg
context
node
Map
root
context
node
Map
root
cfg
context
node
Map
root
cfg
context
node
Map
root
cfg
context
node
Map
root
cfg
context
node
Map
node
cfg
context
node
Map
root
cfg
context
node
Map
node
cfg
context
entity
context
entity
kind
nodes
kind
node
node
label
entity
pos
node
label
flow
pos
pos
pos
pos
pos
pos
name
node
node
nodes
node
node
name
pos
r
construct
arg
entity
kind
pos
spmap
nodep
res
kind
pos
entity
entity
corr
correlations
nodes
index
Name
entity
start
Node
end
Node
parm
Name
locals
parent
start
child
entity
summaries
policy
entity
summaries
node
start
end
parameters
locals
start
end
start
end
start
inner
end
inner
parameters
locals
translator
Factory
entry
Point
translator
Factory
scripts
summaries
ast
entity
entity
node
from
label
to
obj
anchor
me
node
flow
node
label
target
flow
node
entity
node
entity
anchor
entity
root
node
Map
children
node
Map
old
Source
label
old
Target
orig
src
node
Map
orig
new
Src
root
entity
Ast
recursive
root
Context
node
parent
region
parent
pos
node
label
node
loop
entity
callsite
ps
pos
pos
pos
pos
pos
pos
pos
pos
pos
pos
rwc
ec
translator
Factory
method
ir
ir
index
vn
ir
index
vs
ir
du
v
url
summaries
url
e
scripts
scripts
array
e
src
fnfe
get
put
index
Name
flown
Through
Locals
positions
positions
positions
visitor
index
Name
flown
Through
Locals
positions
positions
positions
visitor
get
invoke
index
Name
flown
Through
Locals
positions
positions
positions
visitor
method
instr
Indices
inst
base
caller
site
receiver
caller
site
caller
site
receiver
receiver
key
nargs
caller
site
caller
site
object
x
n
result
pa
h
instruction
instruction
instruction
instruction
instruction
instruction
instruction
n
result
pa
h
n
result
h
pa
instruction
instruction
instruction
instruction
instruction
instruction
instruction
n
result
pa
h
ignore
Alloc
Heap
Defs
cls
options
cache
cha
options
cache
cha
e
factory
libs
libs
cha
roots
builder
Type
roots
cha
options
cache
options
monitor
e
cha
options
cache
ast
M
unwind
Factor
Ast
M
N
ast
M
Ast
op
lhs
rhs
receiver
Temp
element
Temp
receiver
Temp
element
Temp
receiver
Temp
element
Temp
receiver
Temp
element
Temp
Ast
root
receiver
element
context
node
Map
root
receiver
element
context
node
Map
root
cfg
context
node
Map
loader
context
type
name
n
scopes
insts
n
context
read
Vn
n
context
name
type
n
context
name
type
type
wc
top
Entity
wc
n
parent
f
N
context
N
defining
Context
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
LI
debug
Info
context
exception
context
call
result
exception
name
receiver
arguments
context
new
Node
result
type
arguments
n
context
result
exception
fn
context
result
array
Value
array
Ref
dim
Values
context
array
Value
array
Ref
dim
Values
rval
context
result
receiver
elt
read
Node
context
receiver
elt
parent
rval
context
result
Val
type
Name
result
Val
context
primitive
Call
e
n
c
visitor
n
c
visitor
context
n
context
visitor
e
node
node
from
to
v
node
node
from
to
parent
s
v
node
node
from
to
parent
s
script
parent
initial
Base
For
operation
Index
node
node
from
to
ignore
Harness
ignore
Harness
expose
Contexts
cg
cg
nd
callsite
targets
edges
method
context
context
method
method
context
site
method
method
method
method
map
use
One
CFA
handle
Call
Apply
extract
Correlated
Pairs
dir
name
builder
Type
loader
dir
name
loader
e
dir
name
loaders
loader
dir
name
loaders
dir
name
dir
name
loader
dir
name
loader
dir
name
dir
name
dir
name
loader
dir
name
loader
dir
name
dir
name
builder
Type
loader
scripts
builder
Type
ir
Factory
url
f
Extractor
url
f
Extractor
r
url
builder
Type
f
Extractor
e
url
builder
Type
f
Extractor
r
url
loaders
f
Extractor
e
url
loaders
f
Extractor
r
e
url
f
Extractor
url
builder
Type
f
Extractor
loaders
scripts
builder
Type
ir
Factory
loaders
scope
builder
Type
ir
Factory
e
url
zero
One
Cfa
No
Call
Apply
url
url
type
r
url
ir
du
ir
cha
make
Options
cache
support
Full
Pointer
Analysis
cha
make
Options
cache
support
Full
Pointer
Analysis
cha
make
Options
cache
support
Full
Pointer
Analysis
cha
make
Options
cache
support
Full
Pointer
Analysis
translator
Factory
url
builder
Type
support
Full
Pointer
Analysis
f
Extractor
url
builder
Type
monitor
support
Full
Pointer
Analysis
f
Extractor
url
builder
Type
monitor
support
Full
Pointer
Analysis
script
Dir
builder
Type
monitor
support
Full
Pointer
Analysis
script
Dir
monitor
support
Full
Pointer
Analysis
bound
script
Dir
dir
name
builder
Type
monitor
support
Full
Pointer
Analysis
url
builder
Type
monitor
support
Full
Pointer
Analysis
f
Extractor
loaders
scripts
builder
Type
monitor
support
Full
Pointer
Analysis
loaders
scripts
monitor
support
Full
Pointer
Analysis
bound
cg1
cg2
ir
cha
inst
inst
inst
instruction
instruction
instruction
instruction
type
Ref
vn
value
Number
reference
size
o
type
name
target
cha
value
pointee
iindex
ref
iindex
result
ref
field
iindex
result
obj
Val
type
Val
iindex
function
results
params
exception
site
iindex
function
result
params
exception
site
iindex
function
params
exception
site
iindex
result
object
Ref
member
Ref
iindex
object
Ref
member
Ref
value
iindex
ref
value
field
e
iindex
lval
object
iindex
expr
is
Enter
iindex
value
from
Specification
iindex
result
val
iindex
value
object
Ref
prev
Prop
iindex
value
object
Ref
prop
iindex
rvals
iindex
rvals
iindex
lhs
global
iindex
global
rhs
iindex
lval
rval
field
Val
field
Ref
iindex
lval
rval
field
Ref
iindex
lval
rval
field
Val
iindex
lval
rval
iindex
accesses
iindex
access
iindex
lhs
definer
global
Name
type
iindex
accesses
iindex
access
iindex
definer
global
Name
type
rhs
iindex
result
arrayref
iindex
result
arrayref
index
declared
Type
iindex
arrayref
index
value
declared
Type
iindex
operator
overflow
unsigned
result
val1
val2
may
Be
Integer
insts
defs
uses
iindex
result
val
types
is
PEI
iindex
result
val
type
Values
is
PEI
iindex
result
val
type
Value
is
PEI
iindex
result
val
type
is
PEI
iindex
operator
result
val1
val2
iindex
operator
type
val1
val2
target
iindex
result
val
from
Type
to
Type
overflow
insts
defs
uses
iindex
bb
Number
exception
Value
Number
iindex
result
field
iindex
result
ref
field
iindex
target
iindex
result
ref
checked
Type
iindex
result
params
exception
site
bootstrap
iindex
params
exception
site
bootstrap
iindex
lval
entity
Type
token
iindex
ref
is
Enter
iindex
result
site
iindex
result
site
params
iindex
result
params
iindex
result
val
pi
Block
successor
Block
cause
iindex
ref
value
field
iindex
value
field
iindex
iindex
result
is
Primitive
iindex
val
default
Label
cases
And
Labels
iindex
exception
iindex
operator
result
val
iindex
lval
local
pointee
Type
iindex
lval
local
index
Val
pointee
Type
iindex
lval
local
field
pointee
Type
iindex
lval
t
address
Val
iindex
address
Val
rval
t
iindex
lval
object
iindex
object
prototype
type
type
type
type
type
type
type
reference
type
type
cha
options
cache
n
result
pa
h
n
result
pa
h
ignore
Alloc
Heap
Defs
cha
translator
Factory
cha
translator
Factory
preprocessor
name
P
source
Position
entity
context
name
pos
entity
context
name
pos
entity
context
cls
Name
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
cfg
symtab
has
Catch
Block
caught
Types
has
Monitor
Op
lexical
Info
debug
Info
C
name
file
Name
ast
module
all
Modules
top
Level
Entities
entity
factory
factory
preprocessor
cha
instructions
method
context
r
inst
inst
instruction
instruction
instruction
instruction
instruction
r
inst
inst
instruction
instruction
instruction
instruction
instruction
r
r
cg
pa
cg
pa
cg
pa
pa
ik
node
tag
pos
text
tag
name
input
input
text
original
Pos
url
bogus
URL
text
original
Pos
url
bogus
URL
text
text
ps
other
Region
ps
text
input
input
factory
factory
preprocessor
cha
top
Level
Entitie
context
context
n
context
name
type
context
nm
type
rval
n
context
visitor
line
offset
range
Start
range
End
range
Starting
Line
range
Ending
Line
range
Start
range
End
range
Starting
Line
range
Ending
Line
parent
Position
url
offset
f
file
Name
file
Mapping
f
cloned
From
file
Mapping
arg0
arg0
arg0
arg0
arg0
url
reader
callback
file
Name
e
handler
file
Name
root
root
source
File
e
e
name
entrypoint
Url
html
Parser
url
Resolver
entrypoint
Url
html
Parser
url
Resolver
reader
a
b
fm
line
url
Found
context
orig
entrypoint
Url
url
Resolver
tag
ex
tag
func
Name
line
related
Tag
line
pos
object
property
tag
cons
var
Name
tag
attr
value
var
Name
var
Name2
tag
attr
value
var
Name
var
Name2
tag
attr
value
var
Name
name
entrypoint
Url
url
Resolver
final
Region
entrypoint
Url
url
Resolver
ep
governing
Tag
tag
p
text
e
tag
x
tag
tag
func
Name
a
func
Name
tag
e
text
pos
url
b
value
att
Value
tag
e
url
As
String
script
Tag
e
url
final
Region
final
Region
entrypoint
Url
html
Parser
url
Resolver
input
Stream
Reader
entrypoint
Url
url
Resolver
url
delete
use
Temp
Name
args
factory
url
f
Source
Extractor
e
url
f
Source
Extractor
r
e
args
url
range
Start
range
End
range
Starting
Line
range
Ending
Line
inner
Mapping
pos
line
url
reader
callback
file
Name
iindex
function
results
params
exception
site
iindex
function
result
params
exception
site
iindex
function
params
exception
site
insts
defs
uses
symbol
Table
v
j
iindex
object
prototype
j
insts
defs
uses
symbol
Table
v
iindex
result
obj
Val
type
Val
insts
defs
uses
symbol
Table
v
i
i
iindex
expr
is
Enter
insts
defs
uses
symbol
Table
v
i
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
instruction
iindex
result
val
insts
defs
uses
symbol
Table
v
iindex
object
Ref
member
Ref
value
iindex
lval
object
insts
defs
uses
symbol
Table
v
iindex
ref
insts
defs
uses
symbol
Table
v
i
iindex
ref
iindex
result
ref
field
iindex
result
obj
Val
type
Val
iindex
function
results
params
exception
site
iindex
function
result
params
exception
site
iindex
function
params
exception
site
iindex
ref
value
field
iindex
lval
object
iindex
expr
is
Enter
iindex
lval
object
iindex
object
prototype
iindex
result
object
Ref
member
Ref
f
cloned
From
name
name
name
class
Name
f
cloned
From
e
filename
root
Dir
file
root
Dir
file
main
File
working
Dir
main
File
root
Dir
base
builder
caller
site
receiver
e
caller
site
pointer
Analysis
caller
call
Instr
root
Dir
dir
target
root
Dir
f
root
Dir
d
root
Dir
d
target
root
Dir
d
file
Name
assertions
script
ast
module
e
ast
module
e
cg
cg2JSON
parsed
cg
cg2JSON
script
parsed
JSON
prefix
prefix
script
assertions
url
assertions
afe
script
assertions
builder
Type
bound
afe
cg
file
assertions
builder
Type
src
timeout
builder
Type
f
Extractor
e1
e
e
src
fnfe
args
filename
cha
exclude
filename
args
args
domless
url
fake
Root
Class
options
cache
language
analysis
field
Key
op
Node
defining
Method
caller
instruction
target
const
Params
unique
Catch
Key
js
Translator
Factory
exclusions
class
Loader
Reference
cha
parent
scope
options
cha
args
args
m
replicate
For
Do
Loops
ast
M
parent
s
parent
s
script
parent
initial
Base
For
operation
Index
parent
break
To
label
parent
break
To
continue
To
label
parent
catch
Node
operation
Index
operation
Index
operation
Index
operation
Index
node
Type
type
Name
context
global
Name
arguments
context
value
arguments
context
n
context
n
n
context
n
fun
thisptr
args
context
thisptr
args
context
fun
thisptr
args
context
callee
n
subs
ast
map
pos
name
construct
arg
n
body
name
child
n
context
n
p
context
node
name
node
label
node
arg
break
Stmt
cont
Stmt
node
arg
break
Stmt
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
n
obj
Ast
elt
context
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
call
context
n
context
fn
fn
context
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
n
context
n
context
node
arg
n
context
node
context
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
context
node
arg
n
context
node
arg
node
arg
node
arg
node
arg
n
context
visitor
n
context
visitor
node
context
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
var
Name
arg0
arg1
arg2
arg3
arg4
arg0
arg1
arg2
arg3
arg4
arg0
arg1
arg2
arg3
arg4
Ast
m
script
Name
replicate
For
Do
Loops
Ast
m
script
Name
replicate
For
Do
Loops
use
New
For
In
factory
prepend
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
node
arg
unwind
Factor
Ast
M
N
m
replicate
For
Do
Loops
ast
M
url
reader
handler
file
Name
e1
ch
start
length
e
locator
uri
local
Name
q
Name
atts
name
value
uri
local
Name
q
Name
ch
start
length
ch
start
length
prefix
uri
prefix
target
data
name
e
