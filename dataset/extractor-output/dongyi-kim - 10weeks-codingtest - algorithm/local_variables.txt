arr
random
i
arr
begin
dynamicArray
i
end
arr
begin
dynamicArray
lastIndex
end
arr
random
begin
dynamicArray
expectedSize
targetIndex
end
N
test
P
M
PI
i
S
N
M
PI
begin
matched
S
P
N
M
PI
i
indexes
output
i
N
M
begin
matched
matchedIndexes
S
P
indexes
output
i
N
M
weights
hashP
hashS
matchedIndexes
begin
equal
matched
weights
i
hash
M
i
position
x
S
i
i
dx
di
n
data
i
answer
index
index
i
i
minIndex
temp
n
data
i
i
c
s
i
n
p
q
data
i
answer
i
n
data
i
answer
sum
j
answer
i
rangeSum
n
answer
first
last
i
n
schools
i
count
i
n
m
s
data
i
answer
answer
i
n
data
i
answer
p
q
answer
index
i
n
m
data
i
answer
N
M
populations
i
blockSize
blocks
i
command
op1
op2
maxValue
sumValue
length
blocks
i
i
value
blockIndex
unitIndex
blockSize
blockIndex
unitIndex
blockSize
leftBlockIndex
rightBlockIndex
leftIndex
rightIndex
maxValue
blockIndex
blockSize
leftBlockIndex
rightBlockIndex
leftIndex
rightIndex
sumValue
blockIndex
oldValue
i
maxValue
i
sumValue
i
W
N
sensors
i
x
y
r
answer
caseNum
caseIndex
lowerBound
upperBound
i
radius
possible
leftWall
rightWall
sensorNodes
i
i
j
deltaX
deltaY
distance
visited
dfsStack
currentNode
N
globalRange
coverages
i
ratio
caseNum
caseIndex
maxY
minY
minX
maxX
unitLength
globalCount
coverageCount
x
y
isInside
dx
dy
distance
N
R
L
robots
i
X
answer
caseNum
caseIndex
leftEnd
rightEnd
i
distance
distance
lowerBound
upperBound
distanceLimit
possible
N
M
S
V
i
i
maximumSpeed
caseNum
caseIndex
lowerBound
upperBound
minimumSpeed
possible
totalBudget
i
diff
budgetCost
N
M
edges
i
u
v
answer
minCut
i
cut
disjointSet
components
i
u
v
minCut
i
u
v
random
i
i
uBoss
vBoss
count
visited
groups
r
c
groupSize
N
isHouse
r
c
value
groupSizes
i
size
adjacentPrimeNumbers
orgDigits
pos
newDigits
digit
newInteger
origin
dest
visited
distance
bfsQueue
initialState
current
nextIntegers
nextState
answer
p
mul
caseSize
caseIndex
targetNumber
distance
visited
initialState
queue
current
nextIncrease
nextDecrease
answer
caseSize
caseIndex
N
visited
maxLength
length
N
M
adj
origin
dest
i
i
u
v
answer
r
c
answerBoard
value
sudoku
r
c
value
answer
stringBuilder
r
c
output
g
value
g
g
copiedBoard
r
c
r
count
c
N
chessBoard
answer
lIndex
rIndex
lIndex
rIndex
lIndex
rIndex
visited
distance
bfsQueue
i
j
state
current
unripeCount
requiredDays
i
j
C
R
tomato
i
i
j
answer
N
visited
distance
initialState
bfsQueue
current
nextState
N
M
origin
dest
adj
i
i
u
v
answer
visitedNodes
dfsStack
initialState
visited
current
ni
next
nextState
visitedNodes
bfsQueue
initialState
visited
current
nextState
N
M
adj
i
i
u
v
i
dfsOrders
bfsOrders
i
node
visitedNodes
dfsStack
initialState
visited
current
next
nextState
visitedNodes
bfsQueue
initialState
visited
current
next
nextState
N
M
adj
i
u
v
dfsOrders
bfsOrders
i
node
visited
distance
bfsQueue
initialState
current
R
C
originR
originC
destR
destC
passable
i
line
j
c
answer
nPizza
english
foreign
englishPizza
foreignPizza
i
pizzaName
englishIngredients
foreignIngredients
na
j
ingredient
nb
j
ingredient
flag
i
existInEnglish
existInForeign
caseNum
caseIndex
N
integers
i
X
answer
pSet
i
i
pa
j
pb
area
dx
dy
pd
pc
n
points
i
x
y
answer
caseSize
caseIndex
dx
dy
sqd
removedList
removableBombs
i
b
parents
i
p
n
m
bombs
i
i
u
v
parent
child
removable
caseSize
caseIndex
i
p
target
value
value
N
medianQueue
i
cmd
value
median
median
size
answer
continuedHistograms
i
h
lh
bh
width
height
area
n
histograms
i
height
answer
caseSize
caseIndex
N
frequencyMap
i
X
c
f
N
existingNames
frequencyMap
maxFrequency
i
name
f
winnersList
i
name
i
name
answer
rangeMinimum
rangeMaximum
i
c
rightEnd
leftEnd
minIncome
maxIncome
diff
n
k
cities
i
income
answer
caseSize
caseIndex
deadPlayers
playerQueue
i
i
jump
j
p
dead
n
m
players
i
deadPlayers
builder
i
p
caseSize
caseIndex
touchableTowers
i
t
target
n
towers
i
hi
i
t
targetIndex
newElement
target
target
target
target
N
queue
i
cmd
value
minimum
maximum
caseSize
caseIndex
stack
i
p
input
n
parentheses
i
isValid
caseSize
caseIndex
removedList
removableBombs
i
b
parents
i
p
n
m
bombs
i
i
u
v
parent
child
orders
outputBuilder
i
b
caseSize
caseIndex
i
p
M
N
x
y
calendar
answer
caseSize
caseIndex
index
x
a
b
p
q
caseSize
caseIndex
num
mul
index
N
factors
i
caseSize
caseIndex
factors
div
num1
num2
gcd
lcm
caseSize
caseIndex
c
frequency
maximumFactor
factors
index
answer
f
count
n
cards
i
answer
factors
div
value
level
scaleBit
nNumbers
nCommands
array
i
i
cmd
p
value
k
k
realIndex
realIndex
globalPeriod
n
sizes
i
answer
lcm
i
tickets
table
i
userId
ticketIndex
n
m
ids
i
tickets
index
board
index
row
col
group
caseSize
caseIndex
r
c
left
offset
primes
num
L
R
allPrimeNumbers
caseSize
caseIndex
num
mul
index
answer
possible
y
n
m
cards
targets
i
i
answer
possibleTargets
possible
i
x
j
y
z
n
m
cards
targets
i
i
answers
i
answer
board
row
col
row
col
caseSize
caseIndex
n
papers
i
leftX
bottomY
answer
i
i
index
ret
table
number
writer
n
data
i
answers
i
element
possibleTargets
pairs
i
j
pair
possible
x
y
targetPair
pairIndex
n
m
cards
targets
i
i
answers
i
C
i
j
k
N
M
A
B
i
j
mergedArray
builder
i
answer
table
i
i
left
right
n
k
birthDate
i
answer
count
count
fibo
i
answer
caseSize
caseIndex
n
answer
i
i
index
seats
i
p
index
table
minColor
maxColor
color
n
m
paintings
i
left
right
color
i
i
index
frequent_number
table
number
n
data
i
answer
answer
rangeSum
i
n
m
cards
ranges
i
i
l
r
answer
sqd
R
sum
y
x
height
caseSize
caseIndex
maximum
minimum
i
n
data
i
result
i
n
result
caseSize
caseIndex
countType
i
n
data
i
answer
winCount
sum
i
i
n
k
data
i
result
i
negativeCount
j
temp
n
data
i
i
s1
s2
mys1
mys2
result
i
n
i
other
n
i
count
i
n
data
i
result
maxHeight
i
n
height
month
i
i
m
answer
n
points
i
x
y
min_sqd
min_cnt
i
j
sqd
distance
dx
dy
sqd
mid
leftMax
rightMax
globalMax
begin
end
height
maxWidth
width
lnh
rnh
area
n
histograms
i
height
answer
caseSize
caseIndex
N
buffer
mid
leftCount
rightCount
globalCount
i
j
k
leftRemain
index
N
arr
i
answer
ret
scanner
a
n
answer
m_idx
median
left
right
m_idx
median
arr
target
result
i
j
k
index
filteredPoints
i
p
dx
mid
standardX
leftAnswer
rightAnswer
globalAnswer
leftPoints
rightPoints
j_from
i
pi
minY
maxY
j
pj
distance
N
points
i
x
y
answer
dx
dy
a
b
c
temp
pivot
mid
i
pivotIndex
mid
N
arr
i
i
i
index
c
minIndex
index
N
d
move
N
A
B
C
i
d
answer
n
result
N
buffer
mid
i
j
k
index
N
arr
i
i
caseNum
items
i
knapsack
caseIndex
totalSegments
answer
answer
lastDigit
segments
previousCost
previousWays
n
signA
signB
i
i
dtw
answer
i
diff
diff
error
answer
min
i
caseNum
caseIndex
multiplicable
i
n
matrices
i
r
c
multiplicable
solution
ansnwer
i
answer
mid
leftCost
rightCost
concatCost
totalCost
n
m
values
r
c
rangeSum
i
minRow
minCol
maxRow
maxCol
sum
i
j
max
i
n
profits
i
answer
solutionA
solutionB
i
i
answer
caseA
caseB
caseC
answer
caseNum
caseIndex
input
n
solution
answer
i
answer
mid
leftLength
rightLength
totalLength
n
capacity
items
i
weight
price
knapsack
answer
totalCost
i
answer
previousCost
previousValue
currentValue
stringA
stringB
n
m
lcs
answer
i
j
caseA
caseB
caseC
answer
max
i
n
costMap
r
c
solution
answer
n
i
j
answer
input
n
problem
answer
i
answer
previousIndex
newCost
n
arr
i
lis
answer
i
answer
previousIndex
newLength
img
i
j
r
c
imgA
imgB
quilting
answer
i
j
diff
diff
error
answer
min
i
distance
updated
times
current
next
nextCost
N
M
W
origin
nodes
i
i
u
v
w
e1
e2
i
u
v
w
e
distances
caseSize
caseIndex
spanningTree
disjointSet
mstIndex
V
E
edges
i
u
v
w
spanningTree
weightSum
nodeIndex
uBoss
vBoss
reachableNodes
visited
originNode
visitCount
currentNode
nextNode
oddDegree
node
degree
oddDegree
node
degree
V
graph
u
v
exist
bfsQueue
initialState
visited
distance
current
currentNode
nextNode
nextTotalWeight
nextState
V
E
origin
nodes
i
i
u
v
w
e
distances
i
NM
N
M
disjointSet
i
command
u
v
groupSize
nodeIndex
uBoss
vBoss
uBoss
vBoss
uBoss
origin
path
answer
origin
pathLength
minLength
nextNode
nextLength
length
V
graph
from
to
weight
answer
visited
originNode
has
hasPath
nextNode
V
E
graph
i
u
v
hasPath
mstIndex
spanningTree
origin
usableEdges
visited
currentEdge
targetNode
nextNode
V
E
nodes
i
i
u
v
w
spanningTree
weightSum
matched
i
s
N
pattern
inputs
i
matchedStrings
i
s
N
matchedCount
i
cp
cs
N
K
wastes
r
c
answer
firstRow
firstCol
lastRow
lastCol
numberOfWastes
r
c
caseSize
caseIndex
N
K
wastes
r
c
answer
firstRow
lastRow
numberOfWastes
r
c
c
newColumn
oldColumn
r
caseSize
caseIndex
N
M
gameMap
r
c
buildings
answer
i
r
c
buildings
di
length
newR
newC
caseSize
caseIndex
N
map
robot
i
curPos
nextPos
r
c
caseSize
caseIndex
newR
newC
newPosition
points
i
x
y
A
B
caseSize
caseIndex
dx
dy
sqd
crossLeftX
crossRightX
crossBottomY
crossTopY
points
i
x
y
A
B
C
caseSize
caseIndex
intersection
crossLeftX
crossRightX
crossBottomY
crossTopY
S
P
matchedIndexes
i
index
matchedIndexes
N
M
i
matched
j
i
prefix
k
suffix
j
middle
concatenated
N
fullName
words
i
possible
caseSize
caseIndex
N
map
robot
lastIndex
index
curPos
nextPos
r
c
caseSize
caseIndex
newR
newC
newPosition
N
map
robot
index
lastIndex
level
phase
steps
s
curPos
r
c
caseSize
caseIndex
newR
newC
newPosition
N
logs
i
teamIndex
stringTimestamp
pointA
pointB
timeA
timeB
i
splited
minutes
seconds
dt
robot
visited
continued
i
D
L
j
pos
count
r
c
N
K
initRow
initCol
lengths
directions
i
answer
caseSize
caseIndex
nextR
nextC
nextR
nextC
leftBound
rightBound
topBound
bottomBound
startingPoint
segments
lastMove
i
D
L
origin
dest
expectedMove
intersected
movableLength
j
s
toLeft
toRight
movable
toTop
toBottom
movable
answer
i
s
N
K
initRow
initCol
lengths
directions
i
answer
caseSize
caseIndex
crossLeftX
crossRightX
crossBottomY
crossTopY
