arr
random
i
arr
begin
dynamic
Array
i
end
arr
begin
dynamic
Array
last
Index
end
arr
random
begin
dynamic
Array
expected
Size
target
Index
end
N
test
P
M
PI
i
S
N
M
PI
begin
matched
S
P
N
M
PI
i
indexes
output
i
N
M
begin
matched
matched
Indexes
S
P
indexes
output
i
N
M
weights
hash
P
hash
S
matched
Indexes
begin
equal
matched
weights
i
hash
M
i
position
x
S
i
i
dx
di
n
data
i
answer
index
index
i
i
min
Index
temp
n
data
i
i
c
s
i
n
p
q
data
i
answer
i
n
data
i
answer
sum
j
answer
i
range
Sum
n
answer
first
last
i
n
schools
i
count
i
n
m
s
data
i
answer
answer
i
n
data
i
answer
p
q
answer
index
i
n
m
data
i
answer
N
M
populations
i
block
Size
blocks
i
command
op1
op2
max
Value
sum
Value
length
blocks
i
i
value
block
Index
unit
Index
block
Size
block
Index
unit
Index
block
Size
left
Block
Index
right
Block
Index
left
Index
right
Index
max
Value
block
Index
block
Size
left
Block
Index
right
Block
Index
left
Index
right
Index
sum
Value
block
Index
old
Value
i
max
Value
i
sum
Value
i
W
N
sensors
i
x
y
r
answer
case
Num
case
Index
lower
Bound
upper
Bound
i
radius
possible
left
Wall
right
Wall
sensor
Nodes
i
i
j
delta
X
delta
Y
distance
visited
dfs
Stack
current
Node
N
global
Range
coverages
i
ratio
case
Num
case
Index
max
Y
min
Y
min
X
max
X
unit
Length
global
Count
coverage
Count
x
y
is
Inside
dx
dy
distance
N
R
L
robots
i
X
answer
case
Num
case
Index
left
End
right
End
i
distance
distance
lower
Bound
upper
Bound
distance
Limit
possible
N
M
S
V
i
i
maximum
Speed
case
Num
case
Index
lower
Bound
upper
Bound
minimum
Speed
possible
total
Budget
i
diff
budget
Cost
N
M
edges
i
u
v
answer
min
Cut
i
cut
disjoint
Set
components
i
u
v
min
Cut
i
u
v
random
i
i
u
Boss
v
Boss
count
visited
groups
r
c
group
Size
N
is
House
r
c
value
group
Sizes
i
size
adjacent
Prime
Numbers
org
Digits
pos
new
Digits
digit
new
Integer
origin
dest
visited
distance
bfs
Queue
initial
State
current
next
Integers
next
State
answer
p
mul
case
Size
case
Index
target
Number
distance
visited
initial
State
queue
current
next
Increase
next
Decrease
answer
case
Size
case
Index
N
visited
max
Length
length
N
M
adj
origin
dest
i
i
u
v
answer
r
c
answer
Board
value
sudoku
r
c
value
answer
string
Builder
r
c
output
g
value
g
g
copied
Board
r
c
r
count
c
N
chess
Board
answer
l
Index
r
Index
l
Index
r
Index
l
Index
r
Index
visited
distance
bfs
Queue
i
j
state
current
unripe
Count
required
Days
i
j
C
R
tomato
i
i
j
answer
N
visited
distance
initial
State
bfs
Queue
current
next
State
N
M
origin
dest
adj
i
i
u
v
answer
visited
Nodes
dfs
Stack
initial
State
visited
current
ni
next
next
State
visited
Nodes
bfs
Queue
initial
State
visited
current
next
State
N
M
adj
i
i
u
v
i
dfs
Orders
bfs
Orders
i
node
visited
Nodes
dfs
Stack
initial
State
visited
current
next
next
State
visited
Nodes
bfs
Queue
initial
State
visited
current
next
next
State
N
M
adj
i
u
v
dfs
Orders
bfs
Orders
i
node
visited
distance
bfs
Queue
initial
State
current
R
C
origin
R
origin
C
dest
R
dest
C
passable
i
line
j
c
answer
n
Pizza
english
foreign
english
Pizza
foreign
Pizza
i
pizza
Name
english
Ingredients
foreign
Ingredients
na
j
ingredient
nb
j
ingredient
flag
i
exist
In
English
exist
In
Foreign
case
Num
case
Index
N
integers
i
X
answer
p
Set
i
i
pa
j
pb
area
dx
dy
pd
pc
n
points
i
x
y
answer
case
Size
case
Index
dx
dy
sqd
removed
List
removable
Bombs
i
b
parents
i
p
n
m
bombs
i
i
u
v
parent
child
removable
case
Size
case
Index
i
p
target
value
value
N
median
Queue
i
cmd
value
median
median
size
answer
continued
Histograms
i
h
lh
bh
width
height
area
n
histograms
i
height
answer
case
Size
case
Index
N
frequency
Map
i
X
c
f
N
existing
Names
frequency
Map
max
Frequency
i
name
f
winners
List
i
name
i
name
answer
range
Minimum
range
Maximum
i
c
right
End
left
End
min
Income
max
Income
diff
n
k
cities
i
income
answer
case
Size
case
Index
dead
Players
player
Queue
i
i
jump
j
p
dead
n
m
players
i
dead
Players
builder
i
p
case
Size
case
Index
touchable
Towers
i
t
target
n
towers
i
hi
i
t
target
Index
new
Element
target
target
target
target
N
queue
i
cmd
value
minimum
maximum
case
Size
case
Index
stack
i
p
input
n
parentheses
i
is
Valid
case
Size
case
Index
removed
List
removable
Bombs
i
b
parents
i
p
n
m
bombs
i
i
u
v
parent
child
orders
output
Builder
i
b
case
Size
case
Index
i
p
M
N
x
y
calendar
answer
case
Size
case
Index
index
x
a
b
p
q
case
Size
case
Index
num
mul
index
N
factors
i
case
Size
case
Index
factors
div
num1
num2
gcd
lcm
case
Size
case
Index
c
frequency
maximum
Factor
factors
index
answer
f
count
n
cards
i
answer
factors
div
value
level
scale
Bit
n
Numbers
n
Commands
array
i
i
cmd
p
value
k
k
real
Index
real
Index
global
Period
n
sizes
i
answer
lcm
i
tickets
table
i
user
Id
ticket
Index
n
m
ids
i
tickets
index
board
index
row
col
group
case
Size
case
Index
r
c
left
offset
primes
num
L
R
all
Prime
Numbers
case
Size
case
Index
num
mul
index
answer
possible
y
n
m
cards
targets
i
i
answer
possible
Targets
possible
i
x
j
y
z
n
m
cards
targets
i
i
answers
i
answer
board
row
col
row
col
case
Size
case
Index
n
papers
i
left
X
bottom
Y
answer
i
i
index
ret
table
number
writer
n
data
i
answers
i
element
possible
Targets
pairs
i
j
pair
possible
x
y
target
Pair
pair
Index
n
m
cards
targets
i
i
answers
i
C
i
j
k
N
M
A
B
i
j
merged
Array
builder
i
answer
table
i
i
left
right
n
k
birth
Date
i
answer
count
count
fibo
i
answer
case
Size
case
Index
n
answer
i
i
index
seats
i
p
index
table
min
Color
max
Color
color
n
m
paintings
i
left
right
color
i
i
index
frequent
number
table
number
n
data
i
answer
answer
range
Sum
i
n
m
cards
ranges
i
i
l
r
answer
sqd
R
sum
y
x
height
case
Size
case
Index
maximum
minimum
i
n
data
i
result
i
n
result
case
Size
case
Index
count
Type
i
n
data
i
answer
win
Count
sum
i
i
n
k
data
i
result
i
negative
Count
j
temp
n
data
i
i
s1
s2
mys1
mys2
result
i
n
i
other
n
i
count
i
n
data
i
result
max
Height
i
n
height
month
i
i
m
answer
n
points
i
x
y
min
sqd
min
cnt
i
j
sqd
distance
dx
dy
sqd
mid
left
Max
right
Max
global
Max
begin
end
height
max
Width
width
lnh
rnh
area
n
histograms
i
height
answer
case
Size
case
Index
N
buffer
mid
left
Count
right
Count
global
Count
i
j
k
left
Remain
index
N
arr
i
answer
ret
scanner
a
n
answer
m
idx
median
left
right
m
idx
median
arr
target
result
i
j
k
index
filtered
Points
i
p
dx
mid
standard
X
left
Answer
right
Answer
global
Answer
left
Points
right
Points
j
from
i
pi
min
Y
max
Y
j
pj
distance
N
points
i
x
y
answer
dx
dy
a
b
c
temp
pivot
mid
i
pivot
Index
mid
N
arr
i
i
i
index
c
min
Index
index
N
d
move
N
A
B
C
i
d
answer
n
result
N
buffer
mid
i
j
k
index
N
arr
i
i
case
Num
items
i
knapsack
case
Index
total
Segments
answer
answer
last
Digit
segments
previous
Cost
previous
Ways
n
sign
A
sign
B
i
i
dtw
answer
i
diff
diff
error
answer
min
i
case
Num
case
Index
multiplicable
i
n
matrices
i
r
c
multiplicable
solution
ansnwer
i
answer
mid
left
Cost
right
Cost
concat
Cost
total
Cost
n
m
values
r
c
range
Sum
i
min
Row
min
Col
max
Row
max
Col
sum
i
j
max
i
n
profits
i
answer
solution
A
solution
B
i
i
answer
case
A
case
B
case
C
answer
case
Num
case
Index
input
n
solution
answer
i
answer
mid
left
Length
right
Length
total
Length
n
capacity
items
i
weight
price
knapsack
answer
total
Cost
i
answer
previous
Cost
previous
Value
current
Value
string
A
string
B
n
m
lcs
answer
i
j
case
A
case
B
case
C
answer
max
i
n
cost
Map
r
c
solution
answer
n
i
j
answer
input
n
problem
answer
i
answer
previous
Index
new
Cost
n
arr
i
lis
answer
i
answer
previous
Index
new
Length
img
i
j
r
c
img
A
img
B
quilting
answer
i
j
diff
diff
error
answer
min
i
distance
updated
times
current
next
next
Cost
N
M
W
origin
nodes
i
i
u
v
w
e1
e2
i
u
v
w
e
distances
case
Size
case
Index
spanning
Tree
disjoint
Set
mst
Index
V
E
edges
i
u
v
w
spanning
Tree
weight
Sum
node
Index
u
Boss
v
Boss
reachable
Nodes
visited
origin
Node
visit
Count
current
Node
next
Node
odd
Degree
node
degree
odd
Degree
node
degree
V
graph
u
v
exist
bfs
Queue
initial
State
visited
distance
current
current
Node
next
Node
next
Total
Weight
next
State
V
E
origin
nodes
i
i
u
v
w
e
distances
i
NM
N
M
disjoint
Set
i
command
u
v
group
Size
node
Index
u
Boss
v
Boss
u
Boss
v
Boss
u
Boss
origin
path
answer
origin
path
Length
min
Length
next
Node
next
Length
length
V
graph
from
to
weight
answer
visited
origin
Node
has
has
Path
next
Node
V
E
graph
i
u
v
has
Path
mst
Index
spanning
Tree
origin
usable
Edges
visited
current
Edge
target
Node
next
Node
V
E
nodes
i
i
u
v
w
spanning
Tree
weight
Sum
matched
i
s
N
pattern
inputs
i
matched
Strings
i
s
N
matched
Count
i
cp
cs
N
K
wastes
r
c
answer
first
Row
first
Col
last
Row
last
Col
number
Of
Wastes
r
c
case
Size
case
Index
N
K
wastes
r
c
answer
first
Row
last
Row
number
Of
Wastes
r
c
c
new
Column
old
Column
r
case
Size
case
Index
N
M
game
Map
r
c
buildings
answer
i
r
c
buildings
di
length
new
R
new
C
case
Size
case
Index
N
map
robot
i
cur
Pos
next
Pos
r
c
case
Size
case
Index
new
R
new
C
new
Position
points
i
x
y
A
B
case
Size
case
Index
dx
dy
sqd
cross
Left
X
cross
Right
X
cross
Bottom
Y
cross
Top
Y
points
i
x
y
A
B
C
case
Size
case
Index
intersection
cross
Left
X
cross
Right
X
cross
Bottom
Y
cross
Top
Y
S
P
matched
Indexes
i
index
matched
Indexes
N
M
i
matched
j
i
prefix
k
suffix
j
middle
concatenated
N
full
Name
words
i
possible
case
Size
case
Index
N
map
robot
last
Index
index
cur
Pos
next
Pos
r
c
case
Size
case
Index
new
R
new
C
new
Position
N
map
robot
index
last
Index
level
phase
steps
s
cur
Pos
r
c
case
Size
case
Index
new
R
new
C
new
Position
N
logs
i
team
Index
string
Timestamp
point
A
point
B
time
A
time
B
i
splited
minutes
seconds
dt
robot
visited
continued
i
D
L
j
pos
count
r
c
N
K
init
Row
init
Col
lengths
directions
i
answer
case
Size
case
Index
next
R
next
C
next
R
next
C
left
Bound
right
Bound
top
Bound
bottom
Bound
starting
Point
segments
last
Move
i
D
L
origin
dest
expected
Move
intersected
movable
Length
j
s
to
Left
to
Right
movable
to
Top
to
Bottom
movable
answer
i
s
N
K
init
Row
init
Col
lengths
directions
i
answer
case
Size
case
Index
cross
Left
X
cross
Right
X
cross
Bottom
Y
cross
Top
Y
