get
Random
Array
test
Insertion
test
Backward
Removal
test
Random
Removal
run
Test
main
add
remove
get
set
size
main
get
Failure
Function
Table
main
get
Matched
Indexes
main
get
Matched
Indexes
get
Weight
Table
get
Hash
find
Index
main
get
Min
Index
In
Range
selection
Sort
main
solve
main
get
Max
main
get
Range
Sum
From
One
get
Answer
main
print
Indexes
main
get
Count
main
get
Sum
main
get
Max
main
find
Index
main
main
split
Into
Blocks
update
Population
get
Maximum
Population
get
Sum
Of
Populations
update
select
get
Max
get
Sum
test
Case
main
get
Maximum
Passable
Radius
is
Possible
testcase
main
get
Covered
Ratio
contains
test
Case
main
is
Possible
get
Minimum
Move
Distance
compare
To
test
Case
main
get
Maximum
Speed
is
Possible
main
get
Minimum
Cut
get
Random
Cut
random
Shuffle
Edges
compare
To
find
union
get
Linked
Houses
Number
get
All
Group
Sizes
main
get
Adjacent
Prime
Numbers
test
Case
fill
Sieve
main
test
Case
main
get
Longest
Path
Length
get
Longest
Path
Length
main
fill
Sudoku
main
set
Board
clear
Board
get
Board
is
Settable
is
Empty
copy
Board
count
All
Possible
Ways
main
is
Empty
is
Settable
set
Queen
remove
Queen
get
Minimum
Required
Days
main
get
Shortest
Path
Length
main
get
Dfs
Order
get
Bfs
Order
main
print
Array
List
get
Dfs
Order
get
Bfs
Order
main
print
Array
List
get
Shortest
Path
Length
main
test
Case
main
main
get
Maximum
Square
Area
test
Case
main
get
Squared
Distance
To
get
Distance
To
compare
To
is
All
Removable
test
Case
main
add
Parent
Bombs
get
Parent
Bombs
get
Child
Count
remove
size
is
Empty
push
peek
poll
balancing
main
get
Largest
Rectangle
Area
test
Case
main
main
main
get
Maximum
Range
Difference
test
Case
main
compare
To
get
Dead
Players
List
test
Case
main
find
Target
Towers
main
set
Target
Tower
get
Target
Tower
size
push
get
Minimum
get
Maximum
pop
Minimum
pop
Maximum
get
Alive
One
compare
To
test
Case
main
is
Valid
Parentheses
test
Case
main
get
Removable
Orders
test
Case
main
add
Parent
Bombs
get
Parent
Bombs
get
Child
Count
remove
compare
To
test
Case
main
get
Xby
Index
get
Y
By
Index
get
Index
test
Case
main
fill
Sieve
is
Prime
Number
test
Case
main
factorize
test
Case
main
get
GCD
get
LCM
get
Maximum
GCD
main
factorize
pow
Int
main
get
set
shift
Left
shift
Right
initialize
Position
get
Global
Period
main
get
GCD
get
LCM
get
LCM
get
Ticket
Numbers
main
find
Empty
Index
By
User
Id
is
Used
set
Used
test
Case
main
get
Row
By
Index
get
Col
By
Index
get
Group
By
Index
get
Group
By
Position
get
Index
By
Position
get
All
Prime
Numbers
test
Case
main
is
Prime
Number
fill
Sieve
get
Possible
Target
Number
main
get
Possible
Targets
main
get
Covered
Area
main
fill
Frequency
Table
get
Unique
Elements
main
get
Possible
Targets
main
compare
To
merger
Two
Sorted
Array
main
get
Unique
Range
Number
main
add
Birth
Date
remove
Birth
Date
make
Fibonacci
Table
get
Fibo
main
fill
Frequency
Table
solve
main
fill
Frequency
Table
get
Frequent
Number
main
get
Best
Range
main
is
Inside
test
Case
main
is
Consecutive
main
is
Prime
test
Case
main
get
Element
Type
Count
main
is
Winnable
main
bubble
Sort
main
main
compare
To
equals
to
String
is
Ordered
main
get
Maximum
Height
main
main
get
Squared
Distance
To
get
Distance
To
get
Largest
Rectangle
Area
get
Largest
Rectangle
Area
test
Case
main
get
Number
Of
Inversions
get
Number
Of
Inversions
main
pow
main
binary
Search
binary
Search
main
merge
Two
Ordered
Array
filter
Points
get
Closet
Distance
main
get
Distance
To
compare
To
get
Pivot
Index
swap
divide
Array
By
Pivot
quick
Sort
quick
Sort
main
find
All
Combinations
main
get
Minimum
Move
main
fib
main
merge
Sort
merge
Sort
concat
Ordered
Arrays
main
main
f
main
f
MIN
main
is
Multiplicable
test
Case
f
main
f
MAX
main
f
f
main
test
Case
f
is
Paired
main
f
main
f
MAX
main
f
main
f
main
f
next
Image
main
f
MIN
compute
Shortest
Paths
test
Case
main
get
Minimum
Spanning
Tree
main
compare
To
find
union
is
Connected
Graph
has
Euler
Path
has
Euler
Circuit
main
add
Edge
has
Edge
get
Degree
compute
Shortest
Paths
main
compare
To
read
Line
main
get
Group
Boss
union
is
Connected
get
Number
Of
Connected
Nodes
get
Shortest
Hamilton
Circuit
get
Shortest
Hamilton
Circuit
main
add
Edge
has
Edge
get
Distance
has
Hamilton
Path
has
Hamilton
Path
main
add
Edge
has
Edge
get
Minimum
Spanning
Tree
main
compare
To
get
Matched
Strings
main
is
Matched
test
Case
main
test
Case
main
test
Case
main
get
Buildings
At
set
Buildings
At
is
Inside
test
Case
print
Map
main
go
Straight
get
Next
Position
get
Position
turn
Right
test
Case
main
get
Squared
Length
length
get
Left
X
get
Right
X
get
Top
Y
get
Bottom
Y
in
Intersected
test
Case
main
get
Width
get
Height
get
Area
is
Intersected
get
Intersection
main
get
Matched
Indexes
is
Possible
Name
test
Case
main
test
Case
is
Possible
print
Map
main
go
Straight
get
Next
Position
get
Position
get
Direction
turn
Next
is
Inside
test
Case
print
Map
main
go
Straight
get
Next
Position
get
Position
turn
Next
main
get
Elapsed
Time
To
is
Possible
get
Total
Length
test
Case
main
get
Current
Direction
set
Current
Direction
go
Straight
get
Next
Position
get
Current
Column
get
Current
Row
get
Current
Position
get
Total
Length
test
Case
main
length
get
Left
X
get
Right
X
get
Top
Y
get
Bottom
Y
is
Intersected
To
