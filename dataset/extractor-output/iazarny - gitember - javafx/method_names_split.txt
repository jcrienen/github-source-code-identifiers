re
Test
is
Text
Extension
set
Up
tear
Down
test
Clone
Http
test
Clone
Https
test
Clone
No
Credentials
Provider
test
Clone
Wrong
Credentials
test
Remote
Repository
Push
test
Remote
Repository
Create
Branch
test
Remote
Repository
Delete
Branch
remote
Repository
Pull
test
Remote
Repository
Fetch
test
Remote
Checkout
external
Update
Of
Remote
Repo
adapt
get
Absolute
Path
To
Property
File
read
Write
parse
Git
Attributes
get
Lsf
Patters
remove
Lfs
Pattern
add
Lsf
Patters
decrypt
crypt
adapt
set
Up
tear
Down
create
Repositorywith
Lfs
set
Up
tear
Down
create
Repository
add
File
To
Commit
Stage
add
File
To
Commit
Stage
Negative
remove
File
From
Commit
Stage
commit
get
All
Files
create
Branch
delete
Local
Branch
Negative
delete
Local
Branch
merge
Branch
rebase
Branch
get
Branches
get
File
History
create
Tag
get
Head
stash
checkout
Rev
Commit
checkout
File
save
File
remove
File
compress
Database
main
start
changed
stop
get
Shell
load
FXML
To
New
Stage
load
FXML
get
Stage
get
Scene
getj
Metro
main
is
Allow
Update
By
Time
changed
changed
populate
Popup
handle
get
Hbar
Policy
set
Hbar
Policy
hbar
Policy
Property
get
Vbar
Policy
set
Vbar
Policy
vbar
Policy
Property
get
Content
remove
Content
dispose
unbind
Scroll
Bar
unbind
Scroll
Bar
total
Width
Estimate
Property
total
Height
Estimate
Property
estimated
Scroll
X
Property
estimated
Scroll
Y
Property
scroll
X
By
scroll
Y
By
scroll
X
To
Pixel
scroll
Y
To
Pixel
get
Vbar
compute
Pref
Width
compute
Pref
Height
compute
Min
Width
compute
Min
Height
compute
Max
Width
compute
Max
Height
layout
Children
set
H
Position
set
V
Position
setup
Unit
Increment
compute
Value
setup
Unit
Increment
compute
Value
offset
To
Scrollbar
Position
scrollbar
Position
To
Offset
set
Min
get
Max
get
Visible
Amount
set
Visible
Amount
get
Min
min
Property
max
Property
get
Block
Increment
block
Increment
Property
visible
Amount
Property
get
Value
value
Property
get
Unit
Increment
unit
Increment
Property
get
Window
Offset
Percent
window
Offset
Percent
Property
set
Data
adjust
Window
Offesst
Value
set
Hilight
Pos
Size
layout
Children
layout
Window
layout
Lines
fill
Lines
get
Color
get
Line
Thick
get
Max
Len
add
Item
And
Start
Edit
initialize
handle
handle
compute
Highlighting
get
Diff
Decoration
get
Decorate
By
Patch
get
get
Max
Len
get
get
Blame
apply
anotate
apply
Style
format
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
adapt
To
Style
Class
adapt
To
Style
Class
next
Token
SOF
next
float
Dot
Possible
float
Literal
Possible
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
sempred
SHEBANG
sempred
FLOAT
LITERAL
sempred
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
sempred
Java
Letter
sempred
Java
Letter
Or
Digit
sempred
Check1
Check2
Check3
Check4
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
expression
list
get
Rule
Index
enter
Rule
exit
Rule
prog
expression
terminator
expression
list
get
Rule
Index
enter
Rule
exit
Rule
expression
list
expression
list
function
definition
function
inline
call
require
block
if
statement
unless
statement
rvalue
return
statement
while
statement
for
statement
pir
inline
get
Rule
Index
enter
Rule
exit
Rule
expression
lvalue
ASSIGN
id
global
get
Rule
Index
enter
Rule
exit
Rule
global
get
id
global
ASSIGN
all
result
get
Rule
Index
enter
Rule
exit
Rule
global
set
id
global
get
Rule
Index
enter
Rule
exit
Rule
global
result
function
call
get
Rule
Index
enter
Rule
exit
Rule
function
inline
call
REQUIRE
literal
t
get
Rule
Index
enter
Rule
exit
Rule
require
block
PIR
crlf
pir
expression
list
END
get
Rule
Index
enter
Rule
exit
Rule
pir
inline
expression
list
get
Rule
Index
enter
Rule
exit
Rule
pir
expression
list
function
definition
header
function
definition
body
END
get
Rule
Index
enter
Rule
exit
Rule
function
definition
expression
list
get
Rule
Index
enter
Rule
exit
Rule
function
definition
body
DEF
function
name
crlf
function
definition
params
get
Rule
Index
enter
Rule
exit
Rule
function
definition
header
id
function
id
get
Rule
Index
enter
Rule
exit
Rule
function
name
LEFT
RBRACKET
RIGHT
RBRACKET
function
definition
params
list
get
Rule
Index
enter
Rule
exit
Rule
function
definition
params
function
definition
param
id
function
definition
params
list
COMMA
get
Rule
Index
enter
Rule
exit
Rule
function
definition
params
list
function
definition
params
list
id
get
Rule
Index
enter
Rule
exit
Rule
function
definition
param
id
RETURN
all
result
get
Rule
Index
enter
Rule
exit
Rule
return
statement
LEFT
RBRACKET
RIGHT
RBRACKET
function
name
function
call
param
list
get
Rule
Index
enter
Rule
exit
Rule
function
call
function
call
params
get
Rule
Index
enter
Rule
exit
Rule
function
call
param
list
function
param
function
call
params
COMMA
get
Rule
Index
enter
Rule
exit
Rule
function
call
params
function
call
params
function
unnamed
param
function
named
param
get
Rule
Index
enter
Rule
exit
Rule
function
param
int
result
float
result
string
result
dynamic
result
get
Rule
Index
enter
Rule
exit
Rule
function
unnamed
param
id
ASSIGN
int
result
float
result
string
result
dynamic
result
get
Rule
Index
enter
Rule
exit
Rule
function
named
param
function
call
get
Rule
Index
enter
Rule
exit
Rule
function
call
assignment
int
result
float
result
string
result
dynamic
result
global
result
get
Rule
Index
enter
Rule
exit
Rule
all
result
if
elsif
statement
get
Rule
Index
enter
Rule
exit
Rule
elsif
statement
ELSIF
cond
expression
crlf
crlf
statement
body
statement
body
else
token
if
elsif
statement
get
Rule
Index
enter
Rule
exit
Rule
if
elsif
statement
IF
cond
expression
crlf
crlf
statement
body
statement
body
END
else
token
elsif
statement
get
Rule
Index
enter
Rule
exit
Rule
if
statement
UNLESS
cond
expression
crlf
crlf
statement
body
statement
body
END
else
token
elsif
statement
get
Rule
Index
enter
Rule
exit
Rule
unless
statement
WHILE
cond
expression
crlf
statement
body
END
get
Rule
Index
enter
Rule
exit
Rule
while
statement
FOR
LEFT
RBRACKET
init
expression
SEMICOLON
SEMICOLON
cond
expression
loop
expression
RIGHT
RBRACKET
crlf
statement
body
END
get
Rule
Index
enter
Rule
exit
Rule
for
statement
for
init
list
get
Rule
Index
enter
Rule
exit
Rule
init
expression
int
assignment
float
assignment
string
assignment
dynamic
assignment
get
Rule
Index
enter
Rule
exit
Rule
all
assignment
all
assignment
for
init
list
COMMA
get
Rule
Index
enter
Rule
exit
Rule
for
init
list
for
init
list
comparison
list
get
Rule
Index
enter
Rule
exit
Rule
cond
expression
for
loop
list
get
Rule
Index
enter
Rule
exit
Rule
loop
expression
all
assignment
for
loop
list
COMMA
get
Rule
Index
enter
Rule
exit
Rule
for
loop
list
for
loop
list
statement
expression
list
get
Rule
Index
enter
Rule
exit
Rule
statement
body
expression
terminator
RETRY
break
expression
statement
expression
list
get
Rule
Index
enter
Rule
exit
Rule
statement
expression
list
statement
expression
list
rvalue
lvalue
ASSIGN
PLUS
ASSIGN
MINUS
ASSIGN
MUL
ASSIGN
DIV
ASSIGN
MOD
ASSIGN
EXP
ASSIGN
get
Rule
Index
enter
Rule
exit
Rule
assignment
dynamic
result
lvalue
ASSIGN
PLUS
ASSIGN
MINUS
ASSIGN
MUL
ASSIGN
DIV
ASSIGN
MOD
ASSIGN
EXP
ASSIGN
get
Rule
Index
enter
Rule
exit
Rule
dynamic
assignment
int
result
lvalue
ASSIGN
PLUS
ASSIGN
MINUS
ASSIGN
MUL
ASSIGN
DIV
ASSIGN
MOD
ASSIGN
EXP
ASSIGN
get
Rule
Index
enter
Rule
exit
Rule
int
assignment
float
result
lvalue
ASSIGN
PLUS
ASSIGN
MINUS
ASSIGN
MUL
ASSIGN
DIV
ASSIGN
MOD
ASSIGN
EXP
ASSIGN
get
Rule
Index
enter
Rule
exit
Rule
float
assignment
string
result
lvalue
ASSIGN
PLUS
ASSIGN
get
Rule
Index
enter
Rule
exit
Rule
string
assignment
LEFT
SBRACKET
RIGHT
SBRACKET
lvalue
ASSIGN
get
Rule
Index
enter
Rule
exit
Rule
initial
array
assignment
array
selector
ASSIGN
all
result
get
Rule
Index
enter
Rule
exit
Rule
array
assignment
LEFT
SBRACKET
array
definition
elements
RIGHT
SBRACKET
get
Rule
Index
enter
Rule
exit
Rule
array
definition
int
result
dynamic
result
array
definition
elements
COMMA
get
Rule
Index
enter
Rule
exit
Rule
array
definition
elements
array
definition
elements
id
LEFT
SBRACKET
RIGHT
SBRACKET
int
result
dynamic
result
id
global
get
Rule
Index
enter
Rule
exit
Rule
array
selector
int
result
dynamic
result
dynamic
result
MUL
DIV
MOD
float
result
string
result
PLUS
MINUS
LEFT
RBRACKET
RIGHT
RBRACKET
dynamic
get
Rule
Index
enter
Rule
exit
Rule
dynamic
result
dynamic
result
id
function
call
assignment
array
selector
get
Rule
Index
enter
Rule
exit
Rule
dynamic
LEFT
RBRACKET
int
result
int
result
RIGHT
RBRACKET
int
t
MUL
DIV
MOD
PLUS
MINUS
get
Rule
Index
enter
Rule
exit
Rule
int
result
int
result
int
result
float
result
float
result
MUL
DIV
MOD
PLUS
MINUS
LEFT
RBRACKET
RIGHT
RBRACKET
float
t
get
Rule
Index
enter
Rule
exit
Rule
float
result
float
result
int
result
string
result
string
result
MUL
literal
t
PLUS
get
Rule
Index
enter
Rule
exit
Rule
string
result
string
result
comparison
BIT
AND
comparison
list
AND
BIT
OR
OR
LEFT
RBRACKET
RIGHT
RBRACKET
get
Rule
Index
enter
Rule
exit
Rule
comparison
list
comp
var
comp
var
LESS
GREATER
LESS
EQUAL
GREATER
EQUAL
EQUAL
NOT
EQUAL
get
Rule
Index
enter
Rule
exit
Rule
comparison
all
result
array
selector
id
get
Rule
Index
enter
Rule
exit
Rule
comp
var
id
get
Rule
Index
enter
Rule
exit
Rule
lvalue
lvalue
initial
array
assignment
array
assignment
int
result
float
result
string
result
global
set
global
get
dynamic
assignment
string
assignment
float
assignment
int
assignment
assignment
function
call
literal
t
bool
t
float
t
int
t
nil
t
rvalue
rvalue
NOT
BIT
NOT
LEFT
RBRACKET
RIGHT
RBRACKET
EXP
MUL
DIV
MOD
PLUS
MINUS
BIT
SHL
BIT
SHR
BIT
AND
BIT
OR
BIT
XOR
LESS
GREATER
LESS
EQUAL
GREATER
EQUAL
EQUAL
NOT
EQUAL
OR
AND
get
Rule
Index
enter
Rule
exit
Rule
rvalue
rvalue
BREAK
get
Rule
Index
enter
Rule
exit
Rule
break
expression
LITERAL
get
Rule
Index
enter
Rule
exit
Rule
literal
t
FLOAT
get
Rule
Index
enter
Rule
exit
Rule
float
t
INT
get
Rule
Index
enter
Rule
exit
Rule
int
t
TRUE
FALSE
get
Rule
Index
enter
Rule
exit
Rule
bool
t
NIL
get
Rule
Index
enter
Rule
exit
Rule
nil
t
ID
get
Rule
Index
enter
Rule
exit
Rule
id
ID
GLOBAL
get
Rule
Index
enter
Rule
exit
Rule
id
global
ID
FUNCTION
get
Rule
Index
enter
Rule
exit
Rule
id
function
SEMICOLON
crlf
terminator
get
Rule
Index
enter
Rule
exit
Rule
terminator
terminator
ELSE
get
Rule
Index
enter
Rule
exit
Rule
else
token
CRLF
get
Rule
Index
enter
Rule
exit
Rule
crlf
sempred
expression
list
sempred
function
definition
params
list
sempred
function
call
params
sempred
for
init
list
sempred
for
loop
list
sempred
statement
expression
list
sempred
array
definition
elements
sempred
dynamic
result
sempred
int
result
sempred
float
result
sempred
string
result
sempred
rvalue
sempred
terminator
sempred
enter
Prog
exit
Prog
enter
Expression
list
exit
Expression
list
enter
Expression
exit
Expression
enter
Global
get
exit
Global
get
enter
Global
set
exit
Global
set
enter
Global
result
exit
Global
result
enter
Function
inline
call
exit
Function
inline
call
enter
Require
block
exit
Require
block
enter
Pir
inline
exit
Pir
inline
enter
Pir
expression
list
exit
Pir
expression
list
enter
Function
definition
exit
Function
definition
enter
Function
definition
body
exit
Function
definition
body
enter
Function
definition
header
exit
Function
definition
header
enter
Function
name
exit
Function
name
enter
Function
definition
params
exit
Function
definition
params
enter
Function
definition
params
list
exit
Function
definition
params
list
enter
Function
definition
param
id
exit
Function
definition
param
id
enter
Return
statement
exit
Return
statement
enter
Function
call
exit
Function
call
enter
Function
call
param
list
exit
Function
call
param
list
enter
Function
call
params
exit
Function
call
params
enter
Function
param
exit
Function
param
enter
Function
unnamed
param
exit
Function
unnamed
param
enter
Function
named
param
exit
Function
named
param
enter
Function
call
assignment
exit
Function
call
assignment
enter
All
result
exit
All
result
enter
Elsif
statement
exit
Elsif
statement
enter
If
elsif
statement
exit
If
elsif
statement
enter
If
statement
exit
If
statement
enter
Unless
statement
exit
Unless
statement
enter
While
statement
exit
While
statement
enter
For
statement
exit
For
statement
enter
Init
expression
exit
Init
expression
enter
All
assignment
exit
All
assignment
enter
For
init
list
exit
For
init
list
enter
Cond
expression
exit
Cond
expression
enter
Loop
expression
exit
Loop
expression
enter
For
loop
list
exit
For
loop
list
enter
Statement
body
exit
Statement
body
enter
Statement
expression
list
exit
Statement
expression
list
enter
Assignment
exit
Assignment
enter
Dynamic
assignment
exit
Dynamic
assignment
enter
Int
assignment
exit
Int
assignment
enter
Float
assignment
exit
Float
assignment
enter
String
assignment
exit
String
assignment
enter
Initial
array
assignment
exit
Initial
array
assignment
enter
Array
assignment
exit
Array
assignment
enter
Array
definition
exit
Array
definition
enter
Array
definition
elements
exit
Array
definition
elements
enter
Array
selector
exit
Array
selector
enter
Dynamic
result
exit
Dynamic
result
enter
Dynamic
exit
Dynamic
enter
Int
result
exit
Int
result
enter
Float
result
exit
Float
result
enter
String
result
exit
String
result
enter
Comparison
list
exit
Comparison
list
enter
Comparison
exit
Comparison
enter
Comp
var
exit
Comp
var
enter
Lvalue
exit
Lvalue
enter
Rvalue
exit
Rvalue
enter
Break
expression
exit
Break
expression
enter
Literal
t
exit
Literal
t
enter
Float
t
exit
Float
t
enter
Int
t
exit
Int
t
enter
Bool
t
exit
Bool
t
enter
Nil
t
exit
Nil
t
enter
Id
exit
Id
enter
Id
global
exit
Id
global
enter
Id
function
exit
Id
function
enter
Terminator
exit
Terminator
enter
Else
token
exit
Else
token
enter
Crlf
exit
Crlf
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Prog
exit
Prog
enter
Expression
list
exit
Expression
list
enter
Expression
exit
Expression
enter
Global
get
exit
Global
get
enter
Global
set
exit
Global
set
enter
Global
result
exit
Global
result
enter
Function
inline
call
exit
Function
inline
call
enter
Require
block
exit
Require
block
enter
Pir
inline
exit
Pir
inline
enter
Pir
expression
list
exit
Pir
expression
list
enter
Function
definition
exit
Function
definition
enter
Function
definition
body
exit
Function
definition
body
enter
Function
definition
header
exit
Function
definition
header
enter
Function
name
exit
Function
name
enter
Function
definition
params
exit
Function
definition
params
enter
Function
definition
params
list
exit
Function
definition
params
list
enter
Function
definition
param
id
exit
Function
definition
param
id
enter
Return
statement
exit
Return
statement
enter
Function
call
exit
Function
call
enter
Function
call
param
list
exit
Function
call
param
list
enter
Function
call
params
exit
Function
call
params
enter
Function
param
exit
Function
param
enter
Function
unnamed
param
exit
Function
unnamed
param
enter
Function
named
param
exit
Function
named
param
enter
Function
call
assignment
exit
Function
call
assignment
enter
All
result
exit
All
result
enter
Elsif
statement
exit
Elsif
statement
enter
If
elsif
statement
exit
If
elsif
statement
enter
If
statement
exit
If
statement
enter
Unless
statement
exit
Unless
statement
enter
While
statement
exit
While
statement
enter
For
statement
exit
For
statement
enter
Init
expression
exit
Init
expression
enter
All
assignment
exit
All
assignment
enter
For
init
list
exit
For
init
list
enter
Cond
expression
exit
Cond
expression
enter
Loop
expression
exit
Loop
expression
enter
For
loop
list
exit
For
loop
list
enter
Statement
body
exit
Statement
body
enter
Statement
expression
list
exit
Statement
expression
list
enter
Assignment
exit
Assignment
enter
Dynamic
assignment
exit
Dynamic
assignment
enter
Int
assignment
exit
Int
assignment
enter
Float
assignment
exit
Float
assignment
enter
String
assignment
exit
String
assignment
enter
Initial
array
assignment
exit
Initial
array
assignment
enter
Array
assignment
exit
Array
assignment
enter
Array
definition
exit
Array
definition
enter
Array
definition
elements
exit
Array
definition
elements
enter
Array
selector
exit
Array
selector
enter
Dynamic
result
exit
Dynamic
result
enter
Dynamic
exit
Dynamic
enter
Int
result
exit
Int
result
enter
Float
result
exit
Float
result
enter
String
result
exit
String
result
enter
Comparison
list
exit
Comparison
list
enter
Comparison
exit
Comparison
enter
Comp
var
exit
Comp
var
enter
Lvalue
exit
Lvalue
enter
Rvalue
exit
Rvalue
enter
Break
expression
exit
Break
expression
enter
Literal
t
exit
Literal
t
enter
Float
t
exit
Float
t
enter
Int
t
exit
Int
t
enter
Bool
t
exit
Bool
t
enter
Nil
t
exit
Nil
t
enter
Id
exit
Id
enter
Id
global
exit
Id
global
enter
Id
function
exit
Id
function
enter
Terminator
exit
Terminator
enter
Else
token
exit
Else
token
enter
Crlf
exit
Crlf
adapt
To
Style
Class
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
program
Heading
block
DOT
INTERFACE
get
Rule
Index
enter
Rule
exit
Rule
program
PROGRAM
identifier
SEMI
LPAREN
identifier
List
RPAREN
UNIT
get
Rule
Index
enter
Rule
exit
Rule
program
Heading
IDENT
get
Rule
Index
enter
Rule
exit
Rule
identifier
compound
Statement
label
Declaration
Part
label
Declaration
Part
constant
Definition
Part
constant
Definition
Part
type
Definition
Part
type
Definition
Part
variable
Declaration
Part
variable
Declaration
Part
procedure
And
Function
Declaration
Part
procedure
And
Function
Declaration
Part
uses
Units
Part
uses
Units
Part
IMPLEMENTATION
IMPLEMENTATION
get
Rule
Index
enter
Rule
exit
Rule
block
USES
identifier
List
SEMI
get
Rule
Index
enter
Rule
exit
Rule
uses
Units
Part
LABEL
label
label
SEMI
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
label
Declaration
Part
unsigned
Integer
get
Rule
Index
enter
Rule
exit
Rule
label
CONST
constant
Definition
constant
Definition
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
constant
Definition
Part
identifier
EQUAL
constant
get
Rule
Index
enter
Rule
exit
Rule
constant
Definition
CHR
LPAREN
unsigned
Integer
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
constant
Chr
unsigned
Number
sign
identifier
string
constant
Chr
get
Rule
Index
enter
Rule
exit
Rule
constant
unsigned
Integer
unsigned
Real
get
Rule
Index
enter
Rule
exit
Rule
unsigned
Number
NUM
INT
get
Rule
Index
enter
Rule
exit
Rule
unsigned
Integer
NUM
REAL
get
Rule
Index
enter
Rule
exit
Rule
unsigned
Real
PLUS
MINUS
get
Rule
Index
enter
Rule
exit
Rule
sign
TRUE
FALSE
get
Rule
Index
enter
Rule
exit
Rule
bool
STRING
LITERAL
get
Rule
Index
enter
Rule
exit
Rule
string
TYPE
type
Definition
type
Definition
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
type
Definition
Part
identifier
EQUAL
type
function
Type
procedure
Type
get
Rule
Index
enter
Rule
exit
Rule
type
Definition
FUNCTION
COLON
result
Type
formal
Parameter
List
get
Rule
Index
enter
Rule
exit
Rule
function
Type
PROCEDURE
formal
Parameter
List
get
Rule
Index
enter
Rule
exit
Rule
procedure
Type
simple
Type
structured
Type
pointer
Type
get
Rule
Index
enter
Rule
exit
Rule
type
scalar
Type
subrange
Type
type
Identifier
stringtype
get
Rule
Index
enter
Rule
exit
Rule
simple
Type
LPAREN
identifier
List
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
scalar
Type
constant
constant
DOTDOT
get
Rule
Index
enter
Rule
exit
Rule
subrange
Type
identifier
CHAR
BOOLEAN
INTEGER
REAL
STRING
get
Rule
Index
enter
Rule
exit
Rule
type
Identifier
PACKED
unpacked
Structured
Type
get
Rule
Index
enter
Rule
exit
Rule
structured
Type
array
Type
record
Type
set
Type
file
Type
get
Rule
Index
enter
Rule
exit
Rule
unpacked
Structured
Type
STRING
LBRACK
RBRACK
identifier
unsigned
Number
get
Rule
Index
enter
Rule
exit
Rule
stringtype
ARRAY
LBRACK
type
List
RBRACK
OF
component
Type
LBRACK2
RBRACK2
get
Rule
Index
enter
Rule
exit
Rule
array
Type
index
Type
index
Type
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
type
List
simple
Type
get
Rule
Index
enter
Rule
exit
Rule
index
Type
type
get
Rule
Index
enter
Rule
exit
Rule
component
Type
RECORD
END
field
List
get
Rule
Index
enter
Rule
exit
Rule
record
Type
fixed
Part
SEMI
variant
Part
get
Rule
Index
enter
Rule
exit
Rule
field
List
record
Section
record
Section
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
fixed
Part
identifier
List
COLON
type
get
Rule
Index
enter
Rule
exit
Rule
record
Section
CASE
tag
OF
variant
variant
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
variant
Part
identifier
COLON
type
Identifier
get
Rule
Index
enter
Rule
exit
Rule
tag
const
List
COLON
LPAREN
field
List
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
variant
SET
OF
base
Type
get
Rule
Index
enter
Rule
exit
Rule
set
Type
simple
Type
get
Rule
Index
enter
Rule
exit
Rule
base
Type
FILE
OF
type
get
Rule
Index
enter
Rule
exit
Rule
file
Type
POINTER
type
Identifier
get
Rule
Index
enter
Rule
exit
Rule
pointer
Type
VAR
variable
Declaration
variable
Declaration
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
variable
Declaration
Part
identifier
List
COLON
type
get
Rule
Index
enter
Rule
exit
Rule
variable
Declaration
procedure
Or
Function
Declaration
SEMI
get
Rule
Index
enter
Rule
exit
Rule
procedure
And
Function
Declaration
Part
procedure
Declaration
function
Declaration
get
Rule
Index
enter
Rule
exit
Rule
procedure
Or
Function
Declaration
PROCEDURE
identifier
SEMI
block
formal
Parameter
List
get
Rule
Index
enter
Rule
exit
Rule
procedure
Declaration
LPAREN
formal
Parameter
Section
formal
Parameter
Section
RPAREN
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
formal
Parameter
List
parameter
Group
VAR
FUNCTION
PROCEDURE
get
Rule
Index
enter
Rule
exit
Rule
formal
Parameter
Section
identifier
List
COLON
type
Identifier
get
Rule
Index
enter
Rule
exit
Rule
parameter
Group
identifier
identifier
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
identifier
List
constant
constant
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
const
List
FUNCTION
identifier
COLON
result
Type
SEMI
block
formal
Parameter
List
get
Rule
Index
enter
Rule
exit
Rule
function
Declaration
type
Identifier
get
Rule
Index
enter
Rule
exit
Rule
result
Type
label
COLON
unlabelled
Statement
get
Rule
Index
enter
Rule
exit
Rule
statement
simple
Statement
structured
Statement
get
Rule
Index
enter
Rule
exit
Rule
unlabelled
Statement
assignment
Statement
procedure
Statement
goto
Statement
empty
Statement
get
Rule
Index
enter
Rule
exit
Rule
simple
Statement
variable
ASSIGN
expression
get
Rule
Index
enter
Rule
exit
Rule
assignment
Statement
AT
identifier
identifier
LBRACK
LBRACK
expression
expression
RBRACK
RBRACK
LBRACK2
LBRACK2
RBRACK2
RBRACK2
DOT
DOT
POINTER
POINTER
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
variable
simple
Expression
relationaloperator
expression
get
Rule
Index
enter
Rule
exit
Rule
expression
EQUAL
NOT
EQUAL
LT
LE
GE
GT
IN
get
Rule
Index
enter
Rule
exit
Rule
relationaloperator
term
additiveoperator
simple
Expression
get
Rule
Index
enter
Rule
exit
Rule
simple
Expression
PLUS
MINUS
OR
get
Rule
Index
enter
Rule
exit
Rule
additiveoperator
signed
Factor
multiplicativeoperator
term
get
Rule
Index
enter
Rule
exit
Rule
term
STAR
SLASH
DIV
MOD
AND
get
Rule
Index
enter
Rule
exit
Rule
multiplicativeoperator
factor
PLUS
MINUS
get
Rule
Index
enter
Rule
exit
Rule
signed
Factor
variable
LPAREN
expression
RPAREN
function
Designator
unsigned
Constant
set
NOT
factor
bool
get
Rule
Index
enter
Rule
exit
Rule
factor
unsigned
Number
constant
Chr
string
NIL
get
Rule
Index
enter
Rule
exit
Rule
unsigned
Constant
identifier
LPAREN
parameter
List
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
function
Designator
actual
Parameter
actual
Parameter
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
parameter
List
LBRACK
element
List
RBRACK
LBRACK2
RBRACK2
get
Rule
Index
enter
Rule
exit
Rule
set
element
element
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
element
List
expression
expression
DOTDOT
get
Rule
Index
enter
Rule
exit
Rule
element
identifier
LPAREN
parameter
List
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
procedure
Statement
expression
parameterwidth
parameterwidth
get
Rule
Index
enter
Rule
exit
Rule
actual
Parameter
COLON
expression
get
Rule
Index
enter
Rule
exit
Rule
parameterwidth
GOTO
label
get
Rule
Index
enter
Rule
exit
Rule
goto
Statement
get
Rule
Index
enter
Rule
exit
Rule
empty
Statement
get
Rule
Index
enter
Rule
exit
Rule
empty
compound
Statement
conditional
Statement
repetetive
Statement
with
Statement
get
Rule
Index
enter
Rule
exit
Rule
structured
Statement
BEGIN
statements
END
get
Rule
Index
enter
Rule
exit
Rule
compound
Statement
statement
statement
SEMI
SEMI
get
Rule
Index
enter
Rule
exit
Rule
statements
if
Statement
case
Statement
get
Rule
Index
enter
Rule
exit
Rule
conditional
Statement
IF
expression
THEN
statement
statement
ELSE
get
Rule
Index
enter
Rule
exit
Rule
if
Statement
CASE
expression
OF
case
List
Element
case
List
Element
END
SEMI
SEMI
ELSE
statements
get
Rule
Index
enter
Rule
exit
Rule
case
Statement
const
List
COLON
statement
get
Rule
Index
enter
Rule
exit
Rule
case
List
Element
while
Statement
repeat
Statement
for
Statement
get
Rule
Index
enter
Rule
exit
Rule
repetetive
Statement
WHILE
expression
DO
statement
get
Rule
Index
enter
Rule
exit
Rule
while
Statement
REPEAT
statements
UNTIL
expression
get
Rule
Index
enter
Rule
exit
Rule
repeat
Statement
FOR
identifier
ASSIGN
for
List
DO
statement
get
Rule
Index
enter
Rule
exit
Rule
for
Statement
initial
Value
final
Value
TO
DOWNTO
get
Rule
Index
enter
Rule
exit
Rule
for
List
expression
get
Rule
Index
enter
Rule
exit
Rule
initial
Value
expression
get
Rule
Index
enter
Rule
exit
Rule
final
Value
WITH
record
Variable
List
DO
statement
get
Rule
Index
enter
Rule
exit
Rule
with
Statement
variable
variable
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
record
Variable
List
enter
Program
exit
Program
enter
Program
Heading
exit
Program
Heading
enter
Identifier
exit
Identifier
enter
Block
exit
Block
enter
Uses
Units
Part
exit
Uses
Units
Part
enter
Label
Declaration
Part
exit
Label
Declaration
Part
enter
Label
exit
Label
enter
Constant
Definition
Part
exit
Constant
Definition
Part
enter
Constant
Definition
exit
Constant
Definition
enter
Constant
Chr
exit
Constant
Chr
enter
Constant
exit
Constant
enter
Unsigned
Number
exit
Unsigned
Number
enter
Unsigned
Integer
exit
Unsigned
Integer
enter
Unsigned
Real
exit
Unsigned
Real
enter
Sign
exit
Sign
enter
Bool
exit
Bool
enter
String
exit
String
enter
Type
Definition
Part
exit
Type
Definition
Part
enter
Type
Definition
exit
Type
Definition
enter
Function
Type
exit
Function
Type
enter
Procedure
Type
exit
Procedure
Type
enter
Type
exit
Type
enter
Simple
Type
exit
Simple
Type
enter
Scalar
Type
exit
Scalar
Type
enter
Subrange
Type
exit
Subrange
Type
enter
Type
Identifier
exit
Type
Identifier
enter
Structured
Type
exit
Structured
Type
enter
Unpacked
Structured
Type
exit
Unpacked
Structured
Type
enter
Stringtype
exit
Stringtype
enter
Array
Type
exit
Array
Type
enter
Type
List
exit
Type
List
enter
Index
Type
exit
Index
Type
enter
Component
Type
exit
Component
Type
enter
Record
Type
exit
Record
Type
enter
Field
List
exit
Field
List
enter
Fixed
Part
exit
Fixed
Part
enter
Record
Section
exit
Record
Section
enter
Variant
Part
exit
Variant
Part
enter
Tag
exit
Tag
enter
Variant
exit
Variant
enter
Set
Type
exit
Set
Type
enter
Base
Type
exit
Base
Type
enter
File
Type
exit
File
Type
enter
Pointer
Type
exit
Pointer
Type
enter
Variable
Declaration
Part
exit
Variable
Declaration
Part
enter
Variable
Declaration
exit
Variable
Declaration
enter
Procedure
And
Function
Declaration
Part
exit
Procedure
And
Function
Declaration
Part
enter
Procedure
Or
Function
Declaration
exit
Procedure
Or
Function
Declaration
enter
Procedure
Declaration
exit
Procedure
Declaration
enter
Formal
Parameter
List
exit
Formal
Parameter
List
enter
Formal
Parameter
Section
exit
Formal
Parameter
Section
enter
Parameter
Group
exit
Parameter
Group
enter
Identifier
List
exit
Identifier
List
enter
Const
List
exit
Const
List
enter
Function
Declaration
exit
Function
Declaration
enter
Result
Type
exit
Result
Type
enter
Statement
exit
Statement
enter
Unlabelled
Statement
exit
Unlabelled
Statement
enter
Simple
Statement
exit
Simple
Statement
enter
Assignment
Statement
exit
Assignment
Statement
enter
Variable
exit
Variable
enter
Expression
exit
Expression
enter
Relationaloperator
exit
Relationaloperator
enter
Simple
Expression
exit
Simple
Expression
enter
Additiveoperator
exit
Additiveoperator
enter
Term
exit
Term
enter
Multiplicativeoperator
exit
Multiplicativeoperator
enter
Signed
Factor
exit
Signed
Factor
enter
Factor
exit
Factor
enter
Unsigned
Constant
exit
Unsigned
Constant
enter
Function
Designator
exit
Function
Designator
enter
Parameter
List
exit
Parameter
List
enter
Set
exit
Set
enter
Element
List
exit
Element
List
enter
Element
exit
Element
enter
Procedure
Statement
exit
Procedure
Statement
enter
Actual
Parameter
exit
Actual
Parameter
enter
Parameterwidth
exit
Parameterwidth
enter
Goto
Statement
exit
Goto
Statement
enter
Empty
Statement
exit
Empty
Statement
enter
Empty
exit
Empty
enter
Structured
Statement
exit
Structured
Statement
enter
Compound
Statement
exit
Compound
Statement
enter
Statements
exit
Statements
enter
Conditional
Statement
exit
Conditional
Statement
enter
If
Statement
exit
If
Statement
enter
Case
Statement
exit
Case
Statement
enter
Case
List
Element
exit
Case
List
Element
enter
Repetetive
Statement
exit
Repetetive
Statement
enter
While
Statement
exit
While
Statement
enter
Repeat
Statement
exit
Repeat
Statement
enter
For
Statement
exit
For
Statement
enter
For
List
exit
For
List
enter
Initial
Value
exit
Initial
Value
enter
Final
Value
exit
Final
Value
enter
With
Statement
exit
With
Statement
enter
Record
Variable
List
exit
Record
Variable
List
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
enter
Program
exit
Program
enter
Program
Heading
exit
Program
Heading
enter
Identifier
exit
Identifier
enter
Block
exit
Block
enter
Uses
Units
Part
exit
Uses
Units
Part
enter
Label
Declaration
Part
exit
Label
Declaration
Part
enter
Label
exit
Label
enter
Constant
Definition
Part
exit
Constant
Definition
Part
enter
Constant
Definition
exit
Constant
Definition
enter
Constant
Chr
exit
Constant
Chr
enter
Constant
exit
Constant
enter
Unsigned
Number
exit
Unsigned
Number
enter
Unsigned
Integer
exit
Unsigned
Integer
enter
Unsigned
Real
exit
Unsigned
Real
enter
Sign
exit
Sign
enter
Bool
exit
Bool
enter
String
exit
String
enter
Type
Definition
Part
exit
Type
Definition
Part
enter
Type
Definition
exit
Type
Definition
enter
Function
Type
exit
Function
Type
enter
Procedure
Type
exit
Procedure
Type
enter
Type
exit
Type
enter
Simple
Type
exit
Simple
Type
enter
Scalar
Type
exit
Scalar
Type
enter
Subrange
Type
exit
Subrange
Type
enter
Type
Identifier
exit
Type
Identifier
enter
Structured
Type
exit
Structured
Type
enter
Unpacked
Structured
Type
exit
Unpacked
Structured
Type
enter
Stringtype
exit
Stringtype
enter
Array
Type
exit
Array
Type
enter
Type
List
exit
Type
List
enter
Index
Type
exit
Index
Type
enter
Component
Type
exit
Component
Type
enter
Record
Type
exit
Record
Type
enter
Field
List
exit
Field
List
enter
Fixed
Part
exit
Fixed
Part
enter
Record
Section
exit
Record
Section
enter
Variant
Part
exit
Variant
Part
enter
Tag
exit
Tag
enter
Variant
exit
Variant
enter
Set
Type
exit
Set
Type
enter
Base
Type
exit
Base
Type
enter
File
Type
exit
File
Type
enter
Pointer
Type
exit
Pointer
Type
enter
Variable
Declaration
Part
exit
Variable
Declaration
Part
enter
Variable
Declaration
exit
Variable
Declaration
enter
Procedure
And
Function
Declaration
Part
exit
Procedure
And
Function
Declaration
Part
enter
Procedure
Or
Function
Declaration
exit
Procedure
Or
Function
Declaration
enter
Procedure
Declaration
exit
Procedure
Declaration
enter
Formal
Parameter
List
exit
Formal
Parameter
List
enter
Formal
Parameter
Section
exit
Formal
Parameter
Section
enter
Parameter
Group
exit
Parameter
Group
enter
Identifier
List
exit
Identifier
List
enter
Const
List
exit
Const
List
enter
Function
Declaration
exit
Function
Declaration
enter
Result
Type
exit
Result
Type
enter
Statement
exit
Statement
enter
Unlabelled
Statement
exit
Unlabelled
Statement
enter
Simple
Statement
exit
Simple
Statement
enter
Assignment
Statement
exit
Assignment
Statement
enter
Variable
exit
Variable
enter
Expression
exit
Expression
enter
Relationaloperator
exit
Relationaloperator
enter
Simple
Expression
exit
Simple
Expression
enter
Additiveoperator
exit
Additiveoperator
enter
Term
exit
Term
enter
Multiplicativeoperator
exit
Multiplicativeoperator
enter
Signed
Factor
exit
Signed
Factor
enter
Factor
exit
Factor
enter
Unsigned
Constant
exit
Unsigned
Constant
enter
Function
Designator
exit
Function
Designator
enter
Parameter
List
exit
Parameter
List
enter
Set
exit
Set
enter
Element
List
exit
Element
List
enter
Element
exit
Element
enter
Procedure
Statement
exit
Procedure
Statement
enter
Actual
Parameter
exit
Actual
Parameter
enter
Parameterwidth
exit
Parameterwidth
enter
Goto
Statement
exit
Goto
Statement
enter
Empty
Statement
exit
Empty
Statement
enter
Empty
exit
Empty
enter
Structured
Statement
exit
Structured
Statement
enter
Compound
Statement
exit
Compound
Statement
enter
Statements
exit
Statements
enter
Conditional
Statement
exit
Conditional
Statement
enter
If
Statement
exit
If
Statement
enter
Case
Statement
exit
Case
Statement
enter
Case
List
Element
exit
Case
List
Element
enter
Repetetive
Statement
exit
Repetetive
Statement
enter
While
Statement
exit
While
Statement
enter
Repeat
Statement
exit
Repeat
Statement
enter
For
Statement
exit
For
Statement
enter
For
List
exit
For
List
enter
Initial
Value
exit
Initial
Value
enter
Final
Value
exit
Final
Value
enter
With
Statement
exit
With
Statement
enter
Record
Variable
List
exit
Record
Variable
List
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
DS
ES
CS
SS
GS
FS
get
Rule
Index
enter
Rule
exit
Rule
segments
enter
Segments
exit
Segments
enter
Segments
exit
Segments
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
adapt
To
Style
Class
adapt
To
Style
Class
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Bool
exit
Bool
enter
Brakets
exit
Brakets
enter
Math
exit
Math
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Bool
exit
Bool
enter
Brakets
exit
Brakets
enter
Math
exit
Math
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
get
Rule
Index
enter
Rule
exit
Rule
bool
get
Rule
Index
enter
Rule
exit
Rule
brakets
get
Rule
Index
enter
Rule
exit
Rule
math
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
ws
charset
charset
imports
imports
namespace
namespace
nested
Statement
nested
Statement
Comment
Comment
Space
Space
Cdo
Cdo
Cdc
Cdc
get
Rule
Index
enter
Rule
exit
Rule
stylesheet
get
Rule
Index
copy
From
Charset
ws
ws
String
enter
Rule
exit
Rule
Charset
ws
ws
String
enter
Rule
exit
Rule
charset
get
Rule
Index
copy
From
Import
ws
ws
media
Query
List
String
Uri
enter
Rule
exit
Rule
Import
ws
ws
media
Query
List
String
Uri
enter
Rule
exit
Rule
imports
get
Rule
Index
copy
From
Namespace
ws
ws
String
Uri
namespace
Prefix
enter
Rule
exit
Rule
Namespace
ws
ws
String
Uri
namespace
Prefix
enter
Rule
exit
Rule
namespace
ident
get
Rule
Index
enter
Rule
exit
Rule
namespace
Prefix
Media
ws
ws
media
Query
List
group
Rule
Body
get
Rule
Index
enter
Rule
exit
Rule
media
ws
ws
media
Query
media
Query
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
media
Query
List
ws
ws
media
Type
And
And
media
Expression
media
Expression
Media
Only
Not
get
Rule
Index
enter
Rule
exit
Rule
media
Query
ident
get
Rule
Index
enter
Rule
exit
Rule
media
Type
ws
ws
media
Feature
expr
get
Rule
Index
enter
Rule
exit
Rule
media
Expression
ident
ws
get
Rule
Index
enter
Rule
exit
Rule
media
Feature
Page
ws
ws
pseudo
Page
declaration
declaration
get
Rule
Index
enter
Rule
exit
Rule
page
ident
ws
get
Rule
Index
enter
Rule
exit
Rule
pseudo
Page
selector
selector
Comma
Comma
ws
ws
get
Rule
Index
enter
Rule
exit
Rule
selector
Group
simple
Selector
Sequence
simple
Selector
Sequence
ws
ws
combinator
combinator
get
Rule
Index
enter
Rule
exit
Rule
selector
Plus
ws
Greater
Tilde
Space
get
Rule
Index
enter
Rule
exit
Rule
combinator
type
Selector
universal
Hash
Hash
class
Name
class
Name
attrib
attrib
pseudo
pseudo
negation
negation
get
Rule
Index
enter
Rule
exit
Rule
simple
Selector
Sequence
element
Name
type
Namespace
Prefix
get
Rule
Index
enter
Rule
exit
Rule
type
Selector
ident
get
Rule
Index
enter
Rule
exit
Rule
type
Namespace
Prefix
ident
get
Rule
Index
enter
Rule
exit
Rule
element
Name
type
Namespace
Prefix
get
Rule
Index
enter
Rule
exit
Rule
universal
ident
get
Rule
Index
enter
Rule
exit
Rule
class
Name
ws
ws
ident
ident
type
Namespace
Prefix
Prefix
Match
Suffix
Match
Substring
Match
Includes
Dash
Match
String
get
Rule
Index
enter
Rule
exit
Rule
attrib
ident
functional
Pseudo
get
Rule
Index
enter
Rule
exit
Rule
pseudo
Function
ws
expression
get
Rule
Index
enter
Rule
exit
Rule
functional
Pseudo
ws
ws
Plus
Plus
Minus
Minus
Dimension
Dimension
Unknown
Dimension
Unknown
Dimension
Number
Number
String
String
ident
ident
get
Rule
Index
enter
Rule
exit
Rule
expression
Pseudo
Not
ws
ws
negation
Arg
get
Rule
Index
enter
Rule
exit
Rule
negation
type
Selector
universal
Hash
class
Name
attrib
pseudo
get
Rule
Index
enter
Rule
exit
Rule
negation
Arg
get
Rule
Index
copy
From
ws
enter
Rule
exit
Rule
ws
Comma
Space
enter
Rule
exit
Rule
operator
get
Rule
Index
copy
From
ident
enter
Rule
exit
Rule
ident
ws
Variable
enter
Rule
exit
Rule
property
get
Rule
Index
copy
From
ws
ws
any
any
declaration
List
enter
Rule
exit
Rule
selector
Group
ws
ws
declaration
List
enter
Rule
exit
Rule
ruleset
declaration
declaration
ws
ws
get
Rule
Index
enter
Rule
exit
Rule
declaration
List
get
Rule
Index
copy
From
property
ws
value
enter
Rule
exit
Rule
property
ws
expr
prio
enter
Rule
exit
Rule
declaration
Important
ws
get
Rule
Index
enter
Rule
exit
Rule
prio
any
any
block
block
at
Keyword
at
Keyword
ws
ws
get
Rule
Index
enter
Rule
exit
Rule
value
term
term
operator
operator
get
Rule
Index
enter
Rule
exit
Rule
expr
get
Rule
Index
copy
From
dx
Image
Transform
enter
Rule
exit
Rule
number
ws
percentage
dimension
String
Unicode
Range
ident
var
Uri
hexcolor
calc
function
enter
Rule
exit
Rule
unknown
Dimension
ws
enter
Rule
exit
Rule
term
Function
ws
ws
expr
get
Rule
Index
enter
Rule
exit
Rule
function
Dx
Image
Transform
ws
ws
expr
get
Rule
Index
enter
Rule
exit
Rule
dx
Image
Transform
Hash
ws
get
Rule
Index
enter
Rule
exit
Rule
hexcolor
Number
Plus
Minus
get
Rule
Index
enter
Rule
exit
Rule
number
Percentage
Plus
Minus
get
Rule
Index
enter
Rule
exit
Rule
percentage
Dimension
Plus
Minus
get
Rule
Index
enter
Rule
exit
Rule
dimension
Unknown
Dimension
Plus
Minus
get
Rule
Index
enter
Rule
exit
Rule
unknown
Dimension
ident
ws
ws
number
percentage
dimension
unknown
Dimension
String
Uri
Hash
Unicode
Range
Includes
Dash
Match
Function
any
any
unused
unused
get
Rule
Index
enter
Rule
exit
Rule
any
get
Rule
Index
copy
From
at
Keyword
ws
ws
block
any
any
enter
Rule
exit
Rule
at
Rule
ident
get
Rule
Index
enter
Rule
exit
Rule
at
Keyword
block
at
Keyword
ws
Cdo
Cdc
get
Rule
Index
enter
Rule
exit
Rule
unused
ws
ws
declaration
List
declaration
List
nested
Statement
nested
Statement
any
any
block
block
at
Keyword
at
Keyword
get
Rule
Index
enter
Rule
exit
Rule
block
ruleset
media
page
font
Face
Rule
keyframes
Rule
supports
Rule
viewport
counter
Style
font
Feature
Values
Rule
at
Rule
get
Rule
Index
enter
Rule
exit
Rule
nested
Statement
ws
ws
nested
Statement
nested
Statement
get
Rule
Index
enter
Rule
exit
Rule
group
Rule
Body
Supports
ws
ws
supports
Condition
group
Rule
Body
get
Rule
Index
enter
Rule
exit
Rule
supports
Rule
supports
Negation
supports
Conjunction
supports
Disjunction
supports
Condition
In
Parens
get
Rule
Index
enter
Rule
exit
Rule
supports
Condition
ws
ws
supports
Condition
supports
Declaration
Condition
general
Enclosed
get
Rule
Index
enter
Rule
exit
Rule
supports
Condition
In
Parens
Not
ws
ws
Space
supports
Condition
In
Parens
get
Rule
Index
enter
Rule
exit
Rule
supports
Negation
supports
Condition
In
Parens
supports
Condition
In
Parens
ws
ws
Space
Space
And
And
get
Rule
Index
enter
Rule
exit
Rule
supports
Conjunction
supports
Condition
In
Parens
supports
Condition
In
Parens
ws
ws
Space
Space
Or
Or
get
Rule
Index
enter
Rule
exit
Rule
supports
Disjunction
ws
declaration
get
Rule
Index
enter
Rule
exit
Rule
supports
Declaration
Condition
Function
any
any
unused
unused
get
Rule
Index
enter
Rule
exit
Rule
general
Enclosed
Var
ws
ws
Variable
get
Rule
Index
enter
Rule
exit
Rule
var
Calc
ws
ws
calc
Sum
get
Rule
Index
enter
Rule
exit
Rule
calc
calc
Product
calc
Product
Space
Space
ws
ws
Plus
Plus
Minus
Minus
get
Rule
Index
enter
Rule
exit
Rule
calc
Sum
calc
Value
calc
Value
ws
ws
number
number
get
Rule
Index
enter
Rule
exit
Rule
calc
Product
number
ws
ws
dimension
unknown
Dimension
percentage
calc
Sum
get
Rule
Index
enter
Rule
exit
Rule
calc
Value
Font
Face
ws
ws
font
Face
Declaration
font
Face
Declaration
get
Rule
Index
enter
Rule
exit
Rule
font
Face
Rule
get
Rule
Index
copy
From
property
ws
expr
enter
Rule
exit
Rule
property
ws
value
enter
Rule
exit
Rule
font
Face
Declaration
Keyframes
ws
ws
Space
ident
keyframes
Blocks
get
Rule
Index
enter
Rule
exit
Rule
keyframes
Rule
keyframe
Selector
keyframe
Selector
ws
ws
declaration
List
declaration
List
get
Rule
Index
enter
Rule
exit
Rule
keyframes
Blocks
ws
ws
From
From
To
To
Percentage
Percentage
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
keyframe
Selector
Viewport
ws
ws
declaration
List
get
Rule
Index
enter
Rule
exit
Rule
viewport
Counter
Style
ws
ws
ident
declaration
List
get
Rule
Index
enter
Rule
exit
Rule
counter
Style
Font
Feature
Values
ws
ws
font
Family
Name
List
feature
Value
Block
feature
Value
Block
get
Rule
Index
enter
Rule
exit
Rule
font
Feature
Values
Rule
font
Family
Name
font
Family
Name
ws
ws
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
font
Family
Name
List
String
ident
ident
ws
ws
get
Rule
Index
enter
Rule
exit
Rule
font
Family
Name
feature
Type
ws
ws
feature
Value
Definition
feature
Value
Definition
get
Rule
Index
enter
Rule
exit
Rule
feature
Value
Block
at
Keyword
get
Rule
Index
enter
Rule
exit
Rule
feature
Type
ident
ws
ws
number
number
get
Rule
Index
enter
Rule
exit
Rule
feature
Value
Definition
Ident
Media
Only
Not
And
Or
From
To
get
Rule
Index
enter
Rule
exit
Rule
ident
Comment
Comment
Space
Space
get
Rule
Index
enter
Rule
exit
Rule
ws
enter
Stylesheet
exit
Stylesheet
enter
Good
Charset
exit
Good
Charset
enter
Bad
Charset
exit
Bad
Charset
enter
Good
Import
exit
Good
Import
enter
Bad
Import
exit
Bad
Import
enter
Good
Namespace
exit
Good
Namespace
enter
Bad
Namespace
exit
Bad
Namespace
enter
Namespace
Prefix
exit
Namespace
Prefix
enter
Media
exit
Media
enter
Media
Query
List
exit
Media
Query
List
enter
Media
Query
exit
Media
Query
enter
Media
Type
exit
Media
Type
enter
Media
Expression
exit
Media
Expression
enter
Media
Feature
exit
Media
Feature
enter
Page
exit
Page
enter
Pseudo
Page
exit
Pseudo
Page
enter
Selector
Group
exit
Selector
Group
enter
Selector
exit
Selector
enter
Combinator
exit
Combinator
enter
Simple
Selector
Sequence
exit
Simple
Selector
Sequence
enter
Type
Selector
exit
Type
Selector
enter
Type
Namespace
Prefix
exit
Type
Namespace
Prefix
enter
Element
Name
exit
Element
Name
enter
Universal
exit
Universal
enter
Class
Name
exit
Class
Name
enter
Attrib
exit
Attrib
enter
Pseudo
exit
Pseudo
enter
Functional
Pseudo
exit
Functional
Pseudo
enter
Expression
exit
Expression
enter
Negation
exit
Negation
enter
Negation
Arg
exit
Negation
Arg
enter
Good
Operator
exit
Good
Operator
enter
Bad
Operator
exit
Bad
Operator
enter
Good
Property
exit
Good
Property
enter
Bad
Property
exit
Bad
Property
enter
Known
Ruleset
exit
Known
Ruleset
enter
Unknown
Ruleset
exit
Unknown
Ruleset
enter
Declaration
List
exit
Declaration
List
enter
Known
Declaration
exit
Known
Declaration
enter
Unknown
Declaration
exit
Unknown
Declaration
enter
Prio
exit
Prio
enter
Value
exit
Value
enter
Expr
exit
Expr
enter
Known
Term
exit
Known
Term
enter
Unknown
Term
exit
Unknown
Term
enter
Bad
Term
exit
Bad
Term
enter
Function
exit
Function
enter
Dx
Image
Transform
exit
Dx
Image
Transform
enter
Hexcolor
exit
Hexcolor
enter
Number
exit
Number
enter
Percentage
exit
Percentage
enter
Dimension
exit
Dimension
enter
Unknown
Dimension
exit
Unknown
Dimension
enter
Any
exit
Any
enter
Unknown
At
Rule
exit
Unknown
At
Rule
enter
At
Keyword
exit
At
Keyword
enter
Unused
exit
Unused
enter
Block
exit
Block
enter
Nested
Statement
exit
Nested
Statement
enter
Group
Rule
Body
exit
Group
Rule
Body
enter
Supports
Rule
exit
Supports
Rule
enter
Supports
Condition
exit
Supports
Condition
enter
Supports
Condition
In
Parens
exit
Supports
Condition
In
Parens
enter
Supports
Negation
exit
Supports
Negation
enter
Supports
Conjunction
exit
Supports
Conjunction
enter
Supports
Disjunction
exit
Supports
Disjunction
enter
Supports
Declaration
Condition
exit
Supports
Declaration
Condition
enter
General
Enclosed
exit
General
Enclosed
enter
Var
exit
Var
enter
Calc
exit
Calc
enter
Calc
Sum
exit
Calc
Sum
enter
Calc
Product
exit
Calc
Product
enter
Calc
Value
exit
Calc
Value
enter
Font
Face
Rule
exit
Font
Face
Rule
enter
Known
Font
Face
Declaration
exit
Known
Font
Face
Declaration
enter
Unknown
Font
Face
Declaration
exit
Unknown
Font
Face
Declaration
enter
Keyframes
Rule
exit
Keyframes
Rule
enter
Keyframes
Blocks
exit
Keyframes
Blocks
enter
Keyframe
Selector
exit
Keyframe
Selector
enter
Viewport
exit
Viewport
enter
Counter
Style
exit
Counter
Style
enter
Font
Feature
Values
Rule
exit
Font
Feature
Values
Rule
enter
Font
Family
Name
List
exit
Font
Family
Name
List
enter
Font
Family
Name
exit
Font
Family
Name
enter
Feature
Value
Block
exit
Feature
Value
Block
enter
Feature
Type
exit
Feature
Type
enter
Feature
Value
Definition
exit
Feature
Value
Definition
enter
Ident
exit
Ident
enter
Ws
exit
Ws
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Stylesheet
exit
Stylesheet
enter
Good
Charset
exit
Good
Charset
enter
Bad
Charset
exit
Bad
Charset
enter
Good
Import
exit
Good
Import
enter
Bad
Import
exit
Bad
Import
enter
Good
Namespace
exit
Good
Namespace
enter
Bad
Namespace
exit
Bad
Namespace
enter
Namespace
Prefix
exit
Namespace
Prefix
enter
Media
exit
Media
enter
Media
Query
List
exit
Media
Query
List
enter
Media
Query
exit
Media
Query
enter
Media
Type
exit
Media
Type
enter
Media
Expression
exit
Media
Expression
enter
Media
Feature
exit
Media
Feature
enter
Page
exit
Page
enter
Pseudo
Page
exit
Pseudo
Page
enter
Selector
Group
exit
Selector
Group
enter
Selector
exit
Selector
enter
Combinator
exit
Combinator
enter
Simple
Selector
Sequence
exit
Simple
Selector
Sequence
enter
Type
Selector
exit
Type
Selector
enter
Type
Namespace
Prefix
exit
Type
Namespace
Prefix
enter
Element
Name
exit
Element
Name
enter
Universal
exit
Universal
enter
Class
Name
exit
Class
Name
enter
Attrib
exit
Attrib
enter
Pseudo
exit
Pseudo
enter
Functional
Pseudo
exit
Functional
Pseudo
enter
Expression
exit
Expression
enter
Negation
exit
Negation
enter
Negation
Arg
exit
Negation
Arg
enter
Good
Operator
exit
Good
Operator
enter
Bad
Operator
exit
Bad
Operator
enter
Good
Property
exit
Good
Property
enter
Bad
Property
exit
Bad
Property
enter
Known
Ruleset
exit
Known
Ruleset
enter
Unknown
Ruleset
exit
Unknown
Ruleset
enter
Declaration
List
exit
Declaration
List
enter
Known
Declaration
exit
Known
Declaration
enter
Unknown
Declaration
exit
Unknown
Declaration
enter
Prio
exit
Prio
enter
Value
exit
Value
enter
Expr
exit
Expr
enter
Known
Term
exit
Known
Term
enter
Unknown
Term
exit
Unknown
Term
enter
Bad
Term
exit
Bad
Term
enter
Function
exit
Function
enter
Dx
Image
Transform
exit
Dx
Image
Transform
enter
Hexcolor
exit
Hexcolor
enter
Number
exit
Number
enter
Percentage
exit
Percentage
enter
Dimension
exit
Dimension
enter
Unknown
Dimension
exit
Unknown
Dimension
enter
Any
exit
Any
enter
Unknown
At
Rule
exit
Unknown
At
Rule
enter
At
Keyword
exit
At
Keyword
enter
Unused
exit
Unused
enter
Block
exit
Block
enter
Nested
Statement
exit
Nested
Statement
enter
Group
Rule
Body
exit
Group
Rule
Body
enter
Supports
Rule
exit
Supports
Rule
enter
Supports
Condition
exit
Supports
Condition
enter
Supports
Condition
In
Parens
exit
Supports
Condition
In
Parens
enter
Supports
Negation
exit
Supports
Negation
enter
Supports
Conjunction
exit
Supports
Conjunction
enter
Supports
Disjunction
exit
Supports
Disjunction
enter
Supports
Declaration
Condition
exit
Supports
Declaration
Condition
enter
General
Enclosed
exit
General
Enclosed
enter
Var
exit
Var
enter
Calc
exit
Calc
enter
Calc
Sum
exit
Calc
Sum
enter
Calc
Product
exit
Calc
Product
enter
Calc
Value
exit
Calc
Value
enter
Font
Face
Rule
exit
Font
Face
Rule
enter
Known
Font
Face
Declaration
exit
Known
Font
Face
Declaration
enter
Unknown
Font
Face
Declaration
exit
Unknown
Font
Face
Declaration
enter
Keyframes
Rule
exit
Keyframes
Rule
enter
Keyframes
Blocks
exit
Keyframes
Blocks
enter
Keyframe
Selector
exit
Keyframe
Selector
enter
Viewport
exit
Viewport
enter
Counter
Style
exit
Counter
Style
enter
Font
Feature
Values
Rule
exit
Font
Feature
Values
Rule
enter
Font
Family
Name
List
exit
Font
Family
Name
List
enter
Font
Family
Name
exit
Font
Family
Name
enter
Feature
Value
Block
exit
Feature
Value
Block
enter
Feature
Type
exit
Feature
Type
enter
Feature
Value
Definition
exit
Feature
Value
Definition
enter
Ident
exit
Ident
enter
Ws
exit
Ws
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
sempred
COMMENT
sempred
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
action
Open
Brace
action
Close
Brace
action
String
Literal
action
Back
Tick
action
Back
Tick
Inside
action
sempred
Hash
Bang
Line
sempred
Regular
Expression
Literal
sempred
Template
Close
Brace
sempred
Octal
Integer
Literal
sempred
Implements
sempred
Strict
Let
sempred
Non
Strict
Let
sempred
Private
sempred
Public
sempred
Interface
sempred
Package
sempred
Protected
sempred
Static
sempred
Yield
sempred
Is
Start
Of
File
get
Strict
Default
set
Use
Strict
Default
Is
Strict
Mode
Is
In
Template
String
next
Token
Process
Open
Brace
Process
Close
Brace
Process
String
Literal
Increase
Template
Depth
Decrease
Template
Depth
Is
Regex
Possible
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
action
Open
Brace
action
Close
Brace
action
String
Literal
action
Back
Tick
action
Back
Tick
Inside
action
sempred
Regular
Expression
Literal
sempred
Template
Close
Brace
sempred
Octal
Integer
Literal
sempred
get
Strict
Default
set
Use
Strict
Default
Is
Strict
Mode
Is
In
Template
String
next
Token
Process
Open
Brace
Process
Close
Brace
Process
String
Literal
Increase
Template
Depth
Decrease
Template
Depth
Is
Regex
Possible
adapt
To
Style
Class
skip
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Json
exit
Json
enter
Obj
exit
Obj
enter
Pair
exit
Pair
enter
Arr
exit
Arr
enter
Value
exit
Value
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
enter
Json
exit
Json
enter
Obj
exit
Obj
enter
Pair
exit
Pair
enter
Arr
exit
Arr
enter
Value
exit
Value
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
value
get
Rule
Index
enter
Rule
exit
Rule
json
pair
pair
get
Rule
Index
enter
Rule
exit
Rule
obj
STRING
value
get
Rule
Index
enter
Rule
exit
Rule
pair
value
value
get
Rule
Index
enter
Rule
exit
Rule
arr
STRING
NUMBER
obj
arr
get
Rule
Index
enter
Rule
exit
Rule
value
emit
next
Token
create
Dedent
common
Token
get
Indentation
Count
at
Start
Of
Input
open
Brace
close
Brace
on
New
Line
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
action
NEWLINE
action
OPEN
PAREN
action
CLOSE
PAREN
action
OPEN
BRACK
action
CLOSE
BRACK
action
OPEN
BRACE
action
CLOSE
BRACE
action
sempred
NEWLINE
sempred
adapt
To
Style
Class
adapt
To
Style
Class
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Prog
exit
Prog
enter
Line
exit
Line
enter
Amperoper
exit
Amperoper
enter
Linenumber
exit
Linenumber
enter
Amprstmt
exit
Amprstmt
enter
Statement
exit
Statement
enter
Vardecl
exit
Vardecl
enter
Printstmt1
exit
Printstmt1
enter
Printlist
exit
Printlist
enter
Getstmt
exit
Getstmt
enter
Letstmt
exit
Letstmt
enter
Variableassignment
exit
Variableassignment
enter
Relop
exit
Relop
enter
Neq
exit
Neq
enter
Ifstmt
exit
Ifstmt
enter
Forstmt1
exit
Forstmt1
enter
Forstmt2
exit
Forstmt2
enter
Nextstmt
exit
Nextstmt
enter
Inputstmt
exit
Inputstmt
enter
Readstmt
exit
Readstmt
enter
Dimstmt
exit
Dimstmt
enter
Gotostmt
exit
Gotostmt
enter
Gosubstmt
exit
Gosubstmt
enter
Pokestmt
exit
Pokestmt
enter
Callstmt
exit
Callstmt
enter
Hplotstmt
exit
Hplotstmt
enter
Vplotstmt
exit
Vplotstmt
enter
Plotstmt
exit
Plotstmt
enter
Ongotostmt
exit
Ongotostmt
enter
Ongosubstmt
exit
Ongosubstmt
enter
Vtabstmnt
exit
Vtabstmnt
enter
Htabstmnt
exit
Htabstmnt
enter
Himemstmt
exit
Himemstmt
enter
Lomemstmt
exit
Lomemstmt
enter
Datastmt
exit
Datastmt
enter
Datum
exit
Datum
enter
Waitstmt
exit
Waitstmt
enter
Xdrawstmt
exit
Xdrawstmt
enter
Drawstmt
exit
Drawstmt
enter
Defstmt
exit
Defstmt
enter
Tabstmt
exit
Tabstmt
enter
Speedstmt
exit
Speedstmt
enter
Rotstmt
exit
Rotstmt
enter
Scalestmt
exit
Scalestmt
enter
Colorstmt
exit
Colorstmt
enter
Hcolorstmt
exit
Hcolorstmt
enter
Hlinstmt
exit
Hlinstmt
enter
Vlinstmt
exit
Vlinstmt
enter
Onerrstmt
exit
Onerrstmt
enter
Prstmt
exit
Prstmt
enter
Instmt
exit
Instmt
enter
Storestmt
exit
Storestmt
enter
Recallstmt
exit
Recallstmt
enter
Liststmt
exit
Liststmt
enter
Popstmt
exit
Popstmt
enter
Amptstmt
exit
Amptstmt
enter
Includestmt
exit
Includestmt
enter
Endstmt
exit
Endstmt
enter
Returnstmt
exit
Returnstmt
enter
Restorestmt
exit
Restorestmt
enter
Number
exit
Number
enter
Func
exit
Func
enter
Sign
Expression
exit
Sign
Expression
enter
Exponent
Expression
exit
Exponent
Expression
enter
Multiplying
Expression
exit
Multiplying
Expression
enter
Adding
Expression
exit
Adding
Expression
enter
Relational
Expression
exit
Relational
Expression
enter
Expression
exit
Expression
enter
Var
exit
Var
enter
Varname
exit
Varname
enter
Varsuffix
exit
Varsuffix
enter
Varlist
exit
Varlist
enter
Exprlist
exit
Exprlist
enter
Sqrfunc
exit
Sqrfunc
enter
Chrfunc
exit
Chrfunc
enter
Lenfunc
exit
Lenfunc
enter
Ascfunc
exit
Ascfunc
enter
Midfunc
exit
Midfunc
enter
Pdlfunc
exit
Pdlfunc
enter
Peekfunc
exit
Peekfunc
enter
Intfunc
exit
Intfunc
enter
Spcfunc
exit
Spcfunc
enter
Frefunc
exit
Frefunc
enter
Posfunc
exit
Posfunc
enter
Usrfunc
exit
Usrfunc
enter
Leftfunc
exit
Leftfunc
enter
Rightfunc
exit
Rightfunc
enter
Strfunc
exit
Strfunc
enter
Fnfunc
exit
Fnfunc
enter
Valfunc
exit
Valfunc
enter
Scrnfunc
exit
Scrnfunc
enter
Sinfunc
exit
Sinfunc
enter
Cosfunc
exit
Cosfunc
enter
Tanfunc
exit
Tanfunc
enter
Atnfunc
exit
Atnfunc
enter
Rndfunc
exit
Rndfunc
enter
Sgnfunc
exit
Sgnfunc
enter
Expfunc
exit
Expfunc
enter
Logfunc
exit
Logfunc
enter
Absfunc
exit
Absfunc
enter
Tabfunc
exit
Tabfunc
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
enter
Prog
exit
Prog
enter
Line
exit
Line
enter
Amperoper
exit
Amperoper
enter
Linenumber
exit
Linenumber
enter
Amprstmt
exit
Amprstmt
enter
Statement
exit
Statement
enter
Vardecl
exit
Vardecl
enter
Printstmt1
exit
Printstmt1
enter
Printlist
exit
Printlist
enter
Getstmt
exit
Getstmt
enter
Letstmt
exit
Letstmt
enter
Variableassignment
exit
Variableassignment
enter
Relop
exit
Relop
enter
Neq
exit
Neq
enter
Ifstmt
exit
Ifstmt
enter
Forstmt1
exit
Forstmt1
enter
Forstmt2
exit
Forstmt2
enter
Nextstmt
exit
Nextstmt
enter
Inputstmt
exit
Inputstmt
enter
Readstmt
exit
Readstmt
enter
Dimstmt
exit
Dimstmt
enter
Gotostmt
exit
Gotostmt
enter
Gosubstmt
exit
Gosubstmt
enter
Pokestmt
exit
Pokestmt
enter
Callstmt
exit
Callstmt
enter
Hplotstmt
exit
Hplotstmt
enter
Vplotstmt
exit
Vplotstmt
enter
Plotstmt
exit
Plotstmt
enter
Ongotostmt
exit
Ongotostmt
enter
Ongosubstmt
exit
Ongosubstmt
enter
Vtabstmnt
exit
Vtabstmnt
enter
Htabstmnt
exit
Htabstmnt
enter
Himemstmt
exit
Himemstmt
enter
Lomemstmt
exit
Lomemstmt
enter
Datastmt
exit
Datastmt
enter
Datum
exit
Datum
enter
Waitstmt
exit
Waitstmt
enter
Xdrawstmt
exit
Xdrawstmt
enter
Drawstmt
exit
Drawstmt
enter
Defstmt
exit
Defstmt
enter
Tabstmt
exit
Tabstmt
enter
Speedstmt
exit
Speedstmt
enter
Rotstmt
exit
Rotstmt
enter
Scalestmt
exit
Scalestmt
enter
Colorstmt
exit
Colorstmt
enter
Hcolorstmt
exit
Hcolorstmt
enter
Hlinstmt
exit
Hlinstmt
enter
Vlinstmt
exit
Vlinstmt
enter
Onerrstmt
exit
Onerrstmt
enter
Prstmt
exit
Prstmt
enter
Instmt
exit
Instmt
enter
Storestmt
exit
Storestmt
enter
Recallstmt
exit
Recallstmt
enter
Liststmt
exit
Liststmt
enter
Popstmt
exit
Popstmt
enter
Amptstmt
exit
Amptstmt
enter
Includestmt
exit
Includestmt
enter
Endstmt
exit
Endstmt
enter
Returnstmt
exit
Returnstmt
enter
Restorestmt
exit
Restorestmt
enter
Number
exit
Number
enter
Func
exit
Func
enter
Sign
Expression
exit
Sign
Expression
enter
Exponent
Expression
exit
Exponent
Expression
enter
Multiplying
Expression
exit
Multiplying
Expression
enter
Adding
Expression
exit
Adding
Expression
enter
Relational
Expression
exit
Relational
Expression
enter
Expression
exit
Expression
enter
Var
exit
Var
enter
Varname
exit
Varname
enter
Varsuffix
exit
Varsuffix
enter
Varlist
exit
Varlist
enter
Exprlist
exit
Exprlist
enter
Sqrfunc
exit
Sqrfunc
enter
Chrfunc
exit
Chrfunc
enter
Lenfunc
exit
Lenfunc
enter
Ascfunc
exit
Ascfunc
enter
Midfunc
exit
Midfunc
enter
Pdlfunc
exit
Pdlfunc
enter
Peekfunc
exit
Peekfunc
enter
Intfunc
exit
Intfunc
enter
Spcfunc
exit
Spcfunc
enter
Frefunc
exit
Frefunc
enter
Posfunc
exit
Posfunc
enter
Usrfunc
exit
Usrfunc
enter
Leftfunc
exit
Leftfunc
enter
Rightfunc
exit
Rightfunc
enter
Strfunc
exit
Strfunc
enter
Fnfunc
exit
Fnfunc
enter
Valfunc
exit
Valfunc
enter
Scrnfunc
exit
Scrnfunc
enter
Sinfunc
exit
Sinfunc
enter
Cosfunc
exit
Cosfunc
enter
Tanfunc
exit
Tanfunc
enter
Atnfunc
exit
Atnfunc
enter
Rndfunc
exit
Rndfunc
enter
Sgnfunc
exit
Sgnfunc
enter
Expfunc
exit
Expfunc
enter
Logfunc
exit
Logfunc
enter
Absfunc
exit
Absfunc
enter
Tabfunc
exit
Tabfunc
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
EOF
line
line
get
Rule
Index
enter
Rule
exit
Rule
prog
linenumber
COMMENT
REM
amprstmt
amprstmt
COLON
COLON
get
Rule
Index
enter
Rule
exit
Rule
line
AMPERSAND
get
Rule
Index
enter
Rule
exit
Rule
amperoper
NUMBER
get
Rule
Index
enter
Rule
exit
Rule
linenumber
statement
amperoper
COMMENT
REM
get
Rule
Index
enter
Rule
exit
Rule
amprstmt
CLS
LOAD
SAVE
TRACE
NOTRACE
FLASH
INVERSE
GR
NORMAL
SHLOAD
CLEAR
RUN
STOP
TEXT
HOME
HGR
HGR2
endstmt
returnstmt
restorestmt
amptstmt
popstmt
liststmt
storestmt
getstmt
recallstmt
nextstmt
instmt
prstmt
onerrstmt
hlinstmt
vlinstmt
colorstmt
speedstmt
scalestmt
rotstmt
hcolorstmt
himemstmt
lomemstmt
printstmt1
pokestmt
plotstmt
ongotostmt
ongosubstmt
ifstmt
forstmt1
forstmt2
inputstmt
tabstmt
dimstmt
gotostmt
gosubstmt
callstmt
readstmt
hplotstmt
vplotstmt
vtabstmnt
htabstmnt
waitstmt
datastmt
xdrawstmt
drawstmt
defstmt
letstmt
includestmt
get
Rule
Index
enter
Rule
exit
Rule
statement
var
LPAREN
LPAREN
exprlist
exprlist
RPAREN
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
vardecl
PRINT
QUESTION
printlist
get
Rule
Index
enter
Rule
exit
Rule
printstmt1
expression
expression
COMMA
COMMA
SEMICOLON
SEMICOLON
get
Rule
Index
enter
Rule
exit
Rule
printlist
GET
exprlist
get
Rule
Index
enter
Rule
exit
Rule
getstmt
variableassignment
LET
get
Rule
Index
enter
Rule
exit
Rule
letstmt
vardecl
EQ
exprlist
get
Rule
Index
enter
Rule
exit
Rule
variableassignment
GTE
GT
EQ
LTE
LT
neq
get
Rule
Index
enter
Rule
exit
Rule
relop
LT
GT
get
Rule
Index
enter
Rule
exit
Rule
neq
IF
expression
statement
linenumber
THEN
get
Rule
Index
enter
Rule
exit
Rule
ifstmt
FOR
vardecl
vardecl
EQ
expression
expression
TO
STEP
statement
NEXT
get
Rule
Index
enter
Rule
exit
Rule
forstmt1
FOR
vardecl
EQ
expression
expression
TO
STEP
get
Rule
Index
enter
Rule
exit
Rule
forstmt2
NEXT
vardecl
vardecl
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
nextstmt
INPUT
varlist
STRINGLITERAL
COMMA
SEMICOLON
get
Rule
Index
enter
Rule
exit
Rule
inputstmt
READ
varlist
get
Rule
Index
enter
Rule
exit
Rule
readstmt
DIM
varlist
get
Rule
Index
enter
Rule
exit
Rule
dimstmt
GOTO
linenumber
get
Rule
Index
enter
Rule
exit
Rule
gotostmt
GOSUB
expression
get
Rule
Index
enter
Rule
exit
Rule
gosubstmt
POKE
expression
expression
COMMA
get
Rule
Index
enter
Rule
exit
Rule
pokestmt
CALL
exprlist
get
Rule
Index
enter
Rule
exit
Rule
callstmt
HPLOT
expression
expression
COMMA
COMMA
TO
TO
get
Rule
Index
enter
Rule
exit
Rule
hplotstmt
VPLOT
expression
expression
COMMA
COMMA
TO
TO
get
Rule
Index
enter
Rule
exit
Rule
vplotstmt
PLOT
expression
expression
COMMA
get
Rule
Index
enter
Rule
exit
Rule
plotstmt
ON
expression
GOTO
linenumber
linenumber
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
ongotostmt
ON
expression
GOSUB
linenumber
linenumber
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
ongosubstmt
VTAB
expression
get
Rule
Index
enter
Rule
exit
Rule
vtabstmnt
HTAB
expression
get
Rule
Index
enter
Rule
exit
Rule
htabstmnt
HIMEM
COLON
expression
get
Rule
Index
enter
Rule
exit
Rule
himemstmt
LOMEM
COLON
expression
get
Rule
Index
enter
Rule
exit
Rule
lomemstmt
DATA
datum
datum
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
datastmt
number
STRINGLITERAL
get
Rule
Index
enter
Rule
exit
Rule
datum
WAIT
expression
expression
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
waitstmt
XDRAW
expression
expression
AT
COMMA
get
Rule
Index
enter
Rule
exit
Rule
xdrawstmt
DRAW
expression
expression
AT
COMMA
get
Rule
Index
enter
Rule
exit
Rule
drawstmt
DEF
var
var
LPAREN
RPAREN
EQ
expression
FN
get
Rule
Index
enter
Rule
exit
Rule
defstmt
TAB
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
tabstmt
SPEED
EQ
expression
get
Rule
Index
enter
Rule
exit
Rule
speedstmt
ROT
EQ
expression
get
Rule
Index
enter
Rule
exit
Rule
rotstmt
SCALE
EQ
expression
get
Rule
Index
enter
Rule
exit
Rule
scalestmt
COLOR
EQ
expression
get
Rule
Index
enter
Rule
exit
Rule
colorstmt
HCOLOR
EQ
expression
get
Rule
Index
enter
Rule
exit
Rule
hcolorstmt
HLIN
expression
expression
COMMA
AT
get
Rule
Index
enter
Rule
exit
Rule
hlinstmt
VLIN
expression
expression
COMMA
AT
get
Rule
Index
enter
Rule
exit
Rule
vlinstmt
ONERR
GOTO
linenumber
get
Rule
Index
enter
Rule
exit
Rule
onerrstmt
PRNUMBER
NUMBER
get
Rule
Index
enter
Rule
exit
Rule
prstmt
INNUMBER
NUMBER
get
Rule
Index
enter
Rule
exit
Rule
instmt
STORE
vardecl
get
Rule
Index
enter
Rule
exit
Rule
storestmt
RECALL
vardecl
get
Rule
Index
enter
Rule
exit
Rule
recallstmt
LIST
expression
get
Rule
Index
enter
Rule
exit
Rule
liststmt
POP
expression
expression
COMMA
get
Rule
Index
enter
Rule
exit
Rule
popstmt
AMPERSAND
expression
get
Rule
Index
enter
Rule
exit
Rule
amptstmt
INCLUDE
expression
get
Rule
Index
enter
Rule
exit
Rule
includestmt
END
get
Rule
Index
enter
Rule
exit
Rule
endstmt
RETURN
get
Rule
Index
enter
Rule
exit
Rule
returnstmt
RESTORE
get
Rule
Index
enter
Rule
exit
Rule
restorestmt
NUMBER
FLOAT
PLUS
MINUS
get
Rule
Index
enter
Rule
exit
Rule
number
STRINGLITERAL
number
tabfunc
vardecl
chrfunc
sqrfunc
lenfunc
strfunc
ascfunc
scrnfunc
midfunc
pdlfunc
peekfunc
intfunc
spcfunc
frefunc
posfunc
usrfunc
leftfunc
valfunc
rightfunc
fnfunc
sinfunc
cosfunc
tanfunc
atnfunc
rndfunc
sgnfunc
expfunc
logfunc
absfunc
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
func
func
NOT
PLUS
MINUS
get
Rule
Index
enter
Rule
exit
Rule
sign
Expression
sign
Expression
sign
Expression
EXPONENT
EXPONENT
get
Rule
Index
enter
Rule
exit
Rule
exponent
Expression
exponent
Expression
exponent
Expression
TIMES
TIMES
DIV
DIV
get
Rule
Index
enter
Rule
exit
Rule
multiplying
Expression
multiplying
Expression
multiplying
Expression
PLUS
PLUS
MINUS
MINUS
get
Rule
Index
enter
Rule
exit
Rule
adding
Expression
adding
Expression
adding
Expression
relop
get
Rule
Index
enter
Rule
exit
Rule
relational
Expression
func
relational
Expression
relational
Expression
AND
AND
OR
OR
get
Rule
Index
enter
Rule
exit
Rule
expression
varname
varsuffix
get
Rule
Index
enter
Rule
exit
Rule
var
LETTERS
LETTERS
NUMBER
NUMBER
get
Rule
Index
enter
Rule
exit
Rule
varname
DOLLAR
PERCENT
get
Rule
Index
enter
Rule
exit
Rule
varsuffix
vardecl
vardecl
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
varlist
expression
expression
COMMA
COMMA
get
Rule
Index
enter
Rule
exit
Rule
exprlist
SQR
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
sqrfunc
CHR
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
chrfunc
LEN
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
lenfunc
ASC
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
ascfunc
MID
LPAREN
expression
expression
COMMA
COMMA
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
midfunc
PDL
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
pdlfunc
PEEK
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
peekfunc
INTF
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
intfunc
SPC
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
spcfunc
FRE
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
frefunc
POS
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
posfunc
USR
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
usrfunc
LEFT
LPAREN
expression
expression
COMMA
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
leftfunc
RIGHT
LPAREN
expression
expression
COMMA
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
rightfunc
STR
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
strfunc
FN
var
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
fnfunc
VAL
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
valfunc
SCRN
LPAREN
expression
expression
COMMA
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
scrnfunc
SIN
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
sinfunc
COS
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
cosfunc
TAN
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
tanfunc
ATN
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
atnfunc
RND
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
rndfunc
SGN
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
sgnfunc
EXP
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
expfunc
LOG
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
logfunc
ABS
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
absfunc
TAB
LPAREN
expression
RPAREN
get
Rule
Index
enter
Rule
exit
Rule
tabfunc
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
Identifier
Constant
String
Literal
String
Literal
Left
Paren
expression
Right
Paren
generic
Selection
compound
Statement
unary
Expression
Comma
type
Name
get
Rule
Index
enter
Rule
exit
Rule
primary
Expression
Generic
Left
Paren
assignment
Expression
Comma
generic
Assoc
List
Right
Paren
get
Rule
Index
enter
Rule
exit
Rule
generic
Selection
generic
Association
generic
Association
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
generic
Assoc
List
Colon
assignment
Expression
type
Name
Default
get
Rule
Index
enter
Rule
exit
Rule
generic
Association
primary
Expression
Left
Paren
Left
Paren
type
Name
Right
Paren
Right
Paren
Left
Brace
initializer
List
Right
Brace
Left
Bracket
Left
Bracket
expression
expression
Right
Bracket
Right
Bracket
Identifier
Identifier
Dot
Dot
Arrow
Arrow
Plus
Plus
Plus
Plus
Minus
Minus
Minus
Minus
Comma
argument
Expression
List
argument
Expression
List
get
Rule
Index
enter
Rule
exit
Rule
postfix
Expression
assignment
Expression
assignment
Expression
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
argument
Expression
List
postfix
Expression
unary
Operator
cast
Expression
Left
Paren
type
Name
Right
Paren
And
And
Identifier
Sizeof
Sizeof
Alignof
Plus
Plus
Plus
Plus
Minus
Minus
Minus
Minus
get
Rule
Index
enter
Rule
exit
Rule
unary
Expression
And
Star
Plus
Minus
Tilde
Not
get
Rule
Index
enter
Rule
exit
Rule
unary
Operator
Left
Paren
type
Name
Right
Paren
cast
Expression
unary
Expression
Digit
Sequence
get
Rule
Index
enter
Rule
exit
Rule
cast
Expression
cast
Expression
cast
Expression
Star
Star
Div
Div
Mod
Mod
get
Rule
Index
enter
Rule
exit
Rule
multiplicative
Expression
multiplicative
Expression
multiplicative
Expression
Plus
Plus
Minus
Minus
get
Rule
Index
enter
Rule
exit
Rule
additive
Expression
additive
Expression
additive
Expression
Left
Shift
Left
Shift
Right
Shift
Right
Shift
get
Rule
Index
enter
Rule
exit
Rule
shift
Expression
shift
Expression
shift
Expression
Less
Less
Greater
Greater
Less
Equal
Less
Equal
Greater
Equal
Greater
Equal
get
Rule
Index
enter
Rule
exit
Rule
relational
Expression
relational
Expression
relational
Expression
Equal
Equal
Not
Equal
Not
Equal
get
Rule
Index
enter
Rule
exit
Rule
equality
Expression
equality
Expression
equality
Expression
And
And
get
Rule
Index
enter
Rule
exit
Rule
and
Expression
and
Expression
and
Expression
Caret
Caret
get
Rule
Index
enter
Rule
exit
Rule
exclusive
Or
Expression
exclusive
Or
Expression
exclusive
Or
Expression
Or
Or
get
Rule
Index
enter
Rule
exit
Rule
inclusive
Or
Expression
inclusive
Or
Expression
inclusive
Or
Expression
And
And
And
And
get
Rule
Index
enter
Rule
exit
Rule
logical
And
Expression
logical
And
Expression
logical
And
Expression
Or
Or
Or
Or
get
Rule
Index
enter
Rule
exit
Rule
logical
Or
Expression
logical
Or
Expression
Question
expression
Colon
conditional
Expression
get
Rule
Index
enter
Rule
exit
Rule
conditional
Expression
conditional
Expression
unary
Expression
assignment
Operator
assignment
Expression
Digit
Sequence
get
Rule
Index
enter
Rule
exit
Rule
assignment
Expression
Assign
Star
Assign
Div
Assign
Mod
Assign
Plus
Assign
Minus
Assign
Left
Shift
Assign
Right
Shift
Assign
And
Assign
Xor
Assign
Or
Assign
get
Rule
Index
enter
Rule
exit
Rule
assignment
Operator
assignment
Expression
assignment
Expression
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
expression
conditional
Expression
get
Rule
Index
enter
Rule
exit
Rule
constant
Expression
declaration
Specifiers
Semi
init
Declarator
List
static
Assert
Declaration
get
Rule
Index
enter
Rule
exit
Rule
declaration
declaration
Specifier
declaration
Specifier
get
Rule
Index
enter
Rule
exit
Rule
declaration
Specifiers
declaration
Specifier
declaration
Specifier
get
Rule
Index
enter
Rule
exit
Rule
declaration
Specifiers2
storage
Class
Specifier
type
Specifier
type
Qualifier
function
Specifier
alignment
Specifier
get
Rule
Index
enter
Rule
exit
Rule
declaration
Specifier
init
Declarator
init
Declarator
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
init
Declarator
List
declarator
Assign
initializer
get
Rule
Index
enter
Rule
exit
Rule
init
Declarator
Typedef
Extern
Static
Thread
Local
Auto
Register
get
Rule
Index
enter
Rule
exit
Rule
storage
Class
Specifier
Void
Char
Short
Int
Long
Float
Double
Signed
Unsigned
Bool
Complex
Left
Paren
Right
Paren
atomic
Type
Specifier
struct
Or
Union
Specifier
enum
Specifier
typedef
Name
constant
Expression
type
Specifier
pointer
get
Rule
Index
enter
Rule
exit
Rule
type
Specifier
type
Specifier
struct
Or
Union
Left
Brace
struct
Declaration
List
Right
Brace
Identifier
get
Rule
Index
enter
Rule
exit
Rule
struct
Or
Union
Specifier
Struct
Union
get
Rule
Index
enter
Rule
exit
Rule
struct
Or
Union
struct
Declaration
struct
Declaration
get
Rule
Index
enter
Rule
exit
Rule
struct
Declaration
List
specifier
Qualifier
List
Semi
struct
Declarator
List
static
Assert
Declaration
get
Rule
Index
enter
Rule
exit
Rule
struct
Declaration
type
Specifier
type
Qualifier
specifier
Qualifier
List
get
Rule
Index
enter
Rule
exit
Rule
specifier
Qualifier
List
struct
Declarator
struct
Declarator
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
struct
Declarator
List
declarator
Colon
constant
Expression
get
Rule
Index
enter
Rule
exit
Rule
struct
Declarator
Enum
Left
Brace
enumerator
List
Right
Brace
Identifier
Comma
get
Rule
Index
enter
Rule
exit
Rule
enum
Specifier
enumerator
enumerator
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
enumerator
List
enumeration
Constant
Assign
constant
Expression
get
Rule
Index
enter
Rule
exit
Rule
enumerator
Identifier
get
Rule
Index
enter
Rule
exit
Rule
enumeration
Constant
Atomic
Left
Paren
type
Name
Right
Paren
get
Rule
Index
enter
Rule
exit
Rule
atomic
Type
Specifier
Const
Restrict
Volatile
Atomic
get
Rule
Index
enter
Rule
exit
Rule
type
Qualifier
Inline
Noreturn
gcc
Attribute
Specifier
Left
Paren
Identifier
Right
Paren
get
Rule
Index
enter
Rule
exit
Rule
function
Specifier
Alignas
Left
Paren
Right
Paren
type
Name
constant
Expression
get
Rule
Index
enter
Rule
exit
Rule
alignment
Specifier
direct
Declarator
pointer
gcc
Declarator
Extension
gcc
Declarator
Extension
get
Rule
Index
enter
Rule
exit
Rule
declarator
Identifier
Left
Paren
declarator
Right
Paren
Colon
Digit
Sequence
pointer
direct
Declarator
type
Specifier
Left
Bracket
Right
Bracket
type
Qualifier
List
assignment
Expression
Static
Star
parameter
Type
List
identifier
List
get
Rule
Index
enter
Rule
exit
Rule
direct
Declarator
direct
Declarator
Left
Paren
Right
Paren
String
Literal
String
Literal
gcc
Attribute
Specifier
get
Rule
Index
enter
Rule
exit
Rule
gcc
Declarator
Extension
Left
Paren
Left
Paren
gcc
Attribute
List
Right
Paren
Right
Paren
get
Rule
Index
enter
Rule
exit
Rule
gcc
Attribute
Specifier
gcc
Attribute
gcc
Attribute
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
gcc
Attribute
List
Comma
Left
Paren
Left
Paren
Right
Paren
Right
Paren
argument
Expression
List
get
Rule
Index
enter
Rule
exit
Rule
gcc
Attribute
Left
Paren
Left
Paren
nested
Parentheses
Block
nested
Parentheses
Block
Right
Paren
Right
Paren
get
Rule
Index
enter
Rule
exit
Rule
nested
Parentheses
Block
Star
Star
Caret
Caret
type
Qualifier
List
type
Qualifier
List
get
Rule
Index
enter
Rule
exit
Rule
pointer
type
Qualifier
type
Qualifier
get
Rule
Index
enter
Rule
exit
Rule
type
Qualifier
List
parameter
List
Comma
Ellipsis
get
Rule
Index
enter
Rule
exit
Rule
parameter
Type
List
parameter
Declaration
parameter
Declaration
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
parameter
List
declaration
Specifiers
declarator
declaration
Specifiers2
abstract
Declarator
get
Rule
Index
enter
Rule
exit
Rule
parameter
Declaration
Identifier
Identifier
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
identifier
List
specifier
Qualifier
List
abstract
Declarator
get
Rule
Index
enter
Rule
exit
Rule
type
Name
pointer
direct
Abstract
Declarator
gcc
Declarator
Extension
gcc
Declarator
Extension
get
Rule
Index
enter
Rule
exit
Rule
abstract
Declarator
Left
Paren
abstract
Declarator
Right
Paren
gcc
Declarator
Extension
gcc
Declarator
Extension
Left
Bracket
Right
Bracket
type
Qualifier
List
assignment
Expression
Static
Star
parameter
Type
List
direct
Abstract
Declarator
get
Rule
Index
enter
Rule
exit
Rule
direct
Abstract
Declarator
direct
Abstract
Declarator
Identifier
get
Rule
Index
enter
Rule
exit
Rule
typedef
Name
assignment
Expression
Left
Brace
initializer
List
Right
Brace
Comma
get
Rule
Index
enter
Rule
exit
Rule
initializer
initializer
initializer
designation
designation
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
initializer
List
designator
List
Assign
get
Rule
Index
enter
Rule
exit
Rule
designation
designator
designator
get
Rule
Index
enter
Rule
exit
Rule
designator
List
Left
Bracket
constant
Expression
Right
Bracket
Dot
Identifier
get
Rule
Index
enter
Rule
exit
Rule
designator
Static
Assert
Left
Paren
constant
Expression
Comma
Right
Paren
Semi
String
Literal
String
Literal
get
Rule
Index
enter
Rule
exit
Rule
static
Assert
Declaration
labeled
Statement
compound
Statement
expression
Statement
selection
Statement
iteration
Statement
jump
Statement
Left
Paren
Right
Paren
Semi
Volatile
logical
Or
Expression
logical
Or
Expression
Colon
Colon
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
statement
Identifier
Colon
statement
Case
constant
Expression
Default
get
Rule
Index
enter
Rule
exit
Rule
labeled
Statement
Left
Brace
Right
Brace
block
Item
List
get
Rule
Index
enter
Rule
exit
Rule
compound
Statement
block
Item
block
Item
get
Rule
Index
enter
Rule
exit
Rule
block
Item
List
statement
declaration
get
Rule
Index
enter
Rule
exit
Rule
block
Item
Semi
expression
get
Rule
Index
enter
Rule
exit
Rule
expression
Statement
If
Left
Paren
expression
Right
Paren
statement
statement
Else
Switch
get
Rule
Index
enter
Rule
exit
Rule
selection
Statement
While
Left
Paren
expression
Right
Paren
statement
Do
Semi
For
for
Condition
get
Rule
Index
enter
Rule
exit
Rule
iteration
Statement
Semi
Semi
for
Declaration
for
Expression
for
Expression
expression
get
Rule
Index
enter
Rule
exit
Rule
for
Condition
declaration
Specifiers
init
Declarator
List
get
Rule
Index
enter
Rule
exit
Rule
for
Declaration
assignment
Expression
assignment
Expression
Comma
Comma
get
Rule
Index
enter
Rule
exit
Rule
for
Expression
Semi
Goto
Identifier
Return
unary
Expression
Continue
Break
expression
get
Rule
Index
enter
Rule
exit
Rule
jump
Statement
EOF
translation
Unit
get
Rule
Index
enter
Rule
exit
Rule
compilation
Unit
external
Declaration
external
Declaration
get
Rule
Index
enter
Rule
exit
Rule
translation
Unit
function
Definition
declaration
Semi
get
Rule
Index
enter
Rule
exit
Rule
external
Declaration
declarator
compound
Statement
declaration
Specifiers
declaration
List
get
Rule
Index
enter
Rule
exit
Rule
function
Definition
declaration
declaration
get
Rule
Index
enter
Rule
exit
Rule
declaration
List
sempred
type
Specifier
sempred
direct
Declarator
sempred
direct
Abstract
Declarator
sempred
enter
Primary
Expression
exit
Primary
Expression
enter
Generic
Selection
exit
Generic
Selection
enter
Generic
Assoc
List
exit
Generic
Assoc
List
enter
Generic
Association
exit
Generic
Association
enter
Postfix
Expression
exit
Postfix
Expression
enter
Argument
Expression
List
exit
Argument
Expression
List
enter
Unary
Expression
exit
Unary
Expression
enter
Unary
Operator
exit
Unary
Operator
enter
Cast
Expression
exit
Cast
Expression
enter
Multiplicative
Expression
exit
Multiplicative
Expression
enter
Additive
Expression
exit
Additive
Expression
enter
Shift
Expression
exit
Shift
Expression
enter
Relational
Expression
exit
Relational
Expression
enter
Equality
Expression
exit
Equality
Expression
enter
And
Expression
exit
And
Expression
enter
Exclusive
Or
Expression
exit
Exclusive
Or
Expression
enter
Inclusive
Or
Expression
exit
Inclusive
Or
Expression
enter
Logical
And
Expression
exit
Logical
And
Expression
enter
Logical
Or
Expression
exit
Logical
Or
Expression
enter
Conditional
Expression
exit
Conditional
Expression
enter
Assignment
Expression
exit
Assignment
Expression
enter
Assignment
Operator
exit
Assignment
Operator
enter
Expression
exit
Expression
enter
Constant
Expression
exit
Constant
Expression
enter
Declaration
exit
Declaration
enter
Declaration
Specifiers
exit
Declaration
Specifiers
enter
Declaration
Specifiers2
exit
Declaration
Specifiers2
enter
Declaration
Specifier
exit
Declaration
Specifier
enter
Init
Declarator
List
exit
Init
Declarator
List
enter
Init
Declarator
exit
Init
Declarator
enter
Storage
Class
Specifier
exit
Storage
Class
Specifier
enter
Type
Specifier
exit
Type
Specifier
enter
Struct
Or
Union
Specifier
exit
Struct
Or
Union
Specifier
enter
Struct
Or
Union
exit
Struct
Or
Union
enter
Struct
Declaration
List
exit
Struct
Declaration
List
enter
Struct
Declaration
exit
Struct
Declaration
enter
Specifier
Qualifier
List
exit
Specifier
Qualifier
List
enter
Struct
Declarator
List
exit
Struct
Declarator
List
enter
Struct
Declarator
exit
Struct
Declarator
enter
Enum
Specifier
exit
Enum
Specifier
enter
Enumerator
List
exit
Enumerator
List
enter
Enumerator
exit
Enumerator
enter
Enumeration
Constant
exit
Enumeration
Constant
enter
Atomic
Type
Specifier
exit
Atomic
Type
Specifier
enter
Type
Qualifier
exit
Type
Qualifier
enter
Function
Specifier
exit
Function
Specifier
enter
Alignment
Specifier
exit
Alignment
Specifier
enter
Declarator
exit
Declarator
enter
Direct
Declarator
exit
Direct
Declarator
enter
Gcc
Declarator
Extension
exit
Gcc
Declarator
Extension
enter
Gcc
Attribute
Specifier
exit
Gcc
Attribute
Specifier
enter
Gcc
Attribute
List
exit
Gcc
Attribute
List
enter
Gcc
Attribute
exit
Gcc
Attribute
enter
Nested
Parentheses
Block
exit
Nested
Parentheses
Block
enter
Pointer
exit
Pointer
enter
Type
Qualifier
List
exit
Type
Qualifier
List
enter
Parameter
Type
List
exit
Parameter
Type
List
enter
Parameter
List
exit
Parameter
List
enter
Parameter
Declaration
exit
Parameter
Declaration
enter
Identifier
List
exit
Identifier
List
enter
Type
Name
exit
Type
Name
enter
Abstract
Declarator
exit
Abstract
Declarator
enter
Direct
Abstract
Declarator
exit
Direct
Abstract
Declarator
enter
Typedef
Name
exit
Typedef
Name
enter
Initializer
exit
Initializer
enter
Initializer
List
exit
Initializer
List
enter
Designation
exit
Designation
enter
Designator
List
exit
Designator
List
enter
Designator
exit
Designator
enter
Static
Assert
Declaration
exit
Static
Assert
Declaration
enter
Statement
exit
Statement
enter
Labeled
Statement
exit
Labeled
Statement
enter
Compound
Statement
exit
Compound
Statement
enter
Block
Item
List
exit
Block
Item
List
enter
Block
Item
exit
Block
Item
enter
Expression
Statement
exit
Expression
Statement
enter
Selection
Statement
exit
Selection
Statement
enter
Iteration
Statement
exit
Iteration
Statement
enter
For
Condition
exit
For
Condition
enter
For
Declaration
exit
For
Declaration
enter
For
Expression
exit
For
Expression
enter
Jump
Statement
exit
Jump
Statement
enter
Compilation
Unit
exit
Compilation
Unit
enter
Translation
Unit
exit
Translation
Unit
enter
External
Declaration
exit
External
Declaration
enter
Function
Definition
exit
Function
Definition
enter
Declaration
List
exit
Declaration
List
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
enter
Primary
Expression
exit
Primary
Expression
enter
Generic
Selection
exit
Generic
Selection
enter
Generic
Assoc
List
exit
Generic
Assoc
List
enter
Generic
Association
exit
Generic
Association
enter
Postfix
Expression
exit
Postfix
Expression
enter
Argument
Expression
List
exit
Argument
Expression
List
enter
Unary
Expression
exit
Unary
Expression
enter
Unary
Operator
exit
Unary
Operator
enter
Cast
Expression
exit
Cast
Expression
enter
Multiplicative
Expression
exit
Multiplicative
Expression
enter
Additive
Expression
exit
Additive
Expression
enter
Shift
Expression
exit
Shift
Expression
enter
Relational
Expression
exit
Relational
Expression
enter
Equality
Expression
exit
Equality
Expression
enter
And
Expression
exit
And
Expression
enter
Exclusive
Or
Expression
exit
Exclusive
Or
Expression
enter
Inclusive
Or
Expression
exit
Inclusive
Or
Expression
enter
Logical
And
Expression
exit
Logical
And
Expression
enter
Logical
Or
Expression
exit
Logical
Or
Expression
enter
Conditional
Expression
exit
Conditional
Expression
enter
Assignment
Expression
exit
Assignment
Expression
enter
Assignment
Operator
exit
Assignment
Operator
enter
Expression
exit
Expression
enter
Constant
Expression
exit
Constant
Expression
enter
Declaration
exit
Declaration
enter
Declaration
Specifiers
exit
Declaration
Specifiers
enter
Declaration
Specifiers2
exit
Declaration
Specifiers2
enter
Declaration
Specifier
exit
Declaration
Specifier
enter
Init
Declarator
List
exit
Init
Declarator
List
enter
Init
Declarator
exit
Init
Declarator
enter
Storage
Class
Specifier
exit
Storage
Class
Specifier
enter
Type
Specifier
exit
Type
Specifier
enter
Struct
Or
Union
Specifier
exit
Struct
Or
Union
Specifier
enter
Struct
Or
Union
exit
Struct
Or
Union
enter
Struct
Declaration
List
exit
Struct
Declaration
List
enter
Struct
Declaration
exit
Struct
Declaration
enter
Specifier
Qualifier
List
exit
Specifier
Qualifier
List
enter
Struct
Declarator
List
exit
Struct
Declarator
List
enter
Struct
Declarator
exit
Struct
Declarator
enter
Enum
Specifier
exit
Enum
Specifier
enter
Enumerator
List
exit
Enumerator
List
enter
Enumerator
exit
Enumerator
enter
Enumeration
Constant
exit
Enumeration
Constant
enter
Atomic
Type
Specifier
exit
Atomic
Type
Specifier
enter
Type
Qualifier
exit
Type
Qualifier
enter
Function
Specifier
exit
Function
Specifier
enter
Alignment
Specifier
exit
Alignment
Specifier
enter
Declarator
exit
Declarator
enter
Direct
Declarator
exit
Direct
Declarator
enter
Gcc
Declarator
Extension
exit
Gcc
Declarator
Extension
enter
Gcc
Attribute
Specifier
exit
Gcc
Attribute
Specifier
enter
Gcc
Attribute
List
exit
Gcc
Attribute
List
enter
Gcc
Attribute
exit
Gcc
Attribute
enter
Nested
Parentheses
Block
exit
Nested
Parentheses
Block
enter
Pointer
exit
Pointer
enter
Type
Qualifier
List
exit
Type
Qualifier
List
enter
Parameter
Type
List
exit
Parameter
Type
List
enter
Parameter
List
exit
Parameter
List
enter
Parameter
Declaration
exit
Parameter
Declaration
enter
Identifier
List
exit
Identifier
List
enter
Type
Name
exit
Type
Name
enter
Abstract
Declarator
exit
Abstract
Declarator
enter
Direct
Abstract
Declarator
exit
Direct
Abstract
Declarator
enter
Typedef
Name
exit
Typedef
Name
enter
Initializer
exit
Initializer
enter
Initializer
List
exit
Initializer
List
enter
Designation
exit
Designation
enter
Designator
List
exit
Designator
List
enter
Designator
exit
Designator
enter
Static
Assert
Declaration
exit
Static
Assert
Declaration
enter
Statement
exit
Statement
enter
Labeled
Statement
exit
Labeled
Statement
enter
Compound
Statement
exit
Compound
Statement
enter
Block
Item
List
exit
Block
Item
List
enter
Block
Item
exit
Block
Item
enter
Expression
Statement
exit
Expression
Statement
enter
Selection
Statement
exit
Selection
Statement
enter
Iteration
Statement
exit
Iteration
Statement
enter
For
Condition
exit
For
Condition
enter
For
Declaration
exit
For
Declaration
enter
For
Expression
exit
For
Expression
enter
Jump
Statement
exit
Jump
Statement
enter
Compilation
Unit
exit
Compilation
Unit
enter
Translation
Unit
exit
Translation
Unit
enter
External
Declaration
exit
External
Declaration
enter
Function
Definition
exit
Function
Definition
enter
Declaration
List
exit
Declaration
List
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Chunk
exit
Chunk
enter
Block
exit
Block
enter
Stat
exit
Stat
enter
Attnamelist
exit
Attnamelist
enter
Attrib
exit
Attrib
enter
Retstat
exit
Retstat
enter
Label
exit
Label
enter
Funcname
exit
Funcname
enter
Varlist
exit
Varlist
enter
Namelist
exit
Namelist
enter
Explist
exit
Explist
enter
Exp
exit
Exp
enter
Prefixexp
exit
Prefixexp
enter
Functioncall
exit
Functioncall
enter
Var
Or
Exp
exit
Var
Or
Exp
enter
Var
exit
Var
enter
Var
Suffix
exit
Var
Suffix
enter
Name
And
Args
exit
Name
And
Args
enter
Args
exit
Args
enter
Functiondef
exit
Functiondef
enter
Funcbody
exit
Funcbody
enter
Parlist
exit
Parlist
enter
Tableconstructor
exit
Tableconstructor
enter
Fieldlist
exit
Fieldlist
enter
Field
exit
Field
enter
Fieldsep
exit
Fieldsep
enter
Operator
Or
exit
Operator
Or
enter
Operator
And
exit
Operator
And
enter
Operator
Comparison
exit
Operator
Comparison
enter
Operator
Strcat
exit
Operator
Strcat
enter
Operator
Add
Sub
exit
Operator
Add
Sub
enter
Operator
Mul
Div
Mod
exit
Operator
Mul
Div
Mod
enter
Operator
Bitwise
exit
Operator
Bitwise
enter
Operator
Unary
exit
Operator
Unary
enter
Operator
Power
exit
Operator
Power
enter
Number
exit
Number
enter
String
exit
String
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
block
EOF
get
Rule
Index
enter
Rule
exit
Rule
chunk
stat
stat
retstat
get
Rule
Index
enter
Rule
exit
Rule
block
varlist
explist
functioncall
label
NAME
block
block
exp
exp
namelist
funcname
funcbody
attnamelist
get
Rule
Index
enter
Rule
exit
Rule
stat
NAME
NAME
attrib
attrib
get
Rule
Index
enter
Rule
exit
Rule
attnamelist
NAME
get
Rule
Index
enter
Rule
exit
Rule
attrib
explist
get
Rule
Index
enter
Rule
exit
Rule
retstat
NAME
get
Rule
Index
enter
Rule
exit
Rule
label
NAME
NAME
get
Rule
Index
enter
Rule
exit
Rule
funcname
var
var
get
Rule
Index
enter
Rule
exit
Rule
varlist
NAME
NAME
get
Rule
Index
enter
Rule
exit
Rule
namelist
exp
exp
get
Rule
Index
enter
Rule
exit
Rule
explist
number
string
functiondef
prefixexp
tableconstructor
operator
Unary
exp
exp
operator
Power
operator
Mul
Div
Mod
operator
Add
Sub
operator
Strcat
operator
Comparison
operator
And
operator
Or
operator
Bitwise
get
Rule
Index
enter
Rule
exit
Rule
exp
exp
var
Or
Exp
name
And
Args
name
And
Args
get
Rule
Index
enter
Rule
exit
Rule
prefixexp
var
Or
Exp
name
And
Args
name
And
Args
get
Rule
Index
enter
Rule
exit
Rule
functioncall
var
exp
get
Rule
Index
enter
Rule
exit
Rule
var
Or
Exp
NAME
exp
var
Suffix
var
Suffix
get
Rule
Index
enter
Rule
exit
Rule
var
exp
NAME
name
And
Args
name
And
Args
get
Rule
Index
enter
Rule
exit
Rule
var
Suffix
args
NAME
get
Rule
Index
enter
Rule
exit
Rule
name
And
Args
explist
tableconstructor
string
get
Rule
Index
enter
Rule
exit
Rule
args
funcbody
get
Rule
Index
enter
Rule
exit
Rule
functiondef
block
parlist
get
Rule
Index
enter
Rule
exit
Rule
funcbody
namelist
get
Rule
Index
enter
Rule
exit
Rule
parlist
fieldlist
get
Rule
Index
enter
Rule
exit
Rule
tableconstructor
field
field
fieldsep
fieldsep
get
Rule
Index
enter
Rule
exit
Rule
fieldlist
exp
exp
NAME
get
Rule
Index
enter
Rule
exit
Rule
field
get
Rule
Index
enter
Rule
exit
Rule
fieldsep
get
Rule
Index
enter
Rule
exit
Rule
operator
Or
get
Rule
Index
enter
Rule
exit
Rule
operator
And
get
Rule
Index
enter
Rule
exit
Rule
operator
Comparison
get
Rule
Index
enter
Rule
exit
Rule
operator
Strcat
get
Rule
Index
enter
Rule
exit
Rule
operator
Add
Sub
get
Rule
Index
enter
Rule
exit
Rule
operator
Mul
Div
Mod
get
Rule
Index
enter
Rule
exit
Rule
operator
Bitwise
get
Rule
Index
enter
Rule
exit
Rule
operator
Unary
get
Rule
Index
enter
Rule
exit
Rule
operator
Power
INT
HEX
FLOAT
HEX
FLOAT
get
Rule
Index
enter
Rule
exit
Rule
number
NORMALSTRING
CHARSTRING
LONGSTRING
get
Rule
Index
enter
Rule
exit
Rule
string
sempred
exp
sempred
enter
Chunk
exit
Chunk
enter
Block
exit
Block
enter
Stat
exit
Stat
enter
Attnamelist
exit
Attnamelist
enter
Attrib
exit
Attrib
enter
Retstat
exit
Retstat
enter
Label
exit
Label
enter
Funcname
exit
Funcname
enter
Varlist
exit
Varlist
enter
Namelist
exit
Namelist
enter
Explist
exit
Explist
enter
Exp
exit
Exp
enter
Prefixexp
exit
Prefixexp
enter
Functioncall
exit
Functioncall
enter
Var
Or
Exp
exit
Var
Or
Exp
enter
Var
exit
Var
enter
Var
Suffix
exit
Var
Suffix
enter
Name
And
Args
exit
Name
And
Args
enter
Args
exit
Args
enter
Functiondef
exit
Functiondef
enter
Funcbody
exit
Funcbody
enter
Parlist
exit
Parlist
enter
Tableconstructor
exit
Tableconstructor
enter
Fieldlist
exit
Fieldlist
enter
Field
exit
Field
enter
Fieldsep
exit
Fieldsep
enter
Operator
Or
exit
Operator
Or
enter
Operator
And
exit
Operator
And
enter
Operator
Comparison
exit
Operator
Comparison
enter
Operator
Strcat
exit
Operator
Strcat
enter
Operator
Add
Sub
exit
Operator
Add
Sub
enter
Operator
Mul
Div
Mod
exit
Operator
Mul
Div
Mod
enter
Operator
Bitwise
exit
Operator
Bitwise
enter
Operator
Unary
exit
Operator
Unary
enter
Operator
Power
exit
Operator
Power
enter
Number
exit
Number
enter
String
exit
String
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
action
INTERPOLATED
REGULAR
STRING
START
action
INTERPOLATED
VERBATIUM
STRING
START
action
OPEN
BRACE
action
CLOSE
BRACE
action
COLON
action
OPEN
BRACE
INSIDE
action
DOUBLE
QUOTE
INSIDE
action
CLOSE
BRACE
INSIDE
action
sempred
REGULAR
CHAR
INSIDE
sempred
VERBATIUM
DOUBLE
QUOTE
INSIDE
sempred
REGULAR
STRING
INSIDE
sempred
VERBATIUM
INSIDE
STRING
sempred
Dispose
Create
Directory
Handler
m
m
A
Update
Signature
By
Hashing
Content
Power
Main
Wait
Async
Anonymous
M
N
O
M
N
O
Method
Bar3
Bar2
Blah
Constants
Constructed
Type
M
Foo
Params
Params
To
String
On
Error
method
This
Access
Move
Print
Test
Pattern
Matching
Local
Functions
Out
Var
Throw
Expression
Binary
Literals
Digit
Separators
Default
Without
Type
Name
Tuple
Recognize
M1
Trace
Test
Choice
Do
Something
Non
Trailing
Named
Arguments
Conditional
Ref
Leading
Separator
Blittable
Indexing
Movable
Fixed
Fields
Pattern
Based
Fixed
Stackalloc
Array
Initializer
Tuple
Equality
Reference
Nullable
Patterns
Async
Streams
Ranges
Using
Declarators
Static
Local
Function
Null
Coalescing
Assignment
Hello
M
M
M
M
adapt
To
Style
Class
adapt
To
Style
Class
get
Lexer
get
Adapter
adapt
To
Style
Class
adapt
To
Style
Class
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
enter
Html
Document
exit
Html
Document
enter
Scriptlet
Or
Sea
Ws
exit
Scriptlet
Or
Sea
Ws
enter
Html
Elements
exit
Html
Elements
enter
Html
Element
exit
Html
Element
enter
Html
Content
exit
Html
Content
enter
Html
Attribute
exit
Html
Attribute
enter
Html
Chardata
exit
Html
Chardata
enter
Html
Misc
exit
Html
Misc
enter
Html
Comment
exit
Html
Comment
enter
Script
exit
Script
enter
Style
exit
Style
enter
Html
Document
exit
Html
Document
enter
Scriptlet
Or
Sea
Ws
exit
Scriptlet
Or
Sea
Ws
enter
Html
Elements
exit
Html
Elements
enter
Html
Element
exit
Html
Element
enter
Html
Content
exit
Html
Content
enter
Html
Attribute
exit
Html
Attribute
enter
Html
Chardata
exit
Html
Chardata
enter
Html
Misc
exit
Html
Misc
enter
Html
Comment
exit
Html
Comment
enter
Script
exit
Script
enter
Style
exit
Style
enter
Every
Rule
exit
Every
Rule
visit
Terminal
visit
Error
Node
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
ATN
scriptlet
Or
Sea
Ws
scriptlet
Or
Sea
Ws
XML
DTD
html
Elements
html
Elements
get
Rule
Index
enter
Rule
exit
Rule
html
Document
SCRIPTLET
SEA
WS
get
Rule
Index
enter
Rule
exit
Rule
scriptlet
Or
Sea
Ws
html
Element
html
Misc
html
Misc
get
Rule
Index
enter
Rule
exit
Rule
html
Elements
TAG
OPEN
TAG
OPEN
TAG
NAME
TAG
NAME
TAG
CLOSE
TAG
CLOSE
TAG
SLASH
CLOSE
html
Attribute
html
Attribute
html
Content
TAG
SLASH
SCRIPTLET
script
style
get
Rule
Index
enter
Rule
exit
Rule
html
Element
html
Chardata
html
Chardata
html
Element
html
Element
CDATA
CDATA
html
Comment
html
Comment
get
Rule
Index
enter
Rule
exit
Rule
html
Content
TAG
NAME
TAG
EQUALS
ATTVALUE
VALUE
get
Rule
Index
enter
Rule
exit
Rule
html
Attribute
HTML
TEXT
SEA
WS
get
Rule
Index
enter
Rule
exit
Rule
html
Chardata
html
Comment
SEA
WS
get
Rule
Index
enter
Rule
exit
Rule
html
Misc
HTML
COMMENT
HTML
CONDITIONAL
COMMENT
get
Rule
Index
enter
Rule
exit
Rule
html
Comment
SCRIPT
OPEN
SCRIPT
BODY
SCRIPT
SHORT
BODY
get
Rule
Index
enter
Rule
exit
Rule
script
STYLE
OPEN
STYLE
BODY
STYLE
SHORT
BODY
get
Rule
Index
enter
Rule
exit
Rule
style
adapt
To
Style
Class
skip
get
Lexer
make
Rule
Names
make
Literal
Names
make
Symbolic
Names
get
Token
Names
get
Vocabulary
reset
get
Grammar
File
Name
get
Rule
Names
get
Serialized
ATN
get
Channel
Names
get
Mode
Names
get
ATN
action
LPAREN
action
RPAREN
action
Interpolataion
single
line
action
Interpolataion
multi
line
action
adapt
To
Style
Class
initialize
update
Item
open
Item
Menu
Item
Click
Handler
open
Raw
Diff
file
History
Item
Menu
Item
Click
Handler
open
Diff
Prev
Version
open
Diff
Last
Version
open
Diff
File
Version
call
update
Item
calculate
Style
initialize
initialize
changed
calculate
Style
update
Item
get
Value
add
Listener
remove
Listener
add
Listener
remove
Listener
checkout
Menu
Item
Click
Handler
checkout
As
Menu
Item
Click
Handler
update
Item
call
create
Logo
Path
apply
Style
get
Path
Char
Dot
get
Path
Char2
get
Path
Char3
get
Path
Char4
get
Path
Char5
initialize
start
begin
Task
update
end
Task
is
Cancelled
set
Total
Work
set
Completed
set
Step
call
update
Item
create
Context
Menu
fill
Diff
create
Context
Menu
create
Search
Context
Menu
create
Tag
Context
Menu
changed
initialize
show
Diff
Menu
Item
Click
Handler
open
Item
Menu
Item
Click
Handler
update
Item
initialize
get
Chart
Name
per
People
per
Month
handle
handle
initialize
search
Value
enable
Edit
set
File
Name
set
Diff
set
Force
Overwrite
set
Text
save
File
set
Scm
Item
initialize
get
Editor
get
Default
Value
get
User
Name
get
User
Email
update
Grid
set
Data
set
Old
Label
set
New
Label
initialize
update
Diff
Overview
get
Diff
Pos
update
Path
Elements
get
Lines
scroll
To
First
Diff
create
Path
Elements
get
Cubic
Curve
To
set
Text
repeat
Search
search
Value
initialize
set
Data
show
Item
Diff
Handler
get
Left
Head
get
Right
Head
get
Name
adjust
Name
call
calculate
Style
update
Item
fill
Sible
Item
Menu
init
changed
resolve
View
merge
Menu
unmerge
Menu
handle
launch
Long
Task
handle
Remote
Repository
Exception
handle
call
handle
call
handle
call
select
Last
Commit
In
Month
calculate
Delta
Lines
handle
handle
call
handle
call
handle
handle
handle
call
handle
call
handle
call
handle
get
Attributes
File
Safe
handle
handle
call
handle
handle
call
handle
handle
call
set
Force
Text
set
Editable
set
Overwrite
handle
open
File
handle
call
handle
call
handle
handle
call
handle
call
handle
handle
handle
call
handle
call
handle
handle
handle
call
handle
handle
call
handle
call
changed
update
Item
initialize
stage
Unstage
Item
stage
All
Event
Handler
unstage
All
Event
Handler
merge
Event
Handler
rebase
Event
Handler
checkout
Event
Handler
stash
Event
Handler
refresh
Event
Handler
commit
Event
Handler
initialize
open
Handler
fetch
Handler
large
File
Support
Handler
remote
UR
Lt
Handler
edit
Raw
Attrs
Handler
edit
Raw
Ignore
Handler
edit
Raw
Config
Handler
edit
clone
Handler
drop
Index
Data
Handler
reindex
Data
Handler
compress
Data
Handler
pull
Handler
push
Handler
create
Repository
Handler
open
Git
Terminal
Action
Handler
check
For
Update
create
Bug
Report
Handler
create
Stat
Report
Branches
create
Stat
Report
Branch
Time
create
Stat
Report
Progress
create
Stat
Report
about
Handler
exit
Action
Handler
show
Result
get
Main
Tree
View
get
Stash
Root
set
Theme
Light
set
Theme
Dark
confirm
Reboot
initialize
draw
Label
draw
Line
draw
Commit
Dot
draw
Boundary
Dot
lane
Color
get
Text
draw
Text
render
add
Listener
remove
Listener
get
Value
add
Listener
remove
Listener
get
Name
set
Name
get
Extension
set
Extension
get
Keywords
set
Keywords
is
Comments
set
Comments
get
Commit
Info
set
Commit
Info
get
Commit
Author
set
Commit
Author
get
Commit
Email
set
Commit
Email
get
Date
set
Date
get
Changes
set
Changes
get
Short
Name
get
Attribute
get
Commit
Name
set
Commit
Name
get
Rev
Commit
get
View
Representation
compare
To
equals
hash
Code
with
Changes
get
Change
Name
Safe
get
Change
Date
Safe
get
Change
Author
Safe
get
File
Path
get
Body
staged
to
String
get
Projects
set
Projects
get
Search
Terms
set
Search
Terms
get
Commit
Msg
set
Commit
Msg
get
Theme
set
Theme
get
First
get
Second
equals
hash
Code
to
String
is
Indexed
set
Indexed
get
User
Commit
Name
set
User
Commit
Name
get
User
Commit
Email
set
User
Commit
Email
get
Project
Home
Folder
set
Project
Home
Folder
get
Open
Time
set
Open
Time
get
User
Name
set
User
Name
get
User
Pwd
set
User
Pwd
get
User
Key
set
User
Key
get
Key
Pass
set
Key
Pass
compare
To
hash
Code
equals
get
Url
url
Property
set
Url
get
Destination
Folder
destination
Folder
Property
set
Destination
Folder
get
Path
To
Key
path
To
Key
Property
set
Path
To
Key
get
Key
Pass
Phrase
key
Pass
Phrase
Property
set
Key
Pass
Phrase
get
User
Name
user
Name
Property
set
User
Name
get
User
Pwd
user
Pwd
Property
set
User
Pwd
to
String
get
Log
Map
set
Log
Map
get
Total
Lines
set
Total
Lines
get
Date
set
Date
get
Destination
Folder
destination
Folder
Property
set
Destination
Folder
is
Init
With
Reame
init
With
Reame
Property
set
Init
With
Reame
is
Init
With
Ignore
init
With
Ignore
Property
set
Init
With
Ignore
is
Init
With
Lfs
init
With
Lfs
Property
set
Init
With
Lfs
get
Type
Name
get
Name
Safe
get
Name
Ext
Safe
get
Short
Name
get
Full
Name
is
Head
set
Head
set
Remote
Name
get
Remote
Name
get
Remote
Merge
Name
set
Remote
Merge
Name
get
Branch
Type
get
Sha
get
Name
Ext
to
String
deserialize
serialize
get
Source
Children
predicate
Property
is
Lfs
Support
lfs
Support
Property
set
Lfs
Support
get
Extentions
set
Extentions
to
String
get
Date
set
Date
get
Qty
set
Qty
get
Hrs
set
Hrs
opposite
adapt
get
End
get
Start
calculate
Diff
calculate
Diff
get
Hours
get
X1
set
X1
get
X2
set
X2
get
X3
set
X3
get
X4
set
X4
get
Y1
set
Y1
get
Y2
set
Y2
get
Y3
set
Y3
get
Y4
set
Y4
get
Stash
Index
set
Stash
Index
get
Parents
set
Parents
get
Ref
set
Ref
get
Ref
Count
get
Revision
Full
Name
set
Revision
Full
Name
get
Author
Name
set
Author
Name
get
Author
Email
set
Author
Email
get
Short
Message
set
Short
Message
get
Full
Message
set
Full
Message
get
Date
set
Date
get
Affected
Items
set
Affected
Items
get
Name
Ext
get
Substatus
set
Substatus
get
Name
set
Name
set
Old
Name
with
Old
Name
get
Old
Name
get
Status
set
Status
with
Status
with
Sub
Status
to
String
get
Name
get
Sha
is
Working
Hours
set
Working
Hours
get
Branch
Name
set
Branch
Name
get
Max
People
set
Max
People
get
Month
Qty
set
Month
Qty
is
Per
Month
set
Per
Month
is
Delta
set
Delta
set
Filter
test
get
Revision
get
Name
get
Body
get
Content
Medatada
get
Content
configure
create
Default
J
Sch
is
Blank
configure
format
Date
Only
format
Date
int
To
Date
get
Mime
Type
is
one
Of
get
Keywords
Definition
top
Values
get
Diff
Syle
Class
get
Diff
Syle
Class
get
Lines
add
Empty
Lines
get
Diff
At
Line
get
Position
create
get
Lines
get
Field
add
is
Text
Extension
is
Text
Extension
get
Extension
create
Repository
add
LFS
Support
add
LFS
Support
unlink
create
Repository
create
Repository
shutdown
add
File
To
Commit
Stage
remove
File
From
Commit
Stage
rename
File
commit
get
All
Files
get
All
Files
create
Branch
checkout
Branch
checkout
Branch
branch
Diff
prepare
Tree
Parser
checkout
Rev
Commit
checkout
Rev
Commit
delete
Local
Branch
merge
Branch
rebase
Branch
get
Branches
get
Remote
Branches
get
Branches
check
Is
Tracking
Remote
Branch
get
File
History
get
File
History
search
get
Search
Service
prerson
Indent
Contains
get
Tags
create
Tag
get
Head
stash
get
Stash
List
delete
Stash
apply
Stash
checkout
File
creae
Empty
File
is
Lfs
Repo
is
Lfs
Repo
is
File
Exists
save
File
get
Raw
Diff
get
Tree
Iterator
get
Branch
Name
remove
File
compress
Database
get
Statuses
enrich
With
Last
Changes
Detail
merge
Lfs
get
Lfs
Files
get
Items
To
Index
get
Commits
By
Tree
get
Merged
Branches
calculate
Averageper
Month
get
Rev
Commits
find
Parrent
get
Conflict
Sub
Status
adapt
Conflicting
State
get
Repository
is
Repository
Has
Remote
Url
get
Repository
Remote
Url
clone
Repository
configure
Lfs
Support
rollback
Lfs
Support
set
Remote
Url
remote
Repository
Push
track
Remote
remote
Repository
Pull
remote
Repository
Fetch
get
Message
configure
Transport
Command
adapt
Stage
adapt
adapt
get
Scm
Items
blame
blame
blame
blame
count
Lines
get
Diff
Formatter
adapt
Diff
Entry
adapt
Diff
Status
delete
On
Exit
clean
Up
Temp
Files
parse
Lfs
Files
List
adapt
Lsf
List
Line
parse
Lsf
List
Line
get
Mime
Type
get
File
Extension
is
Text
decrypt
crypt
crypt
parse
Git
Attributes
get
Lsf
Patters
add
Lfs
Pattern
remove
Lfs
Pattern
init
init
save
Settings
get
Current
Project
update
Plot
Commit
List
update
All
update
Status
update
Status
If
Need
update
Working
Branch
update
Branches
filter
Branches
update
Tags
filter
Tags
read
Settings
update
Stash
get
Git
Repo
Service
get
Setting
Service
get
Main
set
Main
get
Project
Folder
is
Windows
drop
Index
search
get
Searcher
get
Reader
submit
Item
To
Reindex
get
Writter
get
Index
Storage
Folder
close
read
read
write
create
Storage
Is
Absent
get
Absolute
Path
To
Property
File
include
clone
