isHave
l
max
r
cur
idx
res
map
res
i
num
n
dp
res
j
i
ans
idx
idx1
idx2
jin
cur
cur
cur
n
res
i
flag
rows
arr
i
ans
n
step
res
arr
i
start
add
res
map
i
dummy
cur
sum
p1
p2
i
j
tmp
value
result
current
length
bytes
mark
max
start
i
current
map
a
i
index
pre
cur
carray
x
y
sum
num
i
j
solution
maxLen
i
startNum
currentNum
len
solution
l1
l2
l3
memo
sb
i
idx
instance
strX
sign
strArr
head
tail
tmp
reversedX
instance
retArr
i
j
i
left
right
substr
left
right
merged
i
i
temp
mid
i
j
t
startIdx
endIdx
len
sets
curCharSeq
carryNum
ret
retTail
i
sum
cache
i
num
diff
retListNode
latestRetListNode
currentNode1
currentNode2
carry
cSum
cMod
createMode
createMode
maxSubStringLength
counter
start
cache
i
currentChar
duplicated
lastOne
solution
example
example2
example3
example4
list
n
left
right
queue
node
pre
v1
v2
i
j
L1
L2
val1
val2
m
n
r
c
val
bm11
l3
l2
l1
h2
h1
p1
p2
cri
val
node
pre
next
pre
fast
index
left
right
mid
bm5
nodes
h3
h2
h1
l4
l3
l2
l1
pre
node
queue
pre
p
slow
fast
node
i
res
pre
p
left
right
mid
queue
node
val
pre
p
p1
p2
len
ppre
pre
p
odd
p1
even
p2
pre
node
list
node
queue
res
queue
count
list
node
idx
fast
slow
n
mid
res
i
j
k
k
bm7
l5
l4
l3
l2
l1
slow
fast
left
right
mid
list
dummy
pre
node
fast
slow
tmp
left
right
h
res
d
p
q
cur
n
ans
left
right
sum
max
i
j
max
n
n
pre
ppre
cur
i
a
row
col
res
xOrValue
left
up
leftUp
i
j
res
i
l
r
result
b
y
res
ans
contribute
t
right
n
count
left
n
dp
i
maxLength
map
count
i
preIndex
ans
map
i
x
y
zero
first
second
i
n
res
prefix
i
base
i
m
n
i
j
node
i
ch
index
node
node
i
ch
index
maxSide
rows
columns
dp
i
j
maxSquare
c
i
ch
cnt
ans
i
j
digit
start
count
num
number
res
last
d
n
ans
i
check
j
p1
p2
num
n
suffixSum
i
count
x
count
x
n
suffixSum
i
f_record
s_record
i
j
count
x
count
x
len
dp
sum
i
m
x
node
n1
n2
r
v
sp
res
list
map
n
up
down
i
up
down
i
track
list
node
pre
h
tmp
pos
index1
index2
i
node
rand
mid
node
right
left
p
queue
count
node
map
reminder
i
preIndex
n
pos
ans
queue
depth
isFile
len
left
right
subTree
freq
idx
rootVal
node
index
lson
rson
set
node1
node2
pre
maxValue
sum
n
first
second
i
tmp
node1
node2
c
value
newList
head
node
tmp
node
number2
l1
l2
result
result
pointNode
carry
a
b
sum
number
cale
val
node
nodePoint
val
listNode
m
sb
i
j
res
queue
count
idx
node
queue
count
node
flag
preNode
len
result
k
i
len
pre
i
result
k
n
res
cnt
target
n
i
left
right
i
count
oddNode
evenNode
evenFirst
it
m
n
dp
i
num1
j
num2
list
i
index
j
i
j
tmp
bitList
r
size
i
j
tmp
last
j
x
idx
j
m
n
dp
i
j
ans
i
total
n
n
f_record
s_record
i
j
m
n
dp
i
j
idx
rootVal
node
index
n
dp
i
i
j
min
j
dp
i
sum
dp
i
min
j
n
key
val
queue
res
m
n
i
index
tmp
nodeQueue
node
count
result
list
max
len
mx
i
n
rightBound
i
number49
map
charry
key
list
res
n
record
i
word
count
j
mem
k
t
set
node
count
flag
number324
n
left
right
t
idx
node
first
node
removeNode
first
first
it
visits
keys
cnt
queue
step
sz
i
curr
j
sb
next
len
dp
zeroPos
idxList
i
size
res
i
max
index
i
left
right
root
xor
diff
a
b
res
i
leftTree
rightTree
root
count
n
list
i
union
i
j
node
path
aHead
bHead
aSetSize
bSetSize
big
small
number
node1
node2
node3
node4
node5
sign
a
b
quotient
step
q
list
mat
n
m
n
ps
i
j
i
j
res
i
j
r
c
count
dp
i
after
res
pa
at
i
j
i
j
i
j
x
y
count
pre
node
stepOneEnd
begin
end
tmp
cnt
pre
idx
i
N
record
list
i
t
j
m
n
res
number
stack
sb
i
ch
n
timePoints
first
firstTime
last
lastTime
minDiff
i
t1
t2
t
i
j
result
answer
sum
i
i
query
favoriteType
favoriteDay
dailyCap
x1
y1
x2
y2
count
tmp
pre
head
m
n
res
i
row
col
next
interview0105
n
pre
cur
tmp
i
length
i
set
j
length
n
set
i
j
maxLength
sLength
character
begin
indexMap
i
n
dp
i
i
j
l
r
hl
hr
list
st
res
node
prev
number73
m
n
tmp
i
i
j
i
i
j
m
n
row
col
i
j
i
j
n
n
totalNum
maxSum
minSum
max
min
i
m
n
dp
i
j
n
dp
i
result
node
st
len
mask
i
word
l
j
max
i
j
number1823
visits
vis
idx
count
i
n
total
i
odd
i
perm
i
len
val
mid
nodes
idx
r
c
val
val
i
j
node
n
left
right
i
n
flag
left
right
count
cur
n
sortInterval
i
res
idxMap
originalMap
index
begin
end
idx
val
intervals
n
original
i
hash
result
i
subStr
list
queue
count
max
node
number200
m
n
res
visit
i
j
queue
cad
x
y
sum
i
j
tmp
edges
i
queue
max
left
right
mid
count
count
countMap
bulls
cows
i
c
i
c
sb
arr
bolls
cows
i
c
n
maxPos
end
step
i
sum
n
first
second
third
len
stack
res
i
len
arr
pre
indexSet
i
change
modifyList
longestStr
tempStr1
tempStr2
i
s
o1
o2
o3
o4
idxMap
n
i
list
list1
list2
diff
i
index
left
right
mid
n
idx1
idx2
diff
i
n
dp
index
k
list
len
i
min
i
i
list
list
len
idx
ans
i
cnt
n
region
begin
end
i
res
i
region
n
i
begin
end
number
n
left
right
mid
n
len
sum
first
second
third
forth
list
len
sum
first
second
third
list
q
r
h
h1
h2
h3
h4
h5
h6
beginNode
endNode
tmp
count
result
queue
level
count
list
node
m
n
res
Ar
Ac
Br
Bc
fromUp
index
k
n
d
ans
t
i
set
n
dp
i
j
twt
res
users
priorityQueue
tweet
twt
cur
last
next
childLast
queue
count
node
flag
preNode
s
idx
root
sb
words
chs
node
index
sb
node
a
baseDay
maxDay
i
tmp
count
i
i
a
low
high
days
bouquets
flowers
length
i
number449
sb
queue
node
vals
root
queue
idx
node
n
idxMap
i
dp
ans
i
j
k
n
left
right
mid
n
n
count
sum
left
right
number34
res
res
left
right
mid
left
right
mid
len
m
n
dp
i
j
left
right
temp
successor
m
n
i
j
visit
m
n
operation
flag
i
j
sum
i
j
n
i
j
tmp
low
high
pivot
dp
i
j
res
i
n
d
res
left
right
m
n
zeroDp
oneDp
i
ch
n
us
i
pre
j
i
node
st
aHead
bHead
aSize
bSize
bigNode
smallNode
number
g
res
queue
inMap
fatherSet
cur
set
graph
before
after
from
to
max
maxMulti
minMulti
i
mx
mn
val
stack
count
i
inStack
sb
s
number
result
length
i
enableList
leftCoordinate
rightCoordinate
d
m
n
result
i
j
lowRow
highRow
lowCol
highCol
m
n
cnt
r
c
route
left
right
up
bottom
res
index
res
visit
i
j
cnt
st
i
j
nodeQueue
node
count
result
list
res
i
node1
node2
st
h
count
val
list
h
len
val
dummy
pre
slow
fast
i
val
queue
i
a
num2
num1
deque
p
index
q
t
list
result
node
st
dp
factors
p2
p3
p5
i
num2
num3
num5
n
i
count
i
count
length
index
minSum
i
res
n
j
list
dp
i
j
maxArea
m
n
cal
i
j
curArea
m
n
queue
cad
r
c
number735
deque
i
val
res
idx
number467
dp
k
i
count
res
i
k
mid
helper
p
q
index
i
n
dp
i
res
random
i
j
temp
res
subProblem
res
subProblem
dp
i
stack
count
i
inStack
sb
i
profit
cur
i
sb
m
n
peak
dirs
i
queue
i
j
p
x
y
list
number
i
n
base
sum
i
quotient
remainder
sum
first
last
count
length
keySet
i
len
j
targetArray
sourceArray
count
memory
dp
i
preVal
curVal
sum
i
node1
node2
needleLength
i
j
point
rev
numberStr
sb
flag
i
minRow
minCol
number905
startTime
B
length
begin
end
num1
left
right
tmp
numList
logList
len
index
key
content
ch
isLetter
res
idx
list1
list2
i
number804
startTime
result
info
i
c
charArray
sb
left
right
mid
number852
number961
startTime
result
set
i
sb
len
left
cnt
right
ch
res
binaryStr
res
tmp
i
last
ans
i
length
i
j
i
res
first
second
i
count
t
list
i
t
j
n
count
idx
right
ans
left
right
mid
m
n
avg
op
i
j
sum
count
r
c
cursor
count
ans
idx
i
index
words
set
sb
ch
i
n
i
result
list
i
rowList
preRow
pre
k
cur
left
right
res
left
right
sum
head1
head2
queue
t1
t2
set
slow
fast
fast
slow
a
increase
begin
length
i
i
inc
dec
n
i
oddValue
evenValue
i
count
i
number709
startTime
sb
i
c
sb
i
c
t1
t2
t3
tmp1
tmp2
i
min
max
val
result
i
number
i
ans
n
i
value
res
i
len
res
indexMap
i
j
i
valueMap
stack
i
res
i
set
route
ban
count
sb
i
ch
word
max
res
number657
startTime
level
vertical
array
list1
list2
i
i
i
array
i
i
left
right
index
contain
j
i
diff
cur
i
result
count
i
j
map
i
complement
n
dp
i
res
i
mid
root
left
right
stack
set
tmp
i
stack
first
second
i
sum
sb
n
p
i
len
l
r
tmp
node1
node2
profit
minIdx
i
left
right
array
i
length
len
i
end
begin
res
divisor
i
j
sb
c
sum
upperCounter
root
point
data1
data2
row
cur
i
idx
res
isPrime
i
j
count
i
set
i
number
n
i
sum
n
totalSum
number942
startTime
n
res
min
max
i
n
prev
curr
i
next
number977
startTime
result
length
b
i
forward
backward
index
data1
data2
len
arr
i
left
right
c
s
length
i
j
tmp
array
length
str
res
set
result
res
i
set1
set2
res
i
node
pre
listNode
res
i
m
count
i
index
index
index
len
right
left
n
ans
index
i
i
list
flag
tmp
every
data
list
n
div
t
l1
l2
i
j
carry
sb
a
b
sum
primeCount
i
num
j
p
q
res
decode
i
left
right
max
second
index
i
node1
node2
node3
node4
node5
queue
depthX
depthY
xFather
yFather
count
node
seconds
last
bits
i
len
left
right
tmp
slow
fast
left
result
n
i
idx
i
count
left
right
temp
number832
startTime
result
rowLength
colLength
begin
end
tmp
i
i
j
sum
left
right
i
arr
i
diff
i
k
len
left
right
indexMap
i
list
node
begin
end
sb
n
p
v
sb
flag
list
node
begin
end
number944
startTime
count
rowLength
colLength
col
row
max
row
col
i
sum
j
n
xy
yz
xz
i
j
res
i
i
val
stack
number461
startTime
count
result
binaryStr
i
number929
startTime
union
content
local
res
i
prices
contain
result
i
res
min
i
i
list
res
max
i
last
index
i
m
n
dp
i
j
i
j
sum
i
result
j
i
res
n
i
list
idx
n
d
res
left
right
m
val
left
right
n
leftMax
rightMax
i
i
ans
i
number
low
high
pivot
queue
id
n
res
index
i
n
heights
i
left1
right1
height
j
left2
right2
i
target
window
need
i
left
right
valid
c
slider
number76
list
list
size
j
clone
choice
record
i
count
m
n
dp
i
i
j
n
i
tmp
i
n
i
i
index
i
record
res
col
j
env
n
height
i
dp
i
j
res
i
dp
i
k
number51
result
record
path
t
i
sb
j
col
i
n
leftMost
i
res
visit
p
q
r
i
nums1
nums2
len1
len2
even
k
m
curIndex_1
curIndex_2
i
j
a
b
heapA
heapB
len
test
mod
col
dp
i
j
maxArea
m
n
heights
i
j
c
area
q
i
h
j
h
j
number1606
arrival
load
available
i
busy
requests
i
p
max
result
i
maxArea
n
q
i
h
j
h
j
res
trees
m
n
i
j
cx
cy
step
i
t
m
n
step
queue
visited
sz
i
ord
x
y
j
nx
ny
list
node
n
dp
i
j
i
n
m
f
i
j
end
i
firstNode
pre
nxt
l1
l2
l3
l4
l5
number25
n
n
map
i
list
dist
d
t
step
list
head
it
queue
i
node
number123
n
buy1
sale1
buy2
sale2
i
n
suffixSum
i
fRecord
sRecord
i
cnt1
cnt2
count
x
count
x
res
m
n
ls
i
differ
j
word
start
word
val
a
result
len1
len2
freqs
freqt
i
c
cnt
left
right
c
sb
len
i
tmp
num
set
i
ceil
node
i
c
node
i
c
sum
len
begin
maxLen
idxMap
i
c
t
node
parent
n
first
second
i
tmp
o
dictionary
sentence
root
words
sb
node
i
c
sb
node
i
c
strArr
dataList
root
max
index
i
n
right
left
ans
mid
o
n
unionSet
idxList
i
s1
j
s2
idx
node
queue
p1
p2
aSize
bSize
bigNode
smallNode
row
col
heights
maxArea
i
j
c
stack
n
area
i
h
j
h
j
left
right
mid
sqr
o
result
result
i
j
i
cur
res
i
list
left
right
n
dp
i
pre
cur
tmp
o
n1
n2
n3
dp
i
j
i
ch1
j
ch2
ch3
o
grid
maxArea
m
n
cal
i
j
curArea
m
n
queue
cad
r
c
maxLen
i
set
idx
j
j
len1
len2
dp
i
a
j
b
res
freq1
freq2
len1
len2
i
i
res
i
l
r
size
o
result
list
i
tmp
ans
i
total
queue
idx
n
w
v
res
i
list
sb
i
tmp
fast
slow
node
n
dp
i
list
idx
idx
m
n
res
queue
visit
i
j
c
x
y
left
right
mid
cur
last
next
childLast
n
dp0
dp1
i
len
len
o
unionSet
size
node
queue
p1
p2
aSize
bSize
bigNode
smallNode
o
i
pre
cur
len
tmp
i
j
sign
res
dead
step
queue
seen
size
i
status
res
arr
i
num
node
i
c
node
node
node
i
c
idx
last
set
i
ans
n1
n2
dp
i
i
j
ch1
ch2
result
i
unsame
i
o
result
gp
inMap
zeroQueue
visit
cur
res
i
gp
i
from
to
idx
sum
i
n
dp
i
o
m
list
unionSet
i
i
node
queue
p1
p2
aSetSize
bSetSize
bigNode
smallNode
res
len
queue
dummy
cur
n
node1
node2
dummy
p
carry
val1
val2
sum
node
node
head
t
right
left
sum
st
c
index
sum
sb
i
j
sb
c
sum
entry1
entry2
o
gp
i
str1
str2
left
n1
n2
inMap
queue
sb
in
ch
m
n
i
count
i
multi
r
left
count
multi
right
res
left
right
mid
m
n
dp
i
j
i
j
result
queue
count
node
i
len
l
a
b
node1
node2
node3
node4
node5
deque
p
index
q
t
len
result
process
i
freq
a
k
j
t
res
i
o
maxLength
map
counter
n
i
num
prevIndex
o
m
n
dp
op
i
j
queue
a
x
y
k
r
c
max
i
j
left
right
dp
i
o
list
n
map
set
inDegree
i
queue
i
idx
seq
i
rand
l
r
mid
dp
i
n
waitDays
stack
i
index
arr2
set
set
list
idx
l2
idxMap
i
nums
o
max
n
l
r
mid
res
o
indexMap
i
i
i
j
a_c
b_c
o
N
record
list
i
t
j
sum
left
right
i
queue
l
r
sum
queue
map
res
i
map
count
preSum
left
right
left
right
a
c
o
n
list
i
union
i
j
node
path
aHead
bHead
aSetSize
bSetSize
big
small
result
queue
count
maxValue
node
o
result
k
list
n
i
unionSet
i
j
node
queue
n1
n2
p1
p2
size1
size2
bigNode
smallNode
cur
result
res
queue
l1
l2
i
j
list
o
equations
values
queries
n
result
i
v1
v2
ent
res
idx
map
idx
v1
v2
maxArea
stack
i
h
j
h
j
len
l
r
dis
beginId
endId
que
x
id1
array
length
i
tmp
newWord
id2
o
list
diff
begin
i
cur
v
time
hour
minute
t
p
zero
k
pre
tail
a
o
n
sum
target
dp
j
node
left
right
o
min
n
dp
left
i
queue
node
result
t
queue
result
count
node
dp
i
i
i
j
maxXOR
node
d
b
cur
xorNum
i
d
other
o
len
sum
first
second
third
list
n
dp
i
j
m
n
i
j
i
j
sum
o
freq1
freq2
len1
len2
i
i
node1
node3
node4
root
p
res
q
dummyNode
val
i
i
result
size
i
list
dp
j
count
repeat
min
max
i
map
digit
res
high
cur
low
o
i
j
o
left
right
mid
first
i
last
l
r
left
right
factors
existSet
queue
ugly
i
current
next
offer49
dp
p2
p3
p5
i
num2
num3
num5
dp
i
curMax
j
o
flag
left
right
medianFinder
len
odd
index
digit
start
count
num
dp
i
j
o
head
cur
n
m
f
i
j
o
preVal1
preVal2
sum
i
end
begin
sum
i
j
s
o
len
check
result
index
i
m
res
i
j
k
k
o
count
min
i
queue
list
count
node
res
i
node1
node2
stack
root
i
rowUp
colLeft
rowBottom
colRight
count
i
row
col
res
need
contain
index
o
s
preVal
current
sum
i
len
max
profit
i
o
len
res
queue
index
i
n
ancestor
o
col
j
res
i
tmp
i
st
i
j
o
c
dp
i
set
j
max
dic
res
tmp
j
i
d
node
count
p
result
b
max
result
i
sb
queue
node
root
queue
i
node
data
o
i
value
node
offer07
node
res
i
dp
i
res
i
pre
res
current
i
row
col
dp
i
j
upValue
leftValue
queue
res
count
list
node
result
queue
reverse
count
st
node
list
list
node
f
i
end
result
i
tmp
sum
j
result
sum
l
r
tmp
i
i
j
k
o
board
value
len
index
result
flag
value
sb
o
candidate
restHp
count
xor
bit
a
b
sb
str
i
st
arr
sb
o
pre
next
node
nums
target
left
right
mid
left
right
mid
sb
i
repeat
once
i
i
map
i
ch
i
max
min
total
result
index
i
i
o
dp
i
tmp
j
k
stack
res
index
res
map
i
n
i
j
res
queue
curLevel
len
i
cur
half
map
stack
i
c
list
stack
i
res
minNum
left
right
snowballSize
i
p
i
temp
mid
left
right
leftCount
rightCount
count
i
map
i
val
count
cur_val
res
subset
res
size
i
newSub
res
i
left
right
s
value
result
i
j
k
value
i
map
res
letters
i
res
queue
max
size
node
visited
i
min_depth
parentVal
pVal
qVal
res
stack
white
grey
colorNode
res
visited
curNode
slow
fast
hasCycle
node
queue
result
i
n
res
i
maxWin
j
dummy
start
pos
pre
cur
first
next
stack
maxArea
i
left
right
maxArea
i
area
maxArea
i
j
minHight
k
area
res
stack
white
grew
cnode
res
maxArea
i
j
currentArea
maxArea
left
right
area
i
j
map
i
rootVal
root
i_root_index
leftNum
list
stack
res
stack
white
grey
cnode
res
pos
pos
i
dummy
cur
carry
x
y
sum
curLevel
len
i
node
dummy
preNode
firstNode
secondNode
firstNode
secondNode
p1
p2
p
i
set
currentNode
slow
fast
two_step_before
one_step_before
current_step
i
left
right
map
counter
keyStr
map
s_char
keyStr
bankSet
charSet
level
visited
queue
size
curr
currArray
i
old
next
left_depth
right_depth
counter
s_char
t_char
s_char
t_char
len
count
start
cur
pre
next
temp
len
arr
i
i
count
len
temp
i
nextNode
newHead
nextNode
data_array
data_list
root
stack
water
i
pre
minHeight
i
arr
i
nums1
nums2
result
len1
len2
i
j
list
result
count
nums
ranks
index
ranks
i
temp1
temp2
i
i
j
t
list
center
after
a
p
temp
cur
fast
slow
seats
currentEmptySeats
maxDistance
temp
head
tail
values
tree
money
i
mid
list
reverseList
temp
newlist
L_sqrt
R_sqrt
L_len
R_len
count
palindromes
i
temp
palindromes
j
i
j
chars
temp
i
chars
i
finder
p
node
isAdd
p
median1
median2
i
p
chars
words
charsArray
wordArray
sum
isPlus
i
linkedList
p
newNode
p
p
newNode
p
p
layers
res
len
i
res
temp
min_depth
inorder_root
root
size_left_subtree
n
i
list
len
cur1
cur2
temp
end
i
count
p
cur
len
i
inorder_root
root
size_left_subtree
nums
len
i
prev
curr
mid
root
triangle
rowNum
row
prevRow
j
newLevel
results
temp
nums
mid
root
m
n
rows
cols
size
i
j
i
j
i
j
matrix
solution_73
res
end
start
len
max
cur_loc
solution_55
solution_74
m
n
mid
bottom
top
target_row
left
right
tmp
x
y
true_tmp
tmp
cur
solution_56
res
idx
bitSet
max
temp
index
count
start
end
item
ret
i
dp1
dp2
i
temp
res
row
col
cur
solution_59
new_head
p1
p2
i
temp
ans
n
carry
i
solution_67
pre
curr
i
tmp
strs
len
list
cur
stringBuilder
i
res
i
cur1
cur2
cur
temp_num1
i
nums1
nums2
m
n
len
res
k
len
i
length
p
temp
min
max
m
solution_69
G
i
j
list
newList
cur1
cur2
temp
order
rows
columns
left
right
top
bottom
column
row
column
row
solution_54
len
res
k
i
solution_75
nums
start
i
end
i
count
i
i
i
p0
curr
p2
tmp
size
m
n
track
i
j
dp
i
j
solution_64
len
pop
i
res
solution_66
solution_63
m
n
res
i
i
i
j
pre
maxAns
solution_53
factorials
nums
i
sb
i
idx
all_trees
i
left_trees
right_trees
current_tree
start
end
mid
list
p
list
newhead
pre
curr
sameNode
dp
i
i
i
j
pre
cur
i
j
res
solution_62
start
end
i
i
res
pA
pB
num
len
count
stringBuilder
i
j
res
solution_38
i
len
res
mid
mid
len
mid
len
res
pop
started
minus
i
roman
specific_4
specific_9
symbol1
symbol2
temp
pop
i
j
values
symbols
roman
len
i
len
res
i
list2
list1
list
newlist
p
chars
longest
len
min
max
dp
l
i
j
i
len
new_c
i
characters
root
newRoot
cur
p
cur
newRoot
newCur
len1
len2
pop
max_len
min_len
res
stringBuilder
i
j
j
temp
pop
len
res
i
pop
len1
len2
index1
index2
stringBuilder
temp
temp
temp
num1
num2
list
p
length
count
nums
map
i
len
res
min
max
i
k
target
j
res
i
solution_39
list1
k
cur1
cur2
newhead
temp
start
count
len
mid
solution_35
temp
res
pop
res
list1
list2
answer
answer
plus
p
queue
curNode
left
right
isLeft
i
neg_dividend
neg_divisor
res
count
temp
stringBuilder
index
ch
i
len
res
min
max
i
j
l
k
digit
letters
i
letter
ch
list
max
ans
x_contribute
N
row
col
matrix_temp
i
j
i
j
solution_48
nums
i
j
len
temp
index
max_next
max_next_index
i
nums
list1
newhead
lastend
currend
i
start
next
pre
curr
next
res
i
solution_40
mid
l1
l2
newlist
p
len
row
col
block
i
b_r
j
b_c
row
col
block
len
i
j
num
block_index
boards
solution_36
res
len
i
temp_num
solution_47
len
max
i
j
len
head
tail
max
rev
pop
ans
chars
len
start
num
reverse_str
i
res
solution_22
haystack_len
needle_len
res
haystack_cur
i
len
next
index
k
haystack_len
needle_len
haystack_cur
needle_cur
next
start
end
i
i
len
chars
cur
res
i
sum
preNum
i
num
temp
p
list
right
left
len
symbol_len
i
j
right
left
len
chars
chars_size
i
j
len
res
temp
i
ret
n
cycleLen
i
j
len
chars
str
num
group
j
i
len
chars
rows
cols
down
i
str
i
j
map
count
chars
stringBuilder
i
key
primes
hashMap
hashValue
charArray
solution_49
n
best
i
j
k
sum
res
len
i
temp_num
solution_46
len
left
right
mid
