should
Create
Manager
Config
With
Expected
Values
get
Properties
should
Inject
Config
should
Create
Config
With
Default
should
Create
Config
With
Image
Pull
Policy
Always
should
Create
Config
With
Image
Pull
Policy
If
Not
Present
should
Create
Config
With
Image
Pull
Policy
Never
should
Create
Config
Hardware
Resources
should
Delete
Succeeded
Jobs
should
Run
Without
Error
For
No
Existing
Jobs
should
Run
Without
Error
For
Jobs
Without
Status
should
Run
Without
Error
For
Without
Succeeded
before
All
after
All
should
Create
Topic
Registry
Topic
should
Create
Schema
should
Create
Mirror
should
Not
Fail
If
Topic
Registry
Exists
should
Not
Fail
If
Topic
Exists
should
Not
Fail
If
Schema
Exists
should
Fail
If
Kafka
Is
Not
Available
should
Fail
If
Schema
Registry
Is
Not
Available
successful
Mock
failing
Mock
should
Update
Gateway
should
Update
Multiple
Gateways
should
Not
Update
Fixed
Gateway
should
Update
Mirror
should
Update
Multiple
Mirrors
should
Not
Update
Fixed
Mirror
get
Container
Image
create
New
Deployment
Config
set
Up
Tests
tear
Down
Tests
get
Services
get
Deployments
get
Ingress
Items
get
Config
Maps
get
Middlewares
find
Resource
get
Image
should
Set
Avro
Namespace
From
Properties
should
Convert
Graph
QL
Enum
Fields
should
Convert
Graph
QL
Object
Types
should
Convert
Graph
QL
Scalar
Fields
should
Convert
List
Type
should
Convert
Optional
And
Required
get
Schema
unwrap
Schema
Type
should
Set
Protobuf
Package
From
Properties
should
Convert
Graph
QL
Enum
Fields
should
Convert
Graph
QL
Object
Types
should
Convert
Graph
QL
Scalar
Fields
should
Convert
Optional
And
Required
should
Convert
List
Type
get
File
Descriptor
init
should
Get
Topic
List
should
Get
Topic
should
Create
Topic
When
Query
Is
Not
Defined
should
Create
Topic
When
Query
Params
Are
Set
should
Delete
Topic
topic
Service
before
All
after
All
set
Up
tear
Down
should
Create
Topic
should
Not
Create
Topic
That
Already
Exists
should
Not
Create
Topic
That
Already
Exists
In
Registry
should
Register
Topic
should
Not
Create
Topic
If
Subject
Exists
should
Register
Topic
Graph
QL
Schema
should
Not
Create
Topic
With
Invalid
Graph
QL
Schema
should
Register
Topic
Avro
Schema
should
Register
Topic
Proto
Schema
should
Set
Retention
Time
should
Call
Delete
Mirror
should
Retrieve
All
Topics
should
Throw
Exception
For
Non
Existing
Gateway
new
Topic
Service
For
Avro
new
Topic
Service
For
Proto
new
Kafka
Config
setup
Successful
Mock
set
Up
should
Get
Gateway
List
should
Get
Gateway
should
Create
Deployment
With
Defaults
should
Create
Service
should
Create
Ingress
With
Defaults
should
Create
Middleware
should
Create
Config
Map
With
No
Schema
should
Create
Configmap
With
Schema
should
Update
Config
Map
should
Set
Replicas
should
Set
Image
Version
should
Delete
Deployment
should
Delete
Ingress
should
Delete
Service
should
Delete
Middleware
should
Delete
Config
Map
should
Reject
Duplicate
Gateway
Creation
delete
Gateway
Resources
create
Gateway
create
Gateway
get
Schema
init
should
Get
Gateway
List
should
Get
Gateway
should
Create
Gateway
should
Delete
Gateway
should
Create
Definition
should
Get
Gateway
Graph
QL
Schema
should
Get
Gateway
Avro
Schema
gateway
Service
gateway
Client
set
Up
should
Create
Gateway
Deployment
should
Create
Gateway
Service
should
Create
Gateway
Ingress
should
Create
Gateway
Ingress
With
Http
Ingress
should
Create
Gateway
Config
Map
should
Create
Gateway
Config
Map
With
Schema
should
Create
Gateway
Middleware
new
App
Spec
create
Default
Mirror
Creation
Data
create
Default
Topic
Creation
Data
new
Resource
Config
new
Memory
Resource
get
Limit
get
Request
new
Cpu
Resource
get
Limit
get
Request
should
Get
Application
Information
should
Deploy
Application
should
Delete
Application
should
Call
Get
Application
Information
should
Call
Deploy
Application
should
Call
Delete
Application
application
Service
set
Up
should
Create
Deployment
For
App
Defaults
should
Create
Service
For
Port
Option
should
Not
Create
Service
Without
Port
should
Delete
Deployment
should
Delete
App
Service
With
App
should
Create
Deletion
Job
should
Reject
Duplicate
Application
Creation
deploy
Application
set
Up
should
Create
Deployment
For
App
Defaults
should
Create
App
Deployment
With
Argument
should
Create
App
Deployment
With
Replica
should
Create
App
Deployment
With
Default
Replica
should
Export
Host
Info
For
App
With
Port
should
Annotate
App
Has
Service
should
Create
Service
For
Port
Option
should
Create
Service
That
Selects
App
should
Sync
Target
Port
And
Container
Port
should
Create
App
Deployment
With
Image
Pull
Secret
create
Application
Resource
should
Create
Mirror
With
Default
Values
should
Create
Mirror
With
Mirror
Arguments
should
Delete
Mirror
mirror
Service
set
Up
should
Create
Mirror
Deployment
should
Create
Deployment
With
Custom
Topic
Name
should
Create
Deployment
With
Custom
Tag
should
Set
Replicas
For
Deployment
should
Set
Retention
Time
For
Deployment
should
Set
Range
Field
For
Mirror
Deployment
should
Set
Range
Key
And
Range
Field
For
Mirror
Deployment
should
Throw
Bad
Argument
Exception
When
Both
Retention
Time
And
Range
Field
Set
should
Throw
Bad
Argument
Exception
When
Range
Key
Is
Set
But
Range
Field
Is
Not
Set
should
Create
Mirror
Service
should
Create
Service
With
Custom
Topic
Name
set
Up
should
Create
Mirror
Resources
should
Create
Deployment
should
Create
Service
With
Defaults
should
Delete
Deployment
should
Delete
Service
should
Create
Deletion
Job
should
Reject
Duplicate
Mirror
Creation
create
Mirror
should
Unauthorized
When
Api
Key
Not
Set
In
Header
should
Authorized
When
Api
Key
Exists
should
Authorized
When
Api
Key
Exists
And
Header
Key
Case
Insensitive
should
Unauthorized
When
Api
Key
Is
Not
Valid
should
Unauthorized
When
Api
Key
Header
Key
Is
Wrong
topic
Service
get
Limit
get
Request
for
Deletion
create
Deletion
Job
load
Resource
of
get
Tag
From
String
as
Image
String
get
Image
delete
Jobs
on
Start
Up
on
Start
Up
update
Managed
Deployments
update
Image
delete
deploy
deploy
check
Deployment
Existence
update
Config
Map
read
Deployment
list
Deployments
get
Kubernetes
List
handle
Deployment
Error
handle
Deletion
Error
get
Name
handle
Creation
Error
handle
Deletion
Error
create
Error
list
Resources
get
Resources
Name
get
Resource
get
Error
Handler
for
Creation
for
Deletion
handle
Creation
Error
handle
Deletion
Error
main
kubernetes
Client
convert
convert
To
Descriptor
generate
File
create
Message
handle
Object
Type
create
Field
With
Type
create
Field
Descriptor
For
Scalar
Type
handle
Enum
Type
create
Enum
Descriptor
generate
Enum
Field
Name
handle
List
Type
scalar
Type
Map
convert
get
Root
Type
From
Schema
convert
convert
To
Schema
from
Field
Definition
get
Schema
build
Schema
create
Union
Schema
create
List
Schema
create
Enum
Schema
create
Object
Schema
create
Scalar
Schema
scalar
Type
Map
get
Topic
List
get
Topic
Data
create
Topic
delete
Topic
check
Existence
create
Kafka
Topic
create
Mirror
check
Schema
Registry
check
Kafka
check
Topic
Registry
delete
Mirror
register
Schema
get
Quick
Schemas
get
Topic
List
get
Topic
Data
create
Topic
delete
Topic
get
Topic
List
get
Topic
Data
create
Topic
delete
Topic
get
Gateway
List
get
Gateway
create
Gateway
delete
Gateway
update
Schema
get
Gateway
Write
Schema
get
Name
get
Gateway
List
get
Gateway
create
Gateway
delete
Gateway
update
Schema
get
Gateway
Write
Schema
get
Resource
get
Error
Handler
get
Resource
get
Error
Handler
get
Resource
get
Error
Handler
for
Creation
for
Deletion
create
Gateway
Deployment
create
Gateway
Service
create
Gateway
Ingress
create
Gateway
Middleware
create
Gateway
Config
Map
format
Schema
For
Yaml
get
Resource
get
Error
Handler
get
Resource
Name
get
Config
Map
Name
get
Gateway
Description
handle
Definition
Creation
Error
list
Resources
get
Resources
Name
get
Resource
get
Error
Handler
get
Gateway
List
get
Gateway
create
Gateway
delete
Gateway
update
Schema
get
Graph
QL
Write
Schema
get
Avro
Write
Schema
for
Creation
for
Deletion
create
App
Deployment
create
Application
Service
get
Deployment
Name
get
Resource
get
Error
Handler
list
Resources
get
Resources
Name
get
Resource
get
Error
Handler
get
Application
Information
deploy
Application
delete
Application
check
Service
Annotation
get
Application
Information
deploy
Application
delete
Application
get
Application
Information
delete
Application
deploy
Application
create
Mirror
delete
Mirror
create
Mirror
create
Internal
Mirror
delete
Mirror
create
for
Creation
for
Deletion
get
Deployment
Name
create
Mirror
Deployment
create
Mirror
Service
create
Cli
Arguments
list
Resources
get
Resources
Name
get
Resource
get
Error
Handler
get
Resource
get
Error
Handler
create
Mirror
create
Internal
Mirror
delete
Mirror
value
Parsing
Provider
key
Parsing
Provider
delete
From
Body
Provider
delete
From
Path
Provider
key
Parsing
Invalid
Provider
key
Arguments
invalid
Key
Arguments
new
Avro
Input
Record
new
Avro
Output
Record
new
Proto
Record
get
Avro
Info
proto
Data
creat
Ingest
Request
test
Value
Parsing
test
Key
Parsing
should
Delete
Key
In
Path
should
Delete
Key
In
Body
should
Throw
Bad
Request
Error
When
Json
Has
No
Key
Or
Value
Field
should
Throw
Bad
Request
Error
When
Json
Is
Not
Valid
To
Schema
should
Throw
Bad
Request
Error
When
Key
Type
Is
Wrong
test
Method
Not
Allowed
extract
Error
Message
ingest
Service
topic
Type
Service
ingest
Filter
set
Up
tear
Down
test
Send
Data
test
Delete
Data
topic
Type
Service
should
Unauthorized
When
Anonymous
Client
should
Authenticate
With
Api
Key
should
Not
Authenticate
With
Invalid
Api
Key
should
Authorized
When
Api
Key
Exists
And
Header
Key
Case
Insensitive
should
Unauthorized
When
Api
Key
Header
Key
Is
Wrong
call
Authenticated
Controller
ingest
Service
topic
Type
Service
main
send
Data
delete
Value
delete
Value
From
Body
create
Errors
For
Existing
Keys
error
Does
Not
Exist
Error
convert
Ingest
Data
send
Data
delete
Data
send
Batch
Data
get
Producer
create
Producer
tear
Down
prepare
Ingest
get
Existing
Keys
for
Pair
from
Pairs
from
exists
send
Data
delete
Data
parse
Key
Data
parse
Input
Data
from
Json
Node
parse
parse
Value
get
Topic
Data
delete
From
Topic
Registry
avro
Conversion
Provider
new
Avro
Data
new
String
Data
new
Long
Data
new
Double
Data
new
Integer
Data
new
Protobuf
Data
get
Convention
create
With
Properties
create
With
Properties
create
With
Environment
create
With
Environment
create
With
Source
create
With
Source
new
Quick
Topic
Config
register
delete
get
Topic
Data
topic
Data
Exists
get
All
Topics
should
Create
Config
With
Protobuf
should
Create
Config
With
Default
should
Create
Config
From
Env
Variable
should
Create
Config
From
Env
Variable
Caps
should
Create
Config
From
Env
Variable
Avro
should
Read
Namespace
should
Not
Exist
If
Format
Is
Protobuf
should
Create
Topic
Registry
Config
should
Create
Topic
Registry
Config
From
Env
should
Read
Namespace
should
Not
Exist
If
Format
Is
Protobuf
should
Set
Namespace
When
Name
Is
Correct
should
Throw
Exception
When
Name
Is
Wrong
provide
Correct
Avro
Namespaces
provide
Wrong
Avro
Namespaces
should
Create
Config
should
Create
Config
From
Env
should
Create
Config
Without
App
Id
set
Up
tear
Down
should
Return
Value
Topic
Data
should
Return
Key
Topic
Data
topic
Data
Value
Arguments
topic
Data
Key
Arguments
topic
Data
Arguments
create
Topic
Type
Service
adds
Common
Application
Tag
is
Disabled
By
Default
should
Create
Avro
Schema
Provider
should
Create
Protobuf
Schema
Provider
retrieve
Existing
Avro
Schema
retrieve
Existing
Protobuf
Schema
retrieve
Existing
Avro
Schema
For
Internal
Topic
should
Return
Error
If
Schema
Does
Not
Exist
create
Schema
Fetcher
should
Read
Avro
From
String
should
Read
Proto
From
String
should
Read
Known
Type
From
String
should
Deserialize
Record
should
Deserialize
List
Of
Records
mock
Response
mock
Response
should
Return
Correct
Host
For
Given
Partition
should
Return
Single
Host
When
They
Are
Equal
And
Two
If
They
Differ
should
Throw
Exception
When
Partition
To
Mirror
Host
Is
Empty
should
Return
Get
Topic
Data
With
Specific
Key
should
Return
List
Of
Topics
Data
should
Return
Get
All
Topic
Data
should
Return
True
If
Topic
Exists
should
Empty
List
If
Topic
Does
Not
Exists
create
Topic
Data
should
Call
Update
Routing
Info
When
Update
Header
Is
Set
When
Fetching
Value
should
Return
All
Values
From
Mirror
With
Two
Replica
When
Fetching
All
should
Return
All
Values
From
Mirror
With
Two
Replica
When
Fetch
Values
should
Return
All
Values
From
Mirror
With
One
Replica
And
Two
Partitions
When
Fetch
Values
should
Return
All
Values
From
Mirror
With
One
Replica
When
Fetch
Range
should
Construct
Correct
Url
For
Stream
State
Host
should
Construct
Correct
Url
With
Port
And
Ip
For
Stream
State
Host
should
Construct
Correct
Url
For
Key
Request
should
Construct
Correct
Url
For
Keys
Request
should
Construct
Correct
Url
For
All
Request
should
Construct
Correct
Url
For
Range
Request
should
Be
Equal
If
The
Topic
Name
Is
The
Same
should
Return
Host
When
Converted
To
String
should
Construct
Correct
Url
With
Ip
And
Port
should
Create
Correct
Mirror
Url
From
Request
With
No
Query
Parameter
should
Create
Correct
Mirror
Url
From
Request
With
Query
Parameter
should
Create
Correct
Mirror
Url
With
Direct
Access
From
Request
With
No
Query
Parameter
handle
handle
handle
do
Filter
handle
handle
handle
handle
handle
parse
Client
Exception
reduce
Error
Messages
handle
get
Status
get
Status
get
Status
get
Status
get
Status
get
Status
get
Status
handle
get
Status
get
Status
handle
to
New
Kafka
Topic
as
Props
get
convert
Args
convert
Args
convert
Args
to
Cli
Parameter
format
Cli
Argument
matches
matches
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
Resolver
get
Serde
get
Class
Type
is
Schema
get
Type
Resolver
get
Serde
get
Class
Type
configured
Type
Resolver
configured
Serde
configured
Class
get
Type
Resolver
get
Serde
get
Class
Type
get
Type
For
Schema
Format
get
Topic
Data
delete
From
Topic
Registry
get
Type
Resolver
get
Serde
get
Class
Type
get
Topic
Data
delete
From
Topic
Registry
load
Topic
Data
from
Topic
Data
create
Data
create
Resolver
single
To
Future
configure
Object
Mapper
serialize
configure
Object
Mapper
on
Created
serialize
configure
Object
Mapper
are
Same
Types
get
Root
Type
get
Name
Of
Type
named
Type
type
To
Scalar
Name
Map
add
Common
Tag
Filter
get
Value
Schema
get
Key
Schema
get
Schema
parse
Schema
avro
Schema
Provider
protobuf
Schema
Provider
get
Value
Schema
get
Key
Schema
get
Schema
from
String
from
String
from
String
from
String
from
String
from
String
from
String
from
String
get
Attributes
get
Name
do
Filter
fetch
Authentication
find
Host
get
All
Hosts
update
Routing
Info
find
Host
get
All
Hosts
update
Routing
Info
find
Distinct
Hosts
convert
Host
String
To
Mirror
Host
make
Request
For
Partition
Host
Mapping
get
For
Serialized
Key
get
For
Serialized
Key
send
Data
delete
Data
new
Call
type
Factory
object
Mapper
ok
Http
Client
client
update
Schema
get
Write
Schema
update
Schema
get
Write
Schema
handle
Error
create
Mirror
Url
From
Request
get
Application
Information
deploy
Application
delete
Application
fetch
Value
fetch
All
fetch
Values
fetch
Range
exists
find
Mirror
Host
For
List
Of
Keys
from
Response
from
Fallback
Response
get
And
Check
Response
Body
is
Cache
Miss
Header
Set
create
From
Mirror
Host
get
Partition
To
Host
Url
to
String
register
delete
get
Topic
Data
topic
Data
Exists
get
All
Topics
register
delete
get
Topic
Data
fetch
Topic
Data
topic
Data
Exists
get
All
Topics
create
Mirror
Client
get
Self
make
Request
process
Response
fetch
Value
fetch
All
fetch
Values
fetch
Range
exists
fetch
Value
fetch
All
fetch
Values
fetch
Range
exists
create
With
Prefix
create
With
No
Prefix
for
Key
for
Keys
for
All
for
Range
to
String
equals
hash
Code
get
Base
Url
Builder
create
Mirror
Client
create
Mirror
Client
deserialize
deserialize
List
parse
Value
make
Request
process
Response
create
Mirror
Client
create
Mirror
Client
make
Request
process
Response
get
Response
From
Fallback
Service
parse
as
Subject
to
Error
for
Status
set
Up
should
Return
String
Schema
should
Throw
Error
If
Type
Does
Not
Exist
should
Execute
Definition
With
Single
Field
And
Object
Name
should
Execute
Query
With
Single
Field
should
Execute
Range
should
Execute
Query
With
Single
Field
And
Modification
should
Execute
List
Query
With
Single
Field
And
Modification
should
Execute
Query
All
With
Primitive
Type
should
Execute
Query
With
List
Argument
Type
Id
should
Execute
Query
With
List
Argument
Type
Int
should
Execute
Query
With
Primitive
Type
should
Throw
Error
For
Non
Nullable
Field
get
Graph
QL
register
Topics
should
Fetch
List
Of
Strings
should
Fetch
List
Of
Integer
should
Fetch
List
Of
Doubles
should
Fetch
List
Of
Objects
With
Key
String
should
Return
Correct
List
When
Return
Type
Is
Avro
With
Keys
Of
Int
should
Return
Correct
List
When
Return
Type
Is
Protobuf
With
Keys
Of
Int
should
Return
Correct
List
When
Return
Type
Is
Json
provide
Values
should
Forward
Path
Parameter
should
Forward
Path
Parameter
In
Order
should
Forward
Int
Path
Parameter
should
Forward
Float
Path
Parameter
should
Forward
Complex
Path
Parameter
should
Forward
Query
Parameter
should
Forward
Int
Query
Parameter
should
Forward
Float
Query
Parameter
should
Forward
Complex
Query
Parameter
should
Forward
Multiple
Parameters
should
Allow
Null
In
Query
Parameter
should
Allow
Nullable
Result
should
Not
Allow
Non
Nullable
Result
For404
should
Not
Allow
Non
Nullable
Result
For
Empty
Body
should
Throw
Exception
For
Null
Path
Parameter
should
Use
Post
should
Use
Body
Parameter
should
Return
Complex
Type
should
Return
Single
Field
Of
Complex
Type
should
Fetch
Values
For
String
Key
And
Avro
Value
should
Fetch
Values
For
Double
Key
And
Proto
Value
new
Click
Stats
Avro
new
Purchase
Stats
Avro
new
Click
Stats
Proto
new
Purchase
Stats
Proto
setup
after
All
should
Fetch
Values
should
Fetch
Values
For
Given
Key
provide
Value
Arguments
provide
Value
Arguments
For
Key
key
Value
Pairs
With
Random
Key
key
Value
Pair
From
Value
delete
Topic
should
Fetch
Range
Of
Objects
With
Key
Integer
should
Fetch
Empty
List
When
Result
Is
Null
And
Return
Type
Is
Not
Nullable
setup
after
All
provide
Value
Arguments
input
Record
provide
Value
Arguments
For
Keys
key
Value
Pairs
With
Random
Key
key
Value
Pairs
With
Random
Value
should
Ingest
Data
With
Different
Value
Types
should
Ingest
Data
With
Different
Key
Types
topic
Type
Service
should
Fetch
String
Value
With
Key
String
should
Fetch
Integer
Value
With
Key
String
should
Fetch
Long
Value
With
Key
String
should
Fetch
Double
Value
should
Fetch
Object
Value
With
Key
String
should
Fetch
List
When
List
Argument
Of
Type
Int
With
Key
Long
should
Fetch
Empty
List
When
Result
Is
Null
And
Return
Type
Is
Not
Nullable
should
Fetch
Empty
List
When
Result
Is
Not
Null
And
Does
Not
Have
Nullable
Elements
provide
Values
should
Fetch
Modification
Value
When
Return
Type
Is
Json
should
Fetch
Nest
Modification
Value
When
Return
Type
Is
Avro
should
Fetch
Nest
Modification
Value
When
Return
Type
Is
Proto
provide
Values
set
Up
should
Parse
Non
Optional
Arguments
should
Parse
Optional
Arguments
should
Parse
Multiple
Directives
should
Parse
Http
Method
should
Parse
Body
Parameter
parse
Schema
on
Field
set
Up
should
Parse
Path
Arguments
should
Parse
Query
Arguments
should
Parse
Multiple
Arguments
should
Parse
Overridden
Arguments
should
Respect
Order
Of
Overridden
Arguments
should
Parse
Specified
Path
Arguments
should
Parse
Enum
should
Default
To
Get
Method
should
Parse
Http
Method
should
Parse
Body
Parameter
should
Not
Allow
Same
Argument
Twice
should
Not
Parse
Non
Existing
Path
Argument
should
Not
Parse
Non
Existing
Query
Argument
get
Graph
QL
Schema
should
Secure
Graph
QL
Endpoint
should
Secure
Graph
QL
Ws
Endpoint
should
Allow
Authenticated
Subscription
Request
should
Convert
Query
With
Single
Field
should
Convert
Query
With
List
Argument
should
Convert
Query
With
Single
Field
And
Modification
should
Convert
List
Query
With
Single
Field
And
Modification
should
Convert
Query
With
Primitive
Type
should
Convert
Query
With
Range
should
Convert
Query
All
With
Complex
Type
should
Convert
Query
All
With
Primitive
Type
should
Convert
Query
With
Multiple
Fields
should
Convert
Definition
With
Single
Field
And
Object
Name
should
Convert
If
Multiple
Values
should
Convert
Subscription
should
Convert
Complex
Subscription
should
Convert
Mutation
should
Not
Convert
Key
Field
With
Wrong
Key
Field
Name
should
Not
Convert
Key
Field
With
Wrong
Field
Type
should
Not
Convert
If
Missing
Key
Info
In
Query
Type
should
Not
Convert
If
Missing
Key
Info
In
Basic
Type
should
Not
Convert
If
Mutation
Does
Not
Have
Two
Args
should
Not
Convert
If
Key
Arg
And
Input
Name
Different
In
Query
Type
should
Not
Convert
If
Key
Arg
And
Input
Name
Different
In
Non
Query
Type
should
Not
Convert
If
Range
To
Argument
Is
Missing
should
Not
Covert
If
Range
From
Argument
Is
Missing
should
Not
Covert
If
Range
Is
Defined
On
Field
should
Not
Covert
If
Key
Argument
In
Range
Query
Is
Missing
should
Not
Covert
If
Return
Type
Of
Range
Query
Is
Not
List
register
Topics
assert
Quick
Directive
Exception
Message
has
Field
With
List
Type
should
Read
Definition
On
Start
Up
should
Not
Update
When
Definition
Is
Empty
should
Fail
Silently
If
No
File
Exists
gateway
Updater
extract
Error
Message
returns
Error
For
Empty
Body
returns
Error
For
Wrong
Body
close
on
Message
send
next
Response
get
Type
set
Type
set
Id
set
Payload
create
Config
get
Field
Data
Fetcher
get
Field
Definition
get
Topic
Directive
Arguments
From
Field
create
Client
create
Client
get
Client
should
Unauthorized
When
Anonymous
Client
should
Authenticate
With
Client
Credentials
Flow
extract
Error
Message
create
fetch
Result
fetch
Results
fetch
List
fetch
Range
get
get
get
Selected
Fields
create
Complex
Type
update
Field
Cache
get
Value
For
Key
load
Field
combine
Element
Streams
create
Subscription
Flux
select
Fields
get
Element
Stream
get
Element
Stream
get
Deserializer
Name
remove
Subscriber
add
Subscriber
remove
Null
to
String
get
query
Fetcher
query
List
Fetcher
list
Argument
Fetcher
range
Fetcher
mutation
Fetcher
list
Field
Fetcher
key
Field
Fetcher
subscription
Fetcher
subscription
Provider
data
Fetcher
Client
defer
Fetcher
get
Topic
Data
get
handle
Response
set
Request
Method
get
Path
Arguments
get
Query
Arguments
get
Method
Type
get
Body
Parameter
make
Missing
Path
Param
Error
extract
Rest
Value
get
find
Key
Argument
extract
Correct
Type
extract
Json
fetch
Result
fetch
Results
fetch
List
fetch
Range
get
get
find
Keys
extract
Generic
Record
Value
extract
Dynamic
Message
Value
extract
Json
create
Client
create
Client
create
Client
create
Client
get
get
get
get
Argument
get
get
Definition
get
Name
extract
Argument
extract
Data
Fetchers
is
Valid
extract
Defer
Fetcher
extract
Type
Name
extract
Data
Fetchers
is
Valid
current
Coordinates
extract
Data
Fetchers
is
Valid
extract
Data
Fetchers
is
Valid
extract
Key
Argument
Type
extract
Data
Fetchers
is
Valid
extract
Data
Fetchers
is
Valid
extract
Type
Name
extract
Key
Field
Type
extract
Data
Fetchers
is
Valid
extract
Data
Fetchers
is
Valid
extract
Data
Fetchers
is
Valid
apply
validate
validate
apply
validate
validate
make
Check
For
Key
Argument
check
If
Input
Name
And
Key
Arg
Match
In
Query
Type
check
If
Input
Name
And
Key
Arg
Match
In
Non
Query
Type
validate
check
If
Basic
Context
Properties
Are
Invalid
validate
has
Range
From
And
Range
To
apply
from
Arguments
has
Key
Argument
has
Key
Field
has
Range
From
has
Range
To
on
Field
get
Definition
get
Name
on
Field
get
Definition
get
Name
validate
Directive
field
Coordinates
get
Rest
Argument
get
Duplicated
Parameters
get
Rest
Parameters
create
Rest
Data
Fetcher
is
Of
Parameter
Type
from
Arguments
process
build
Data
Fetcher
send
Data
delete
Data
send
Batch
Data
get
Producer
create
Producer
tear
Down
send
Data
delete
Data
update
update
From
Schema
String
get
Graph
QL
get
Graph
QL
Schema
add
Graph
QL
Update
Callback
dummy
Graph
QL
Object
print
Type
Schema
is
Annotated
With
Topic
Directive
main
invoke
cancel
All
add
Subscription
cancel
Operation
remove
Completed
operation
Exists
get
Query
set
Query
get
Operation
Name
set
Operation
Name
get
Variables
set
Variables
get
Auth
Token
set
Auth
Token
do
Filter
get
Type
set
Type
get
Id
set
Id
get
Payload
set
Payload
from
String
get
Type
send
to
Graph
QL
Ws
Response
has
Errors
starter
start
Subscription
get
Subscription
do
On
Subscribe
do
On
Next
do
On
Error
do
On
Complete
convert
And
Send
send
on
Open
on
Message
on
Close
on
Error
send
proceed
do
Filter
get
Order
activate
Session
is
Active
init
terminate
Session
save
Operation
stop
Operation
remove
Completed
operation
Exists
handle
Message
create
Message
Handler
init
start
Operation
execute
Request
on
Application
Event
build
Graph
QL
get
Write
Schema
create
Schema
Error
Message
get
extract
From
Message
extract
Field
From
Record
get
Definition
get
Definition
create
get
Default
Data
Fetcher
should
Always
Apply
Point
Topology
should
Apply
Range
Topology
When
Range
Field
Is
Set
And
Retention
Is
Not
Set
should
Apply
Retention
Topology
When
Range
Field
Is
Set
create
Topology
Context
create
Topology
test
Props
should
Add
Value
should
Update
Value
should
Delete
Key
With
Null
Value
should
Extract
Value
From
Avro
Schema
should
Extract
Value
From
Protobuf
Schema
should
Throw
Exception
When
Field
Does
Not
Exist
In
Avro
Schema
should
Throw
Exception
When
Field
Does
Not
Exist
In
Protobuf
Schema
tear
Down
should
Write
In
Range
Store
With
Avro
Schema
Value
should
Write
Negative
Integer
Keys
In
Range
Store
With
Avro
Schema
Value
should
Write
Min
And
Max
Integer
Keys
In
Range
Store
With
Avro
Schema
Value
should
Write
String
Keys
In
Range
Store
Value
With
Avro
Schema
Value
should
Write
In
Range
Store
With
Proto
Schema
Value
should
Write
Negative
Keys
In
Range
Store
With
Proto
Schema
Value
should
Write
Min
And
Max
Long
Keys
In
Range
Store
With
Proto
Schema
Value
should
Write
To
Point
Store
And
Range
Store
With
Avro
Schema
When
Range
Key
Is
Set
should
To
Write
Point
Store
And
Range
Store
With
Proto
Schema
When
Range
Key
Is
Set
create
Topology
avro
Data
proto
Data
set
Test
Properties
get
Field
setup
teardown
should
Receive
Correct
Partition
Host
From
Mirror
Application
send
Values
To
Kafka
topic
Type
Service
set
Up
App
setup
teardown
should
Receive
Correct
Value
From
Mirror
Application
With
Range
Index
send
Values
To
Kafka
set
Up
App
get
Topic
Type
Service
setup
teardown
should
Receive
Correct
Value
From
Mirror
Application
With
Range
Index
send
Values
To
Kafka
set
Up
App
get
Topic
Type
Service
should
Pad
Zeros
To
Integers
should
Pad
Zeros
To
Longs
should
Get
Integer
With
End
Of
Range
Inclusive
should
Get
Integer
With
End
Of
Range
Exclusive
should
Get
Long
With
End
Of
Range
Inclusive
should
Get
Long
With
End
Of
Range
Exclusive
integer
Number
Provider
long
Number
Provider
should
Create
Range
Index
On
Timestamp
For
Integer
Key
And
Avro
Value
should
Create
Range
Index
On
Timestamp
For
Long
Key
And
Protobuf
Value
should
Create
Range
Index
On
Key
And
String
And
Exclusive
should
Create
Range
Index
On
Nullable
Field
With
Key
And
String
And
Is
Exclusive
integer
Key
Avro
Value
And
Range
Index
Provider
long
Key
Protobuf
Value
And
Range
Index
Provider
should
Return
Values
For
Key
should
Return
Values
For
Keys
should
Return
Values
should
Return
List
Values
should
Return
Values
For
Range
query
Service
keys
values
output
Record
new
Proto
Record
setup
teardown
should
Receive
Correct
Partition
Host
From
Mirror
Application
send
Values
To
Kafka
topic
Type
Service
set
Up
App
setup
teardown
should
Receive
Correct
Value
From
Mirror
Application
With
Point
Index
send
Values
To
Kafka
set
Up
App
topic
Type
Service
get
Strategies
create
Topology
apply
Topologies
is
Applicable
create
is
Applicable
create
extend
Topology
is
Applicable
create
extend
Topology
create
Store
is
Applicable
create
get
Range
Indexer
get
get
List
get
All
get
Range
is
Enabled
get
set
Mirror
Context
get
set
Mirror
Context
is
Enabled
get
Value
Schema
get
Key
Serde
get
Value
Serde
get
Field
Type
Extractor
get
Field
Value
Extractor
get
Field
Type
Extractor
get
Field
Value
Extractor
get
Field
Type
Extractor
get
Field
Value
Extractor
extract
extract
extract
extract
get
Avro
Field
Type
extract
extract
init
process
create
create
Index
create
Index
create
Range
Index
Format
create
create
Index
create
pad
Zero
get
Padder
Class
get
End
Of
Range
pad
Zero
get
Padder
Class
get
End
Of
Range
pad
Zero
get
Padder
Class
get
End
Of
Range
main
build
Topology
create
Topology
build
Topology
Context
get
Unique
App
Id
start
With
Web
Server
add
Kafka
Config
To
Args
execute
run
Streams
Application
create
Kafka
Properties
close
Resources
get
Topology
Data
clean
Up
Run
init
process
get
Application
Hosts
get
Addresses
For
Partitions
distinct
By
Key
get
Address
consume
get
Index
Input
Stream
repartition
On
Range
Key
create
Repartitioned
Key
Data
get
Repartitioned
Stream
get
Range
Key
Value
get
get
Values
get
All
get
Range
initialize
Query
Service
For
Range
fetch
fetch
Range
get
Key
Query
Metadata
get
Read
Only
Key
Value
Store
get
Default
Mirror
Client
query
Range
Store
transform
Values
And
Create
Http
Response
get
get
Values
get
All
get
Range
init
process
punctuate
to
Info
to
Connection
String
