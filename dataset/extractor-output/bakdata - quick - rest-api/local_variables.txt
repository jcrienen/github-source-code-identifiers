properties
managerConfig
specConfig
properties
specConfig
properties
specConfig
properties
specConfig
properties
specConfig
jobCleaner
resources
deletionJob
finalJob
jobList
items
jobCleaner
jobCleaner
resources
deletionJob
jobCleaner
resources
deletionJob
runningJob
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
registryClient
subject
topicDataSchema
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
mirrorCreationData
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
event
topicName
kafkaConfig
registryConfig
topicRegistryInitializer
startupEvent
gatewayClient
loader
gatewayService
newDeploymentConfig
imageUpdater
gatewayClient
loader
gatewayService
newDeploymentConfig
imageUpdater
gatewayClient
loader
gatewayService
newDeploymentConfig
imageUpdater
loader
mirrorService
mirrorCreationData
newDeploymentConfig
imageUpdater
loader
mirrorService
mirrorCreationData1
mirrorCreationData2
newDeploymentConfig
imageUpdater
loader
mirrorService
mirrorCreationData
newDeploymentConfig
imageUpdater
parsedSchema
parsedSchema
parsedSchema
expectedTypeForField
parsedSchema
parsedSchema
graphQLSchema
parsedSchema
file
file
file
file
file
graphQLSchema
protobufSchema
topic
creationData
uri
creationData
topicName
topicService
requestData
completable
topicName
topicService
requestData
exception
expectedErrorMsg
topicName
topicService
requestData
exception
expectedErrorMsg
topicName
topicService
requestData
completable
expectedTopicData
topicName
topicService
requestData
throwable
topicName
topicService
requestData
completable
expected
topicName
topicService
requestData
throwable
topicName
topicService
requestData
completable
schemaRegistryClient
subject
expectedSchema
topicName
topicService
requestData
completable
schemaRegistryClient
subject
expectedSchema
topicName
topicService
retentionTime
mirrorArguments
requestData
completable
mirrorCreationData
topicName
topicService
requestData
completable
topicService
numberOfTopics
requestData
i
topicName
allTopics
topicName
topicService
error
clientException
requestData
completable
actual
loader
gatewayDescriptionList
gatewayDescription
items
deployment
deploymentSpec
podSpec
services
ingresses
middlewares
configMaps
file
configMaps
graphQLSchema
configMaps
replicas
items
deployment
deploymentSpec
name
expectedName
customTag
items
deployment
creationData
firstDeployment
invalidDeployment
creationData
throwable
creationData
uri
schema
schemaData
gatewayDescription
uri
graphqlSchema
workingDirectory
avroSchema
schemaData
gatewayDescription
uri
retrievedAvroSchema
gatewayCreationData
gatewayResources
hasMetadata
deploymentName
labels
selectors
annotations
podSpec
gatewayCreationData
gatewayResources
hasMetadata
deploymentName
labels
selectors
serviceSpec
gatewayCreationData
gatewayResources
hasMetadata
expected
ingressSpec
host
ingressEntrypoint
useSsl
gatewayCreationData
customConfig
customLoader
gatewayResources
hasMetadata
expected
ingressSpec
gatewayCreationData
gatewayResources
hasMetadata
gatewayCreationData
gatewayResources
hasMetadata
gatewayCreationData
gatewayResources
hasMetadata
expected
expected
result
applicationCreationData
completable
completable
getAppInfoUri
expected
applicationCreationData
deletionUri
loader
items
deployment
services
services
deleteRequest
deleteRequest
imageConfig
deleteRequest
applicationCreationData
firstDeployment
invalidDeployment
applicationCreationData
completable
imageConfig
applicationResources
hasMetadata
labels
deploymentSpec
podSpec
applicationResources
hasMetadata
podSpec
applicationResources
hasMetadata
deploymentSpec
applicationResources
hasMetadata
deploymentSpec
applicationResources
hasMetadata
containers
applicationResources
hasMetadata
applicationResources
hasMetadata
applicationResources
hasMetadata
serviceSelector
resource
applicationResources
hasMetadata
appContainer
resource
applicationResources
hasMetadata
imagePullSecrets
imagePullSecret
appCreationData
mirrorCreationData
mirrorCreationData
deletionUri
imageConfig
mirrorArguments
mirrorCreationData
mirrorResources
hasMetadata
labels
selectors
annotations
deploymentSpec
podSpec
topicName
name
mirrorCreationData
mirrorResources
hasMetadata
deploymentName
deploymentSpec
podSpec
customTag
mirrorCreationData
mirrorResources
hasMetadata
podSpec
mirrorCreationData
mirrorResources
hasMetadata
deploymentSpec
retentionTime
mirrorArguments
mirrorCreationData
mirrorResources
hasMetadata
podSpec
rangeField
mirrorArguments
mirrorCreationData
mirrorResources
hasMetadata
podSpec
rangeKey
rangeField
mirrorArguments
mirrorCreationData
mirrorResources
hasMetadata
podSpec
retentionTime
rangeField
mirrorArguments
mirrorCreationData
mirrorArguments
mirrorCreationData
mirrorCreationData
mirrorResources
hasMetadata
labels
selectors
serviceSpec
topicName
name
mirrorCreationData
mirrorResources
hasMetadata
deploymentName
serviceSpec
loader
mirrorCreationData
deployments
services
mirrorCreationData
items
deployment
mirrorCreationData
services
mirrorCreationData
deleteRequest
mirrorCreationData
deleteRequest
mirrorCreationData
deleteRequest
mirrorCreationData
firstDeployment
invalidDeployment
completable
httpClient
request
exception
status
status
httpClient
request
exception
httpClient
request
exception
resolver
objectMeta
namedResource
errorMessage
root
jobName
yaml
labelsToDelete
properties
registryExists
immutableTopic
subject
topicDataSchema
topicRegistryCreationData
managedDeployments
deploymentsToUpdate
tagAnnotationValue
name
containers
image
baseImage
updatedImage
resourceList
resourceList
resourcesMetadata
resourcesName
resourceName
deployment
configMap
listDeployment
resources
resourceList
reason
resourceName
errorMessage
k8sEx
errorMessage
reason
descriptor
rootType
file
fileDescriptor
currentMessage
index
graphQLFieldDefinition
graphQLType
label
unwrappedType
scalarFieldBuilder
protoType
message
enumDescriptor
unspecifiedField
values
wrappedType
unwrappedType
schemaParser
extendedSchema
typeDefinitionRegistry
rootTypeName
runtimeWiring
schemaGenerator
graphQLSchema
schema
rootType
fields
name
type
description
schema
unionTypeSchemas
wrappedSchema
values
fields
name
description
type
message
kafkaStateCheck
keySchema
valueSchema
schemaRegistryCheck
stateCheck
kafkaTopicCreation
mirrorCreation
writeType
topicRegister
graphQLSchema
topicData
keyRegister
valueRegister
creationOperations
errorMessage
partitions
replicationFactor
newTopic
mirrorCreationData
subject
graphQLSchema
parsedSchema
deploymentName
resourceExists
updateSchema
updateConfigMap
gatewaySchema
exists
logAccess
fetchSchema
schema
imageTag
imageReplicas
dockerRegistry
imageConfig
gatewayName
resourceName
hasFixedTag
deployment
service
ingress
middleware
configMap
resourceName
deployment
service
ingress
middleware
configMap
root
root
root
root
root
reformattedSchema
gatewayDeploymentName
gatewayName
gatewayReplicas
image
tag
clientResponseException
errorMessage
replicas
config
applicationName
deploymentName
arguments
listArgs
deployment
service
deployment
service
root
root
deploymentName
deployment
resourceDeletion
applicationResources
kafkaCleanUp
container
annotation
deploymentName
imageConfig
deployment
apiKey
kafkaCleanUp
resourceDeletion
mirrorName
deploymentName
imageTag
imageReplicas
config
hasFixedTag
arguments
deployment
service
deployment
service
root
root
builder
retentionTime
rangeField
rangeKey
errorMessage
errorMessage
stringInfo
record
stringInfo
record
stringInfo
record
pair
response
pair
response
keyString
response
key
response
jsonWithNoKeyValueField
expectedErrorMessage
httpClient
request
invalidJsonRecord
expectedErrorMessage
httpClient
request
pair
expectedErrorMessage
httpClient
request
httpClient
request
kafkaConfig
kafkaIngestService
topic
record
throwable
kafkaConfig
kafkaIngestService
topic
record
transactionalBuilder
keyValues
throwable
httpClient
request
exception
httpStatus
httpClient
request
exception
httpStatus
httpClient
request
exception
pair
stringInfo
topicInfo
topicInformation
topicInformation
topicInformation
existingKeys
errorMessage
list
existingError
ingest
topicInformation
pairs
topicInformation
keySerializer
valueSerializer
producer
futures
producerRecord
metadataFuture
mirrorHost
mirrorValueParser
mirrorClient
keyExists
partitions
existing
toIngest
type
keyData
jsonNode
pairs
elements
jsonNode
pairs
elements
key
value
parsedKey
parsedValue
message
errorMessage
errorMessage
stringValue
keySerde
valueSerde
keyResolver
valueResolver
quickData
valueInfo
topicInfo
schemaConfig
kafkaConfig
properties
schemaConfig
properties
schemaConfig
env
schemaConfig
env
schemaConfig
env
schemaConfig
properties
config
properties
config
properties
config
properties
config
properties
config
properties
config
avroConfig
properties
config
env
config
env
config
typeService
quickData
valueData
typeService
quickData
keyData
kafkaConfig
schemaConfig
schemaFetcher
conversionProvider
schemaProvider
schemaProvider
schemaFetcher
schema
schemaFetcher
protobufSchema
schema
schemaFetcher
internalTopic
schema
schemaFetcher
valueSchema
resolver
genericRecord
record
descriptor
resolver
genericRecord
idField
valueField
exepected
typeResolver
knownTypeRecord
data
data
mockRequest
mockRequest
multiReplica
body
key
key2
serializedKey1
serializedKey2
serviceName
streamsStateHost
response
partitionRouter
host1
host2
singleReplica
body
response
serviceName
streamsStateHost
partitionRouter
allHosts
multiReplica
updateValue
updateResponse
updatedHosts
response
serviceName
streamsStateHost
partitionRouter
topicData
httpUrl
response
topic
topicData
topicData2
httpUrl
response
topic
topicData
topicData2
httpUrl
response
topic
topicData
httpUrl
response
exists
httpUrl
response
singleReplicaMirrorWithTwoPartitions
firstPartition
secondPartition
httpUrl
response
value1
secondKeyUrl
fallbackResponse
value2
multiReplicaMirror
firstMirrorValues
secondMirrorValues
response
allValues
multiReplicaMirror
queriedKeys
firstMirrorValues
secondMirrorValues
firstReplica
secondReplica
urlForFirstMirror
response
urlForSecondMirror
fallbackResponse
allValues
singleReplicaMirrorWithTwoPartitions
firstPartitions
secondPartition
queriedKeys
url
fallbackResponse
allValues
singleReplica
rangeUrl
fallbackResponse
values
allValues
mirrorHost
streamsStateHost
actual
url
expected
mirrorHost
streamsStateHost
actual
expected
mirrorHost
actual
url
expected
mirrorHost
actual
url
expected
mirrorHost
actual
url
expected
mirrorHost
actual
url
expected
firstMirrorHost
secondMirrorHost
mirrorHost
mirrorHost
actual
url
expected
unreachableMirror
failedRequest
reachableMirror
mirrorUrlFromRequest
unreachableMirror
failedRequest
reachableMirror
mirrorUrlFromRequest
unreachableMirror
failedRequest
reachableMirror
mirrorUrlFromRequest
error
message
i
errorMessage
body
jsonError
errorMessage
detail
error
error
errorMessage
body
errorMessage
detail
messageBuilder
errorMessage
body
rootCause
errorMessage
errorMessage
listArgs
key
schemaConfig
schemaConfig
schema
descriptor
configs
keyType
valueType
keySerde
valueSerde
topic
keyData
valueData
valueResolver
cf
disposable
protoModule
json
avroModule
objectMapper
json
leftDefinitions
rightDefinitions
leftDefinitions
rightDefinitions
objectFiledCount
skippableTypes
types
typeName
typeDefinition
objectTypeDefinition
fieldDefinitions
objectTypesAsFieldsCount
build
subjectSchemaProvider
schema
builder
header
matchingToken
serializedKey
partition
updatedPartitionHostInfo
distinctHosts
url
partitionHostMappingResponse
request
request
body
httpStatus
message
host
currentKeyHost
response
knownHosts
valuesFromAllHosts
response
valuesFromSingleHost
valuesFromAllHosts
mirrorHostKeyMap
stringKeys
url
response
valuesFromSingleHost
currentKeyHost
url
response
mirrorHostKeyMap
mirrorHost
body
body
body
errorMessage
mirrorHostUrl
url
builder
topicData
typeResolver
mirrorHost
mirrorValueParser
request
response
response
response
collect
response
response
mirrorConfig
host
httpUrl
stringUrl
httpUrl
httpUrl
ids
httpUrl
httpUrl
httpUrl
that
mirrorHost
requestManager
valueTypeResolver
mirrorValueParser
jsonNode
value
jsonNode
valueNode
collect
stringValue
mirrorHost
requestManager
streamsStateHost
keySerde
partitionRouter
valueTypeResolver
mirrorHost
requestManager
streamsStateHost
partitionRouter
request
response
newUrl
fallbackRequest
fallbackResponse
errorMessage
errorMessage
schemaPath
expectedProduct
expectedPurchase
productRequest
productResponse
purchaseRequest
purchaseResponse
request
blockingHttpClient
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
productId
purchase
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
userRequests
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
purchaseClient
productClient
productId
purchase1
product1
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
purchaseClient
productClient
productId1
productId2
purchases
product1
product2
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
executionResult
data
name
schemaPath
queryPath
testClientSupplier
graphQL
dataFetcherClient
purchase
executionResult
kafkaConfig
topicTypeService
conversionProvider
fetcherFactory
topicDirectiveWiring
graphQLSchemaGenerator
schema
values
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
values
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
values
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
product1
product2
purchaseList
partitionedMirrorClient
fetcherClient
queryFetcher
arguments
env
actual
productId1
productId2
productIds
purchase
product1
product2
products
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
productId1
productId2
productIds
purchase
product1
product2
products
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
purchase
product1
product2
products
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
result
productJson
fetcher
env
obj
recordedRequest
result
productJson
pathArguments
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
fetcher
env
obj
result
productJson
pathArguments
queryArguments
fetcher
id
env
obj
result
productJson
fetcher
parameter
env
obj
fetcher
env
obj
fetcher
env
fetcher
env
fetcher
parameter
env
result
productJson
fetcher
env
obj
recordedRequest
result
productJson
fetcher
body
env
obj
recordedRequest
receivedBody
field1Client
field2Client
field1Subscriber
field2Subscriber
fieldClients
fieldSubscribers
selectedFields
fetcher
mapPublisher
testSubscriber
field1Client
field2Client
field1Subscriber
field2Subscriber
fieldClients
fieldSubscribers
selectedFields
fetcher
mapPublisher
testSubscriber
key1clickStats
key1purchaseStats
key2clickStats
key2purchaseStats
clickStatsClient
purchaseStatsClient
clickStatsProvider
purchaseStatsProvider
fieldClients
fieldSubscribers
selectedFields
fetcher
mapPublisher
testSubscriber
expected
expected2
key1clickStats
key1purchaseStats
key2clickStats
key2purchaseStats
clickStatsClient
purchaseStatsClient
clickStatsProvider
purchaseStatsProvider
fieldClients
fieldSubscribers
selectedFields
fetcher
mapPublisher
testSubscriber
info
kafkaConfig
sendRequest
subscriptionFetcher
publisher
testSubscriber
test2Subscriber
info
kafkaConfig
sendRequest
argumentName
subscriptionFetcher
fetchingEnvironment
publisher
testSubscriber
product1
product2
userRequests
partitionedMirrorClient
fetcherClient
rangeQueryFetcher
arguments
env
actual
partitionedMirrorClient
fetcherClient
rangeQueryFetcher
arguments
env
actual
topic
valueInfo
info
kafkaConfig
kafkaIngestService
mutationFetcher
keyValue
env
actual
consumedRecords
topic
keyInfo
info
kafkaConfig
typeService
kafkaIngestService
mutationFetcher
keyValue
env
actual
consumedRecords
value
partitionedMirrorClient
fetcherClient
queryFetcher
arguments
env
fetcherResult
value
partitionedMirrorClient
fetcherClient
queryFetcher
arguments
env
fetcherResult
value
partitionedMirrorClient
fetcherClient
queryFetcher
arguments
env
fetcherResult
value
partitionedMirrorClient
fetcherClient
queryFetcher
arguments
env
fetcherResult
product
partitionedMirrorClient
fetcherClient
queryFetcher
arguments
env
fetcherResult
product1
product2
productList
partitionedMirrorClient
fetcherClient
listArgumentFetcher
arguments
env
actual
idList
partitionedMirrorClient
fetcherClient
listArgumentFetcher
arguments
env
actual
purchase1
product
idList
itemList
partitionedMirrorClient
fetcherClient
listArgumentFetcher
arguments
env
actual
expected
purchase
product
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
productId
purchase
product
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
productId
purchase
product
partitionedMirrorClient
fetcherClient
queryFetcher
env
fetcherResult
name
schemaString
registry
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
graphQLSchema
restDataFetcher
name
schemaString
registry
request
httpClient
client
request
graphQLWsResponse
objectMapper
ex
response
client
request
payload
graphQLWsResponse
schemaPath
schema
purchaseFields
fieldDefinition
nonNonNullIdField
listField
rootDataFetcher
schemaPath
schema
purchaseFields
fieldDefinition
nonNonNullIdField
listField
rootDataFetcher
schemaPath
schema
fieldDefinition
rootDataFetcher
modificationFetcher
schemaPath
schema
fieldDefinition
rootDataFetcher
modificationFetcher
schemaPath
schema
fieldDefinition
rootDataFetcher
schemaPath
schema
topicDirectiveArguments
schemaPath
schema
fieldDefinition
rootDataFetcher
schemaPath
schema
fieldDefinition
rootDataFetcher
schemaPath
schema
fieldDefinition
urlFetcher
productFetcher
schemaPath
schema
fieldFetcher
schemaPath
schema
rootDataFetcher
policyHolderFetcher
schemaPath
schema
fieldDefinition
rootDataFetcher
schemaPath
schema
fieldDefinition
rootDataFetcher
schemaPath
schema
mutationFieldDefinition
rootDataFetcher
schemaPath
schema
fileName
sourceFile
tempFile
expected
gatewayConfig
gatewayInitializer
tempFile
gatewayConfig
gatewayInitializer
gatewayConfig
gatewayInitializer
httpRequest
blockingHttpClient
httpRequest
blockingHttpClient
response
response
properties
config
modificationField
client
client
httpClient
request
exception
httpClient
request
builder
baseRegistry
userRegistry
argumentValue
value
selectedFields
combinedElementsStream
record
complexType
fieldKeysToPopulate
fieldValues
key
recordValue
client
fluxes
kafkaSubscriber
elementStream
fetchingProps
topic
options
recordFlux
requestedKeyValue
consumerRecordFlux
hotPublisher
updatedSubscriber
updatedSubscriber
topicData
client
client
client
quickTopicType
keySerde
topicData
client
data
topicData
topicData
urlBuilder
pathValue
queryValue
requestBuilder
request
body
builder
message
argumentValue
queryValue
keyArguments
parentJson
node
record
source
value
arguments
results
stringArgument
keys
genericRecord
errorMessage
message
fieldDescriptor
source
keys
argumentValue
rangeFromValue
rangeToValue
results
values
keyInputArgument
valueInputArgument
rawObject
value
resolvedValue
keyValuePair
throwable
localContext
dataFetcher
coordinates
objectTypeDefinition
fieldsWithParentType
specifications
dataFetcher
coordinates
typeName
dataFetcher
coordinates
graphQLSchemaElement
arguments
graphQLKeyArgument
errorMessage
dataFetcher
coordinates
keyField
type
dataFetcher
coordinates
errorMessage
parentInfo
element
definition
field
errorMessage
specifications
keyInputArgument
valueInputArgument
topicName
dataFetcher
coordinates
arguments
specifications
dataFetcher
coordinates
specifications
dataFetcher
coordinates
codeRegistry
error
inputNameAndKeyArgsMatch
keyArg
queryTypeDef
keyArg
topicName
keyArgument
keyField
rangeFrom
rangeTo
directive
context
restDirective
duplicates
errorMessage
bodyParameter
graphQLArgument
unwrappedType
duplicateParameters
uniqueParameters
parameters
fieldNames
fieldDefinition
arguments
argumentMap
userArguments
pathParams
queryParams
bodyParameter
nullable
isUsedElsewhere
url
pathParameter
queryParameter
bodyParameter
method
fetchers
codeRegistry
objectType
dataFetchers
subscriptionProviders
arguments
topicDirective
dataFetcherClient
subscriptionProvider
multiSubscriptionFetcher
coordinates
topicInformation
pairs
topicInformation
keySerializer
valueSerializer
producer
futures
producerRecord
metadataFuture
builder
workQueue
printedTypes
type
unwrapped
printType
objectType
nonAnnotatedFields
dataObject
errorObject
subscriber
response
request
pos
filter
payload
responseBody
response
sessionId
operationId
removed
payload
invocationData
httpRequest
executionResult
responseBody
gatewayConfigPath
schema
errorMessage
graphQLType
schema
builder
source
fieldByName
builder
valueDefinition
pointTopology
mirrorContext
rangeTopology
mirrorContext
retentionTopology
mirrorContext
data
topologyInfo
topic
data
topologyInfo
streamsBuilder
schemaConfig
kafkaConfig
conversionProvider
extractorResolver
indexInputStreamBuilder
indexTopologyData
mirrorContext
store
store
store
avroRecord
avroExtractor
protoMessage
protoExtractor
avroRecord
avroExtractor
errorMessage
protoMessage
protoExtractor
errorMessage
testTopology
avroRecord1
avroRecord2
avroRecord3
avroRecord4
store
testTopology
avroRecord1
avroRecord2
avroRecord3
avroRecord4
store
testTopology
avroRecord1
avroRecord2
avroRecord3
avroRecord4
store
from
to
range
testTopology
avroRecord1
avroRecord2
avroRecord3
avroRecord4
store
testTopology
protoRecord1
protoRecord2
protoRecord3
protoRecord4
store
testTopology
protoRecord1
protoRecord2
protoRecord3
protoRecord4
store
testTopology
protoRecord1
protoRecord2
protoRecord3
protoRecord4
store
from
to
range
testTopology
avroRecord1
avroRecord2
avroRecord3
avroRecord4
store
pointStore
expected
testTopology
protoRecord1
protoRecord2
protoRecord3
protoRecord4
rangeStore
pointStore
actual
topic
data
topologyInfo
schemaConfig
kafkaConfig
conversionProvider
indexInputStreamBuilder
streamsBuilder
indexInputStream
mirrorContext
fieldDescriptor
app
runThread
port
expectedBody
avroRecord1
avroRecord2
avroRecord3
keyValueList
sendRequest
kafkaConfig
schemaConfig
defaultConversionProvider
app
app
runThread
avroRecord
avroRecord2
avroRecord3
mirrorValue
expectedValue
items
expected
avroRecord1
avroRecord2
avroRecord3
keyValueList
sendRequest
kafkaConfig
schemaConfig
defaultConversionProvider
app
app
runThread
avroRecord
avroRecord2
avroRecord3
items
expected
avroRecord1
avroRecord2
avroRecord3
keyValueList
sendRequest
kafkaConfig
schemaConfig
defaultConversionProvider
app
integerZeroPadder
longZeroPadder
integerZeroPadder
integerZeroPadder
longZeroPadder
longZeroPadder
defaultRangeIndexer
defaultRangeIndexer
avroRecord
stringValueRangeIndexer
avroRecord
stringValueRangeIndexer
avroRecord
protoMessage
expected
expected
expected
item
expected
avroRecord
avroRecord2
avroRecord3
items
expected
record
app
runThread
port
expectedBody
keyValueList
sendRequest
kafkaConfig
schemaConfig
defaultConversionProvider
app
app
runThread
mirrorValue
expectedValue
allMirrorValues
expectedFetchAll
mirrorValueList
expectedList
keyValueList
sendRequest
kafkaConfig
schemaConfig
defaultConversionProvider
app
topologyStrategies
topologyStrategies
topology
topology
streamsBuilder
keySerDe
valueSerDe
storeName
storeType
retentionTimeProperties
rangeIndexProperties
builder
retentionTimeProperties
retentionStoreName
retentionStore
keySerde
valueSerde
storeName
millisRetentionTime
keySerde
streamsBuilder
keySerde
valueSerDe
rangeStoreName
storeType
rangeIndexer
parsedSchema
rangeField
fieldTypeExtractor
fieldValueExtractor
record
rangeFieldValue
errorMessage
message
fieldDescriptor
errorMessage
fieldValue
avroSchema
fieldType
type
field
errorMessage
fieldSchema
fieldTypes
intLongSchemaType
protobufSchema
descriptor
fieldDescriptor
errorMessage
fieldType
type
key
value
rangeIndex
topicType
zeroPadder
number
paddedValue
topicType
zeroPadder
number
paddedValue
longNumber
intNumber
topologyData
streamsBuilder
topicName
indexInputStream
mirrorContext
allArgs
exitCode
kafkaConfig
allArgs
mirrorContext
mirrorContextWithStream
properties
inputTopic
topicDataFuture
topicData
message
key
value
mirrorContext
partitionToHost
seen
topicData
keyData
keySerde
valueData
valueSerde
inputStream
parsedSchema
quickTopicType
repartitionedKeyData
repartitionedStream
repartitionedKeySerde
typeResolver
rangeKeySerde
valueSerde
classType
fieldValueExtractor
key
metadata
store
value
store
key
rangeStoreName
metadata
rangeStore
values
rangeStoreName
fieldTypeExtractor
parsedSchema
mirrorClient
value
mirrorClient
value
metadata
rangeStore
errorMessage
host
mirrorHost
mirrorValueParser
fromIndex
toIndex
values
headerSet
values
responseWithoutHeader
punctuator
key
value
to
