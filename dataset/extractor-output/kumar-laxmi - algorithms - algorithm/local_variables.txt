len
rotations
sb
i
counts
sortedChars
i
firstColumn
count
j
index
originalString
k
c
scanner
inputString
bwtResult
inverseBwtResult
storage
compressed_data
current_symbol
index
previous_index
storage
decompressed_data
index
phrase
message
compressed_message
decompressed_message
queue
i
left
right
parent
root
codes
frequencies
characters
codes
nums1
nums2
currSum
maxSum
flag
maxNum
k
i
a
b
i
max
min
arr
arr_size
arr
x
count
element
index1
index2
i
kickIndex
kickedKey
index1
index2
i
scanner
numKeys
i
key
keyToSearch
i
index
i
index
hashValue
bytes
filter
intValue
stringValue
include
exclude
sum
sc
n
nums
i
sc
test
p
q
s1
s2
lcss
lcs
dp
i
j
jump
i
j
array
memo
i
scanner
n
fib
i
j
i
j
n
sum
sc
coins
i
X
Y
m
n
i
cities
sc
distance
i
j
visitCity
hamiltonianCycle
nextCity
i
j
sum1
i
t1
t2
dp
i
j
x
y
x
sc
n
a
i
b
n
m
i
length
i
j
k
cost
dimensions
result
totalItems
maximumValue
pick
notPick
pick
notPick
totalItems
dp
currentItem
currentCapacity
pick
notPick
totalItems
prev
currentItem
curr
currentCapacity
pick
notPick
values
weights
capacity
maximumValue
n
i
result
j
i
scanner
message
morseCode
i
ch
scanner
text
morseCode
p
g
privateKey
publicKey
scanner
message
cipher
decryptedMessage
g
range
result
groupOrder
power
messageBytes
cipher
k
r
m
decryptedMessage
i
r
m
s
originalMessage
result
character
encrypt
k
i
j
pt
encrypt
k
i
j
remainder
gcd
quotient
temp
scanner
action
inputStr
hashResult
inputStr
originalHash
verifyResult
digest
hash
hexString
hex
preparedString
len
i
ch
visited
row
col
len
i
ch
i
ch
len
preparedString
i
ch
digraphPlainText
digraphCount
digraphs
i
j
i
j
cipherText
row1
col1
row2
col2
ch1
ch2
coordinates1
coordinates2
temp
scanner
key
plainText
preparedKey
preparedPlainText
table
digraphs
cipherText
sc
choice
message
shift
encryptedMessage
message
shift
decryptedMessage
chars
i
ch
chars
i
ch
i
row
col
j
cipher
matrix
i
k
i
col
row
cipherMat
k
j
i
index
decCipher
l
j
i
msg
i
j1
msg
cipher
decryptedMessage
sc
text
length
alphabet
key
i
key_index
alphabet
texts
encrypted
i
ascii
text_number
key_number
encrypt_number
alphabet
decrypted
i
ascii
text_number
key_number
encrypt_number
temp
sc
text
key
text_message
lenChk
text2D
itr1
itr2
i
key2D
itr3
i
j
deter
mulInverse
encryptText
itrCount
i
temp1
temp2
i
temp1
temp2
lenChk
encryptText2D
itr1
itr2
i
key2D
itr3
i
j
deter
mulInverse
swapTemp
i
j
i
j
decryptText
itrCount
i
temp1
temp2
i
temp1
temp2
decrypted
i
result
mulInverse
i
tempInv
sc
text
keyword
i
alphabet
texts
keywords
encrypted
i
ascii
text_number
key_number
encrypt_number
alphabet
decrypted
i
ascii
text_number
key_number
encrypt_number
temp
sc
text
key
encrypted_text
direction
column
j
a
i
i
k
decrypted_text
direction
column
j
a
i
index
i
k
i
sc
plainText
ciphertext
decryptedText
ciphertext
i
t
alphaVal
c
changedChar
plaintext
inverseA
i
c
alphaVal
decipherT
changedChar
bigA
bigM
s
rows
cols
mat
i
j
rowStart
colStart
rowEnd
colEnd
col
row
col
row
n
rand
i
j
temp
scanner
size
numbers
i
sc
k
l
k
l
Main
isMonotonic
n
s
e
main
scanner
n
nums
i
element
toh
num_disks
ch
i
f
s
row
col
path
temp_row
temp_col
point
closedList
cellDetails
i
j
i
j
openList
foundDest
movesRow
movesCol
p
f
current
k
new_i
new_j
gNew
hNew
fNew
grid
src
dest
SIZE
P
convertToNewString
newString
i
longestPalindromeSubstring
Q
c
r
i
iMirror
maxPalindrome
centerIndex
i
main
scanner
s
sc
test
str
m
x1
x2
s1
s2
i
flag
n
ch
camelCase
i
inp
testCase
i
str
scanner
p
n
process
memory
memoryBestFit
i
i
i
temp
outputBestFit
i
j
i
scanner
p
n
process
memory
temp
i
i
outputWorstFit
i
j
i
scanner
p
n
process
memory
memoryNextFit
i
i
outputNextFit
i
j
i
i
x1
x2
i
i
r1
r2
cognitiveVelocity
socialVelocity
i
initialFitness
globalBestFitness
globalBestPosition
swarmParticles
i
iter
currentAnswer
currentValue
i
neighbor
neighborValue
lpsArray
len
i
i
j
tst
pat
s
i
states
i
word
currentState
j
ch
ch
q
ch
state
ch
failure
answer
ch
currentState
i
j
arr
text
k
MAXS
MAXC
concat
k
a
i
n
l
r
i
m
sc
s
pattern
sizep
sizet
p
t
h
i
i
check
i
j
sc
pattern
txt
q
occurrences
textLength
patternLength
shiftTable
i
i
i
j
shift
text
pattern
occurrences
arr
temp
s
choice
sc
element
sc
size
arr
i
s
nxtGre
i
j
s
max_a
t
area_with_top
i
hist
stack
n
ans
i
pop_height
distance
min_height
arr
maxSum
maxSumCurrIdx
i
s
n
ar
i
other
val
maxDist
maxDistPoint
currSide
dist
hull
minPoint
maxPoint
points
convexHull
d
sum
r
input
number
length
sum
n
points
result
counter
i
scanner
choice
segments
numSegments
i
left
right
unionLength
scan
num
pow
currentTerm
series
i
i
scanner
n
scanner
x1
y1
x2
y2
distance
val
p1
q1
p2
q2
o1
o2
o3
o4
index
index
checked
eve
i
s
ans
i
curr
index
next
prev
flag
s1
s1
it
next
prev
s1
s2
sc
choice
n
arr
i
leftX
leftY
rightX
rightY
sc
base
power
modulo
result
x
j
num
rem
sc
n
i
i
k
phi
a
b
c
i
scan
n
copy
i
first
i
j
i
i
j
k
i
j
sc
ch
x
y
sc
n
relation
x
rn
sx
sy
x
y
x
y
no
could
mat
n
scanner
i
j
people
i
index
i
scanner
n
k
lastPerson
scan
num
res
i
s1
s2
sc
str
result
sc
c
decimalNumber
binaryNumber
binary
decimalNum
binary
remainder
decimal
power
i
digit
factn
i
sc
x
n
nf
arr
i
ncr
i
c
a
b
k
outputFormat
result
result
i
numerator
denominator
result
i
j
random
x
i
y
z
i
scanner
matrix
i
j
scanner
A
B
C
sc
N
i
sum
n
factorial
sum
in
copy
rem
i
s1
s2
s3
area
S
sc
scanner
numElements
originalSet
i
uniqueSet
n
numSubsets
powerSet
i
subset
j
a1
b1
c1
a2
b2
c2
x1
x2
y1
y2
a3
m
b3
a4
n
b4
sc
number
modulo
gcd
res
gcd
temp
a1
b1
c1
a2
b2
c2
a3
m
b3
a4
n
b4
m1
a5
m2
m3
a6
m4
m5
m6
a7
m7
m8
a8
a9
b5
a10
b6
compValue
val1
val2
scan
a
b
c
result
c
scanner
n
i
c
c
coeff
strNum
reversed
scanner
number
reversedNumber
sc
n
primes
i
j
i
q
m
k
j
h
i
m
flag
n
sc
n
arr
i
start
last
Quartile1
Quartile2
Quartile3
mid
a
b
x
y
ans
d
i
n
sum
isSecondDigit
i
digit
scanner
number
res
sc
a
b
curr
start
nextCurr
pg
rem
curr
sc
cache
newNode
tail
temp
ptr1
ptr2
scanner
head1
head2
n1
i
data
n2
i
data
pos
temp
i
tail2
intersection
a
list
p
c
next
ob
Complexity
reversing
linked
is
newNode
newNode
current
i
newNode
current
current
sc
list
choice
data
position
current
prev
i
current
prev
dummy
current
carry
sum
digit
prev
current
next
dummy
prev
scanner
input
i
val
scanner
exit
choice
n1
head1
n2
head2
result
result
slow
fast
halves
halves
left
right
listSize
dummy
blockSize
current
tail
left
right
merged
current
i
remaining
size
current
newNode
current
headTopDown
headBottomUp
count
current
head
input
n
prev
i
current
length
newnode
ptr
ptr
slow
fast
curr
prev
nxt
llist
n
sc
node
i
trav
next
temp
temp
temp
trav
i
trav
index
trav
str
trav
doubleLinkedList
dummy
tail
mid
l1
l2
pq
dummy
tail
node
interval
i
list1
list2
list3
lists1
mergedListDC
list4
list5
list6
lists2
mergedListPQ
list7
list8
list9
lists3
mergedListIterative
newNode
currentNode
curr
lastNode
prevNode
currentNode
currentNode
circularList
scanner
n
i
data
deleteData
oldValue
newValue
temp
curr
curr
prevFirst
isFirstPass
first
prev
count
next
curr
head
n
val
k
scanner
i
temp
dummy
current
scanner
head1
head2
current
input
newNode
input
newNode
mergedhead
image
grayImage
smoothedImage
gradientImage
suppressedImage
edgesImage
output
grayImage
y
x
color
gray
width
height
smoothedImage
gaussianKernel
y
x
sum
j
i
pixelX
pixelY
color
gray
smoothedGray
kernel
sum
j
i
x
y
j
i
width
height
gradientImage
sobelX
sobelY
y
x
gradientX
gradientY
j
i
pixelX
pixelY
color
gray
gradientMagnitude
width
height
suppressedImage
y
x
gradientMagnitude
angle
neighbor1
neighbor2
width
height
edgesImage
lowThreshold
highThreshold
y
x
gray
isStrongNeighbor
j
i
neighborGray
sobelX
gx
j
i
pixelX
pixelY
gray
sobelY
gy
j
i
pixelX
pixelY
gray
xMeans
yMean
numerators
denominators
i
j
sum
means
i
sum
result
i
x
y
regression
newX
predictedY
iterations
h
cost
gradient
i
m
n
X
y
theta
y_pred
predictedLabel
distances
i
indices
labelCount
i
label
mostCommonLabel
maxCount
label
count
sum
i
indices
i
i
j
temp
X_train
y_train
knn
X_test
y_pred
n
el
flag
arr
i
lt
rt
mid
fibMMm2
fibMMm1
fibM
offset
i
array
n
x
ind
n
el
flag
arr
i
i
start
end
i
sc
n
key
arr
i
ind
mid
arr
size
target
index
newNode
temp
temp
current1
current2
list1
scanner
N
i
data
list2
M
i
data
result
mid1
mid2
mid1
mid2
l
r
p
key
ar
temp
pivotValue
storeIndex
i
pivotIndex
arr
k
result
isAscending
left
right
mid
left
right
mid
scanner
size
arr
i
target
result
row
col
sc
matrix
n
mid
n
i
sc
temp
n
arr
i
i
j
target
result
sc
x
y
count
res
matrice
i
x
j
matrice
i
j
obj
bin
gray
r
count
i
bit
m
r
blockLength
encodedBlock
dataBit
position
position
parity
encodedMessage
message
encodedMessage
count
tst
myObj
s
val
res
q
level
mp
temp
res
q
level
mp
temp
res
q
mp
level
temp
res
q
level
mp
temp
root
L
R
T
B
usrchoice
tree
c
a
b
keys
i
child
keys
i
childNode
i
sibling
parent
i
borrowedKey
pointer
i
i
i
newPointers
i
pointers
halfPointers
i
dictionary
halfDict
i
parent
midpoint
newParentKey
halfKeys
halfPointers
sibling
keys
newRoot
pointerIndex
halfKeys
i
ln
ln
midpoint
halfDict
parent_keys
parent
newParentKey
newLeafNode
pointerIndex
in
ln
dps
index
values
currNode
dps
i
i
i
i
bpt
node
node
temp
temp
next
t
parent
color
parent
sibling
sibleft
sibright
c
sibling
next
parent
left
c
gp
parent
right
c
gp
input
data1
data2
data3
data4
data5
data6
data7
data8
data9
data_rm1
data_rm2
data_rm3
data_rm4
x
T2
y
T2
balanceFactor
current
temp
temp
balanceFactor
tree
cost
AND_nodes
Path_A
PathA
OR_nodes
Path_B
PathB
Main_nodes
least_cost
condition
c
Path
Min_cost
key
values
Index
Next
H
Conditions
aConditions
bConditions
cConditions
dConditions
weight
Updated_cost
temp
val
root
sc
root
mid
mid
leftSum
rightSum
mid
scanner
n
arr
i
treeSize
tree
choice
left
right
sum
index
value
set
it
root
btobst
root
upperSize
lowerSize
i
temp
firstCluster
lastCluster
maxLow
offset
succCluster
offset
minLow
offset
predCluster
offset
vebTree
sum
array
n
fTree
i
pSum
i
smallest
child
lastChild
temp
minIndex
minValue
d
capacity
heap
numValues
i
keyIndex
value
i
current
level
idx
current
level
idx
sc
words
i
i
newRoot
temp
newRoot
temp
temp
temp
treap
choice
key
priority
scanner
newNode
newNode
temp
leftRotate
y
rightRotate
y
inOrder
inOrder
spt
sc
n
i
num
stack
i
top
t
arr
n
nr
dr
p
i
count
res
sc
size
i
file
sc
n
i
j
start
finish
temp
temp1
x
sum
sc
n
array
i
j
totalWeight
m
max
sc
i
i
i
i
temp
temp1
i
j
i
i
i
max
i
a1
profit
i
p
i
ob
i
visited
queue
curr
br
inp
N
M
obj
g
i
u
v
s
i
edge
i
child
dfsData
numBridges
bridges
numNodes
graph
bridges
cost
i
j
N
graph
minCost
i
n
m
matching
u
n
m
u
foundAugmentingPath
u
uVertices
vVertices
graph
INF
no_edge
selected
min
x
y
i
j
g
V
G
v
i
i
scan
hc
V
graph
i
j
i
j
count
i
i
j
sc
vertice
matrix
i
j
minCut
inSet
partition
i
phase
inTree
weight
prev
i
maxWeight
current
j
j
j
graph
n
m
scanner
i
u
v
weight
minCut
v
visited
distance
i
i
minVertex
j
newDist
i
minVertex
i
v
e
adjacencyMatrix
i
v1
v2
weight
i
dist
B
i
idx
u
v
weight
du
dv
i
V
g
V
result
e
i
parent
nextEdge
x
y
scanner
V
E
graph
i
src
dest
weight
s
i
i
i
scanner
N
m
edges
i
i
i
source
i
i
destination
isVisited
count1
count2
count
scanner
V
g
E
i
source
destination
sc
n
m
s
adj
sources
i
src
i
i
u
v
dist
vis
i
q
i
lvl
sz
i
node
i
next_v
edge_count
i
curr_path
circuit
curr_v
i
scanner
vertices
edges
adj
i
i
source
destination
V
visited
queue
front
rear
u
v
V
residualGraph
u
v
parent
maxFlow
pathFlow
v
u
v
u
scanner
V
source
sink
graph
numEdges
i
i
u
v
capacity
maxFlow
visited
queue
u
v
residualGraph
parent
u
v
maxFlow
pathFlow
v
u
v
u
graph
source
sink
maxFlow
graph
i
Q
sizeQ
i
u
e
df
flow
dist
ptr
df
input
node
graph
edges
u
v
c
i
n
time
executed
i
next_arrival
i
scanner
process
i
arrivalTime
burstTime
i
scanner
pnum
at
bt
i
i
v
readyQueue
processQueue
busin
tat
wt
i
ct
listptr
completion
nextProcess
nxtArrivalTime
newProcessArrival
execProcess
btValue
pid
mr
evalProcess
tmpQueue
it
atime
btime
wtime
res
it
pid
avg_waiting
avg_tat
i
i
waitSum
tatSum
i
p
avgwt
avgtat
input
n
i
i
i
i
i
i
i
remainingTime
i
complete
t
currentMin
shortest
finishTime
check
j
waitingTime
turnAroundTime
totalWaitTime
totalTurnAroundTime
i
process
n
scanner
n
process
i
ps
i
i
i
curr
avgTurnAroundTime
avgWaitingTime
avgResponseTime
i
i
ps
i
i
j
i
j
i
j
response
i
i
temp
j
sum
i
i
i
j
i
j
i
i
j
counter
l
foundSafeSystem
m
j
k
i
response
i
i
process_no
temp
i
i
min
max
i
flags
i
index
i
scanner
n
a
i
i
i
temp
pivot
i
j
pivot
qs
sc
n
arr
i
temp
i
correctIndex
arr
r
i
temp
j
len1
len2
left
right
x
x
i
j
k
minRun
i
size
left
mid
right
num
array
i
i
n
i
j
k
i
arr
n
i
it
n
graph
i
j
k
b
x
mid
s
n
arr
i
hs
x
y
i
sc
n
A
i
sum
arr_size
found
start
temp
maxIndex
i
n
currSize
maxIndex
arr
sc
n
arr
i
zero
one
two
i
i
i
i
sc
size_of_array
gnome_sort
i
i
pointer
result
i
temp
n
gap
i
temp
j
arr
largest
i
count
i
i
j
i
nums
i
temp
arr
n
gap
swapped
i
temp
scanner
n
a
i
i
i
temp
temp
child
i
heapN
i
i
key
j
max
min
median
pivot
i
j
pivot
p
depthLimit
i
s
n
arr
i
is
i
temp
t
i
arr
isSorted
temp
i
i
arr
n
i
num
array
i
i
i
smallest
j
temp
i
max
leftChild
rightChild
x
n
i
i
x
s
n
ar
i
hs
sc
size
arr
i
maxElement
minElement
range
bucket
i
difference
k
i
max
len
beads
i
j
j
sum
i
i
i
j
scanner
n
arr
i
left
right
minimum
maximum
minIndex
maxIndex
i
temp
temp
scanner
n
array
i
i
i
sc
size
arr
i
max
exp
output
count
i
i
i
i
max
i
num
temp
array
i
i
i
j
i
x
i
j
i
q
temp
arr
n
i
arr
k_start
k_end
len
swapped
i
j
temp
x
temp
min
max
i
range
pigeonholes
i
index
i
scanner
n
arr
i
i
i
j
temp
i
shuffles
array
i
i
i
grundySet
num
scanner
n
moves
table
i
grundy
solution
process0
process1
i
j
i
j
i
board
Queen
sc
number1
number2
num1
n1
num2
n2
length
half_length
a
b
c
d
ac
ac_bd
bd
N
C
i
j
N
C
i
j
n
i
j
row
col
C
nRow
nCol
a
b
c
d
e
f
g
h
i
j
ts1
ts2
ts3
ts4
ts5
ts6
ts7
ts8
ts9
ts10
p1
p2
p3
p4
p5
p6
p7
c11
c12
c21
c22
i
j
sc
n
A
B
obj
i
j
i
j
c
