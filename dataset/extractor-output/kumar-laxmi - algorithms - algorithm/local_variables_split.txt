len
rotations
sb
i
counts
sorted
Chars
i
first
Column
count
j
index
original
String
k
c
scanner
input
String
bwt
Result
inverse
Bwt
Result
storage
compressed
data
current
symbol
index
previous
index
storage
decompressed
data
index
phrase
message
compressed
message
decompressed
message
queue
i
left
right
parent
root
codes
frequencies
characters
codes
nums1
nums2
curr
Sum
max
Sum
flag
max
Num
k
i
a
b
i
max
min
arr
arr
size
arr
x
count
element
index1
index2
i
kick
Index
kicked
Key
index1
index2
i
scanner
num
Keys
i
key
key
To
Search
i
index
i
index
hash
Value
bytes
filter
int
Value
string
Value
include
exclude
sum
sc
n
nums
i
sc
test
p
q
s1
s2
lcss
lcs
dp
i
j
jump
i
j
array
memo
i
scanner
n
fib
i
j
i
j
n
sum
sc
coins
i
X
Y
m
n
i
cities
sc
distance
i
j
visit
City
hamiltonian
Cycle
next
City
i
j
sum1
i
t1
t2
dp
i
j
x
y
x
sc
n
a
i
b
n
m
i
length
i
j
k
cost
dimensions
result
total
Items
maximum
Value
pick
not
Pick
pick
not
Pick
total
Items
dp
current
Item
current
Capacity
pick
not
Pick
total
Items
prev
current
Item
curr
current
Capacity
pick
not
Pick
values
weights
capacity
maximum
Value
n
i
result
j
i
scanner
message
morse
Code
i
ch
scanner
text
morse
Code
p
g
private
Key
public
Key
scanner
message
cipher
decrypted
Message
g
range
result
group
Order
power
message
Bytes
cipher
k
r
m
decrypted
Message
i
r
m
s
original
Message
result
character
encrypt
k
i
j
pt
encrypt
k
i
j
remainder
gcd
quotient
temp
scanner
action
input
Str
hash
Result
input
Str
original
Hash
verify
Result
digest
hash
hex
String
hex
prepared
String
len
i
ch
visited
row
col
len
i
ch
i
ch
len
prepared
String
i
ch
digraph
Plain
Text
digraph
Count
digraphs
i
j
i
j
cipher
Text
row1
col1
row2
col2
ch1
ch2
coordinates1
coordinates2
temp
scanner
key
plain
Text
prepared
Key
prepared
Plain
Text
table
digraphs
cipher
Text
sc
choice
message
shift
encrypted
Message
message
shift
decrypted
Message
chars
i
ch
chars
i
ch
i
row
col
j
cipher
matrix
i
k
i
col
row
cipher
Mat
k
j
i
index
dec
Cipher
l
j
i
msg
i
j1
msg
cipher
decrypted
Message
sc
text
length
alphabet
key
i
key
index
alphabet
texts
encrypted
i
ascii
text
number
key
number
encrypt
number
alphabet
decrypted
i
ascii
text
number
key
number
encrypt
number
temp
sc
text
key
text
message
len
Chk
text2D
itr1
itr2
i
key2D
itr3
i
j
deter
mul
Inverse
encrypt
Text
itr
Count
i
temp1
temp2
i
temp1
temp2
len
Chk
encrypt
Text2D
itr1
itr2
i
key2D
itr3
i
j
deter
mul
Inverse
swap
Temp
i
j
i
j
decrypt
Text
itr
Count
i
temp1
temp2
i
temp1
temp2
decrypted
i
result
mul
Inverse
i
temp
Inv
sc
text
keyword
i
alphabet
texts
keywords
encrypted
i
ascii
text
number
key
number
encrypt
number
alphabet
decrypted
i
ascii
text
number
key
number
encrypt
number
temp
sc
text
key
encrypted
text
direction
column
j
a
i
i
k
decrypted
text
direction
column
j
a
i
index
i
k
i
sc
plain
Text
ciphertext
decrypted
Text
ciphertext
i
t
alpha
Val
c
changed
Char
plaintext
inverse
A
i
c
alpha
Val
decipher
T
changed
Char
big
A
big
M
s
rows
cols
mat
i
j
row
Start
col
Start
row
End
col
End
col
row
col
row
n
rand
i
j
temp
scanner
size
numbers
i
sc
k
l
k
l
Main
is
Monotonic
n
s
e
main
scanner
n
nums
i
element
toh
num
disks
ch
i
f
s
row
col
path
temp
row
temp
col
point
closed
List
cell
Details
i
j
i
j
open
List
found
Dest
moves
Row
moves
Col
p
f
current
k
new
i
new
j
g
New
h
New
f
New
grid
src
dest
SIZE
P
convert
To
New
String
new
String
i
longest
Palindrome
Substring
Q
c
r
i
i
Mirror
max
Palindrome
center
Index
i
main
scanner
s
sc
test
str
m
x1
x2
s1
s2
i
flag
n
ch
camel
Case
i
inp
test
Case
i
str
scanner
p
n
process
memory
memory
Best
Fit
i
i
i
temp
output
Best
Fit
i
j
i
scanner
p
n
process
memory
temp
i
i
output
Worst
Fit
i
j
i
scanner
p
n
process
memory
memory
Next
Fit
i
i
output
Next
Fit
i
j
i
i
x1
x2
i
i
r1
r2
cognitive
Velocity
social
Velocity
i
initial
Fitness
global
Best
Fitness
global
Best
Position
swarm
Particles
i
iter
current
Answer
current
Value
i
neighbor
neighbor
Value
lps
Array
len
i
i
j
tst
pat
s
i
states
i
word
current
State
j
ch
ch
q
ch
state
ch
failure
answer
ch
current
State
i
j
arr
text
k
MAXS
MAXC
concat
k
a
i
n
l
r
i
m
sc
s
pattern
sizep
sizet
p
t
h
i
i
check
i
j
sc
pattern
txt
q
occurrences
text
Length
pattern
Length
shift
Table
i
i
i
j
shift
text
pattern
occurrences
arr
temp
s
choice
sc
element
sc
size
arr
i
s
nxt
Gre
i
j
s
max
a
t
area
with
top
i
hist
stack
n
ans
i
pop
height
distance
min
height
arr
max
Sum
max
Sum
Curr
Idx
i
s
n
ar
i
other
val
max
Dist
max
Dist
Point
curr
Side
dist
hull
min
Point
max
Point
points
convex
Hull
d
sum
r
input
number
length
sum
n
points
result
counter
i
scanner
choice
segments
num
Segments
i
left
right
union
Length
scan
num
pow
current
Term
series
i
i
scanner
n
scanner
x1
y1
x2
y2
distance
val
p1
q1
p2
q2
o1
o2
o3
o4
index
index
checked
eve
i
s
ans
i
curr
index
next
prev
flag
s1
s1
it
next
prev
s1
s2
sc
choice
n
arr
i
left
X
left
Y
right
X
right
Y
sc
base
power
modulo
result
x
j
num
rem
sc
n
i
i
k
phi
a
b
c
i
scan
n
copy
i
first
i
j
i
i
j
k
i
j
sc
ch
x
y
sc
n
relation
x
rn
sx
sy
x
y
x
y
no
could
mat
n
scanner
i
j
people
i
index
i
scanner
n
k
last
Person
scan
num
res
i
s1
s2
sc
str
result
sc
c
decimal
Number
binary
Number
binary
decimal
Num
binary
remainder
decimal
power
i
digit
factn
i
sc
x
n
nf
arr
i
ncr
i
c
a
b
k
output
Format
result
result
i
numerator
denominator
result
i
j
random
x
i
y
z
i
scanner
matrix
i
j
scanner
A
B
C
sc
N
i
sum
n
factorial
sum
in
copy
rem
i
s1
s2
s3
area
S
sc
scanner
num
Elements
original
Set
i
unique
Set
n
num
Subsets
power
Set
i
subset
j
a1
b1
c1
a2
b2
c2
x1
x2
y1
y2
a3
m
b3
a4
n
b4
sc
number
modulo
gcd
res
gcd
temp
a1
b1
c1
a2
b2
c2
a3
m
b3
a4
n
b4
m1
a5
m2
m3
a6
m4
m5
m6
a7
m7
m8
a8
a9
b5
a10
b6
comp
Value
val1
val2
scan
a
b
c
result
c
scanner
n
i
c
c
coeff
str
Num
reversed
scanner
number
reversed
Number
sc
n
primes
i
j
i
q
m
k
j
h
i
m
flag
n
sc
n
arr
i
start
last
Quartile1
Quartile2
Quartile3
mid
a
b
x
y
ans
d
i
n
sum
is
Second
Digit
i
digit
scanner
number
res
sc
a
b
curr
start
next
Curr
pg
rem
curr
sc
cache
new
Node
tail
temp
ptr1
ptr2
scanner
head1
head2
n1
i
data
n2
i
data
pos
temp
i
tail2
intersection
a
list
p
c
next
ob
Complexity
reversing
linked
is
new
Node
new
Node
current
i
new
Node
current
current
sc
list
choice
data
position
current
prev
i
current
prev
dummy
current
carry
sum
digit
prev
current
next
dummy
prev
scanner
input
i
val
scanner
exit
choice
n1
head1
n2
head2
result
result
slow
fast
halves
halves
left
right
list
Size
dummy
block
Size
current
tail
left
right
merged
current
i
remaining
size
current
new
Node
current
head
Top
Down
head
Bottom
Up
count
current
head
input
n
prev
i
current
length
newnode
ptr
ptr
slow
fast
curr
prev
nxt
llist
n
sc
node
i
trav
next
temp
temp
temp
trav
i
trav
index
trav
str
trav
double
Linked
List
dummy
tail
mid
l1
l2
pq
dummy
tail
node
interval
i
list1
list2
list3
lists1
merged
List
DC
list4
list5
list6
lists2
merged
List
PQ
list7
list8
list9
lists3
merged
List
Iterative
new
Node
current
Node
curr
last
Node
prev
Node
current
Node
current
Node
circular
List
scanner
n
i
data
delete
Data
old
Value
new
Value
temp
curr
curr
prev
First
is
First
Pass
first
prev
count
next
curr
head
n
val
k
scanner
i
temp
dummy
current
scanner
head1
head2
current
input
new
Node
input
new
Node
mergedhead
image
gray
Image
smoothed
Image
gradient
Image
suppressed
Image
edges
Image
output
gray
Image
y
x
color
gray
width
height
smoothed
Image
gaussian
Kernel
y
x
sum
j
i
pixel
X
pixel
Y
color
gray
smoothed
Gray
kernel
sum
j
i
x
y
j
i
width
height
gradient
Image
sobel
X
sobel
Y
y
x
gradient
X
gradient
Y
j
i
pixel
X
pixel
Y
color
gray
gradient
Magnitude
width
height
suppressed
Image
y
x
gradient
Magnitude
angle
neighbor1
neighbor2
width
height
edges
Image
low
Threshold
high
Threshold
y
x
gray
is
Strong
Neighbor
j
i
neighbor
Gray
sobel
X
gx
j
i
pixel
X
pixel
Y
gray
sobel
Y
gy
j
i
pixel
X
pixel
Y
gray
x
Means
y
Mean
numerators
denominators
i
j
sum
means
i
sum
result
i
x
y
regression
new
X
predicted
Y
iterations
h
cost
gradient
i
m
n
X
y
theta
y
pred
predicted
Label
distances
i
indices
label
Count
i
label
most
Common
Label
max
Count
label
count
sum
i
indices
i
i
j
temp
X
train
y
train
knn
X
test
y
pred
n
el
flag
arr
i
lt
rt
mid
fib
M
Mm2
fib
M
Mm1
fib
M
offset
i
array
n
x
ind
n
el
flag
arr
i
i
start
end
i
sc
n
key
arr
i
ind
mid
arr
size
target
index
new
Node
temp
temp
current1
current2
list1
scanner
N
i
data
list2
M
i
data
result
mid1
mid2
mid1
mid2
l
r
p
key
ar
temp
pivot
Value
store
Index
i
pivot
Index
arr
k
result
is
Ascending
left
right
mid
left
right
mid
scanner
size
arr
i
target
result
row
col
sc
matrix
n
mid
n
i
sc
temp
n
arr
i
i
j
target
result
sc
x
y
count
res
matrice
i
x
j
matrice
i
j
obj
bin
gray
r
count
i
bit
m
r
block
Length
encoded
Block
data
Bit
position
position
parity
encoded
Message
message
encoded
Message
count
tst
my
Obj
s
val
res
q
level
mp
temp
res
q
level
mp
temp
res
q
mp
level
temp
res
q
level
mp
temp
root
L
R
T
B
usrchoice
tree
c
a
b
keys
i
child
keys
i
child
Node
i
sibling
parent
i
borrowed
Key
pointer
i
i
i
new
Pointers
i
pointers
half
Pointers
i
dictionary
half
Dict
i
parent
midpoint
new
Parent
Key
half
Keys
half
Pointers
sibling
keys
new
Root
pointer
Index
half
Keys
i
ln
ln
midpoint
half
Dict
parent
keys
parent
new
Parent
Key
new
Leaf
Node
pointer
Index
in
ln
dps
index
values
curr
Node
dps
i
i
i
i
bpt
node
node
temp
temp
next
t
parent
color
parent
sibling
sibleft
sibright
c
sibling
next
parent
left
c
gp
parent
right
c
gp
input
data1
data2
data3
data4
data5
data6
data7
data8
data9
data
rm1
data
rm2
data
rm3
data
rm4
x
T2
y
T2
balance
Factor
current
temp
temp
balance
Factor
tree
cost
AND
nodes
Path
A
Path
A
OR
nodes
Path
B
Path
B
Main
nodes
least
cost
condition
c
Path
Min
cost
key
values
Index
Next
H
Conditions
a
Conditions
b
Conditions
c
Conditions
d
Conditions
weight
Updated
cost
temp
val
root
sc
root
mid
mid
left
Sum
right
Sum
mid
scanner
n
arr
i
tree
Size
tree
choice
left
right
sum
index
value
set
it
root
btobst
root
upper
Size
lower
Size
i
temp
first
Cluster
last
Cluster
max
Low
offset
succ
Cluster
offset
min
Low
offset
pred
Cluster
offset
veb
Tree
sum
array
n
f
Tree
i
p
Sum
i
smallest
child
last
Child
temp
min
Index
min
Value
d
capacity
heap
num
Values
i
key
Index
value
i
current
level
idx
current
level
idx
sc
words
i
i
new
Root
temp
new
Root
temp
temp
temp
treap
choice
key
priority
scanner
new
Node
new
Node
temp
left
Rotate
y
right
Rotate
y
in
Order
in
Order
spt
sc
n
i
num
stack
i
top
t
arr
n
nr
dr
p
i
count
res
sc
size
i
file
sc
n
i
j
start
finish
temp
temp1
x
sum
sc
n
array
i
j
total
Weight
m
max
sc
i
i
i
i
temp
temp1
i
j
i
i
i
max
i
a1
profit
i
p
i
ob
i
visited
queue
curr
br
inp
N
M
obj
g
i
u
v
s
i
edge
i
child
dfs
Data
num
Bridges
bridges
num
Nodes
graph
bridges
cost
i
j
N
graph
min
Cost
i
n
m
matching
u
n
m
u
found
Augmenting
Path
u
u
Vertices
v
Vertices
graph
INF
no
edge
selected
min
x
y
i
j
g
V
G
v
i
i
scan
hc
V
graph
i
j
i
j
count
i
i
j
sc
vertice
matrix
i
j
min
Cut
in
Set
partition
i
phase
in
Tree
weight
prev
i
max
Weight
current
j
j
j
graph
n
m
scanner
i
u
v
weight
min
Cut
v
visited
distance
i
i
min
Vertex
j
new
Dist
i
min
Vertex
i
v
e
adjacency
Matrix
i
v1
v2
weight
i
dist
B
i
idx
u
v
weight
du
dv
i
V
g
V
result
e
i
parent
next
Edge
x
y
scanner
V
E
graph
i
src
dest
weight
s
i
i
i
scanner
N
m
edges
i
i
i
source
i
i
destination
is
Visited
count1
count2
count
scanner
V
g
E
i
source
destination
sc
n
m
s
adj
sources
i
src
i
i
u
v
dist
vis
i
q
i
lvl
sz
i
node
i
next
v
edge
count
i
curr
path
circuit
curr
v
i
scanner
vertices
edges
adj
i
i
source
destination
V
visited
queue
front
rear
u
v
V
residual
Graph
u
v
parent
max
Flow
path
Flow
v
u
v
u
scanner
V
source
sink
graph
num
Edges
i
i
u
v
capacity
max
Flow
visited
queue
u
v
residual
Graph
parent
u
v
max
Flow
path
Flow
v
u
v
u
graph
source
sink
max
Flow
graph
i
Q
size
Q
i
u
e
df
flow
dist
ptr
df
input
node
graph
edges
u
v
c
i
n
time
executed
i
next
arrival
i
scanner
process
i
arrival
Time
burst
Time
i
scanner
pnum
at
bt
i
i
v
ready
Queue
process
Queue
busin
tat
wt
i
ct
listptr
completion
next
Process
nxt
Arrival
Time
new
Process
Arrival
exec
Process
bt
Value
pid
mr
eval
Process
tmp
Queue
it
atime
btime
wtime
res
it
pid
avg
waiting
avg
tat
i
i
wait
Sum
tat
Sum
i
p
avgwt
avgtat
input
n
i
i
i
i
i
i
i
remaining
Time
i
complete
t
current
Min
shortest
finish
Time
check
j
waiting
Time
turn
Around
Time
total
Wait
Time
total
Turn
Around
Time
i
process
n
scanner
n
process
i
ps
i
i
i
curr
avg
Turn
Around
Time
avg
Waiting
Time
avg
Response
Time
i
i
ps
i
i
j
i
j
i
j
response
i
i
temp
j
sum
i
i
i
j
i
j
i
i
j
counter
l
found
Safe
System
m
j
k
i
response
i
i
process
no
temp
i
i
min
max
i
flags
i
index
i
scanner
n
a
i
i
i
temp
pivot
i
j
pivot
qs
sc
n
arr
i
temp
i
correct
Index
arr
r
i
temp
j
len1
len2
left
right
x
x
i
j
k
min
Run
i
size
left
mid
right
num
array
i
i
n
i
j
k
i
arr
n
i
it
n
graph
i
j
k
b
x
mid
s
n
arr
i
hs
x
y
i
sc
n
A
i
sum
arr
size
found
start
temp
max
Index
i
n
curr
Size
max
Index
arr
sc
n
arr
i
zero
one
two
i
i
i
i
sc
size
of
array
gnome
sort
i
i
pointer
result
i
temp
n
gap
i
temp
j
arr
largest
i
count
i
i
j
i
nums
i
temp
arr
n
gap
swapped
i
temp
scanner
n
a
i
i
i
temp
temp
child
i
heap
N
i
i
key
j
max
min
median
pivot
i
j
pivot
p
depth
Limit
i
s
n
arr
i
is
i
temp
t
i
arr
is
Sorted
temp
i
i
arr
n
i
num
array
i
i
i
smallest
j
temp
i
max
left
Child
right
Child
x
n
i
i
x
s
n
ar
i
hs
sc
size
arr
i
max
Element
min
Element
range
bucket
i
difference
k
i
max
len
beads
i
j
j
sum
i
i
i
j
scanner
n
arr
i
left
right
minimum
maximum
min
Index
max
Index
i
temp
temp
scanner
n
array
i
i
i
sc
size
arr
i
max
exp
output
count
i
i
i
i
max
i
num
temp
array
i
i
i
j
i
x
i
j
i
q
temp
arr
n
i
arr
k
start
k
end
len
swapped
i
j
temp
x
temp
min
max
i
range
pigeonholes
i
index
i
scanner
n
arr
i
i
i
j
temp
i
shuffles
array
i
i
i
grundy
Set
num
scanner
n
moves
table
i
grundy
solution
process0
process1
i
j
i
j
i
board
Queen
sc
number1
number2
num1
n1
num2
n2
length
half
length
a
b
c
d
ac
ac
bd
bd
N
C
i
j
N
C
i
j
n
i
j
row
col
C
n
Row
n
Col
a
b
c
d
e
f
g
h
i
j
ts1
ts2
ts3
ts4
ts5
ts6
ts7
ts8
ts9
ts10
p1
p2
p3
p4
p5
p6
p7
c11
c12
c21
c22
i
j
sc
n
A
B
obj
i
j
i
j
c
