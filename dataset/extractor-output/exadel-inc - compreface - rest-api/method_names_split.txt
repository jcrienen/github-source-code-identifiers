find
By
Api
Key
And
Type
find
All
By
Id
In
find
By
Guid
exists
By
Unique
Name
And
App
Id
count
By
Unique
Name
And
App
Id
get
Model
Subjects
Count
find
All
By
App
Id
lock
By
Name
find
By
Api
Key
get
Subject
Names
find
By
Api
Key
And
Subject
Name
Ignore
Case
delete
By
Api
Key
count
All
By
Api
Key
find
By
Email
find
By
Email
And
Enabled
True
find
By
Guid
exists
By
Email
exists
By
Guid
autocomplete
find
By
Global
Role
is
Owner
Present
delete
By
Enabled
False
And
Reg
Time
Before
find
By
Registration
Token
delete
By
Guid
count
Related
Embeddings
delete
By
Subject
Id
delete
By
Subject
Api
Key
get
Img
By
Embedding
Id
get
Image
Count
By
Api
Key
find
By
Subject
Api
Key
find
By
Subject
Id
get
With
Img
And
Calculator
Not
Eq
update
Embedding
delete
By
Subject
Id
delete
By
Subject
Api
Key
reassign
Embeddings
find
By
Subject
Api
Key
find
By
Subject
Api
Key
And
Subject
Name
get
Unique
Calculators
count
By
Subject
Api
Key
And
Calculator
Not
Eq
count
By
Subject
Api
Key
Not
Eq
And
Calculator
Not
Eq
find
Top
By
Order
By
Install
Guid
find
All
By
Model
Id
In
And
Created
Date
find
All
Summarized
By
Day
from
set
Code
get
Code
get
Log
Level
fill
In
Stack
Trace
get
Log
Level
from
from
with
New
Subject
Name
handle
Defined
Exceptions
handle
Missing
Request
Header
handle
Missing
Request
Header
handle
Method
Argument
Not
Valid
handle
Constraint
Violation
Exception
handle
Undefined
Exceptions
handle
Demo
Not
Available
Exception
handle
Incorrect
Prediction
Count
Exception
handle
Http
Request
Method
Not
Supported
handle
Missing
Servlet
Request
Part
handle
Missing
Servlet
Request
Parameter
handle
Missing
Path
Variable
get
Exception
build
Body
build
Body
build
Body
get
Code
get
Http
Status
get
Owner
get
User
App
Role
add
User
App
Role
delete
User
App
Role
get
Authorities
get
Username
get
Install
Guid
after
Method
Invocation
faces
Feign
Client
faces
Feign
Retryer
get
Log
Level
find
Faces
find
Faces
Base64
get
Status
find
Faces
find
Faces
Base64
find
Faces
With
Calculator
find
Faces
Base64With
Calculator
get
Status
find
Faces
find
Faces
Base64
find
Faces
With
Calculator
find
Faces
Base64With
Calculator
find
With
Calculator
get
Status
create
create
execute
get
Confirmation
Message
set
Up
set
File
Opener
validate
start
do
Face
Migration
In
Transaction
execute
set
Access
Token
Expiration
set
Refresh
Token
Expiration
set
Token
Expiration
get
Confirmation
Message
set
Up
set
File
Opener
validate
execute
get
All
Targets
get
Row
Count
clean
Targets
update
Targets
validate
Target
Value
get
Params
get
Confirmation
Message
set
Up
set
File
Opener
validate
convert
To
Entity
Attribute
convert
To
Database
Column
convert
To
Entity
Attribute
convert
To
Entity
Attribute
convert
To
Entity
Attribute
insert
Model
insert
Model
Statistic
insert
Subject
insert
Subject
insert
Subject
insert
Embedding
No
Img
insert
Embedding
No
Img
insert
Embedding
No
Img
insert
Embedding
With
Img
insert
Embedding
With
Img
insert
Embedding
With
Img
insert
Embedding
With
Img
insert
Img
insert
User
insert
User
insert
Unconfirmed
User
insert
Unconfirmed
User
create
User
insert
Reset
Password
Token
insert
Reset
Password
Token
make
App
make
Model
make
Embedding
make
Embedding
make
Embedding
make
Embedding
make
Img
make
Img
make
Subject
handle
Defined
Exceptions
handle
Undefined
Exceptions
defined
Exceptions
undefined
Exceptions
should
Return
Message
And
Code
When
Model
Name
Is
Missing
On
Update
should
Return
Error
Message
When
Name
Is
Missing
On
Create
New
Model
should
Return
Model
should
Return
Models
should
Return
Created
Model
should
Return
Updated
Model
should
Return
Updated
With
Api
Key
Model
should
Return
Ok
When
Delete
Model
should
Return
Error
Message
When
Name
Contains
Special
Characters
On
Create
New
Model
should
Return
Message
And
Code
When
App
Not
Found
Exception
Thrown
should
Return
Message
And
Code
When
Unexpected
Exception
Thrown
should
Return
Message
And
Code
When
App
Name
Is
Missing
should
Return400And
Error
Message
When
Rename
App
To
Empty
should
Return
New
App
should
Return
Updated
App
should
Return
Updated
With
Api
Key
App
should
Return
Ok
When
Delete
should
Return
Global
Roles
To
Assign
should
Return
App
Users
should
Return
Invited
User
should
Return
Updated
User
App
Role
should
Return
Ok
When
Delete
User
From
App
should
Return400When
Trying
To
Save
App
That
Contains
Special
Characters
Within
Name
should
Return
Error
Message
When
Update
First
Name
Is
Empty
should
Return
Error
Message
When
Update
Last
Name
Is
Empty
verify
Change
Password
Validation
Exceptions
Provider
test
Change
Password
Validation
Exceptions
test
Change
Password
Incorrect
Password
test
Change
Password
should
Return
Updated
User
should
Return
Ok
When
Delete
User
should
Return
Autocomplete
should
Return
Send
Redirect
should
Return
Error
Message
When
No
User
should
Return
Ok
When
User
Not
Enabled
build
Exception
Response
build
Undefined
Exception
Response
build
User
execute
Script
setup
before
Each
after
Each
should
Return
Access
Token
Cookie
And
Refresh
Token
Cookie
When
User
Sign
In
should
Return
Bad
Request
Status
Code
When
User
Credentials
Are
Invalid
should
Return
Unauthorized
Status
Code
When
Client
Credentials
Are
Invalid
should
Return
New
Access
Token
And
New
Refresh
Token
When
Refresh
Token
Request
Occurred
should
Return
Bad
Request
Status
Code
When
Refresh
Token
Request
Occurred
With
Invalid
Refresh
Token
register
Mock
User
global
Admin
And
Global
Owner
Can
Write
Global
global
User
Cannot
Write
Global
global
User
Not
Invited
To
App
Cannot
Read
App
global
Owner
And
Global
Admin
Can
Read
App
user
With
Any
Role
To
App
Can
Read
App
global
Owner
Cannot
Be
Deleted
global
Admin
Can
Delete
Itself
global
Admin
Can
Delete
Other
Admin
Or
Users
global
User
Cannot
Delete
Others
global
User
Can
Delete
Itself
verify
App
Has
Model
strange
Model
Throws
Exception
verify
User
Deletion
From
App
Global
Provider
test
Verify
User
Deletion
From
App
By
Allowed
Global
User
verify
User
Deletion
From
App
Global
Not
Allowed
Provider
test
Verify
User
Deletion
From
App
By
Global
User
Not
Allowed
verify
User
Deletion
From
App
Global
User
Provider
test
Verify
User
Deletion
From
App
By
Allowed
App
User
verify
User
Deletion
From
App
By
Not
Allowed
App
User
Provider
test
Verify
User
Deletion
From
App
By
Not
Allowed
App
User
verify
Write
Privileges
To
App
By
Global
Users
Provider
test
Verify
Write
Privileges
To
App
By
Global
Users
verify
Write
Privileges
To
App
By
Allowed
App
Users
Provider
test
Verify
Write
Privileges
To
App
By
Allowed
App
Users
verify
Write
Privileges
To
App
By
Not
Allowed
App
Users
Provider
test
Verify
Write
Privileges
To
App
By
Not
Allowed
App
Users
get
User
get
Users
app
Roles
make
User
make
App
Role
set
Up
verify
Is
Valid
With
Not
Correct
Value
test
Is
Valid
With
Not
Correct
Value
verify
Is
Valid
With
Correct
Value
test
Is
Valid
With
Correct
Value
test
User
Role
Update
Dto
Empty
test
User
Role
Update
Dto
cannot
Accept
Wrong
Role
init
valid
Emails
Are
Valid
invalid
Emails
Are
Not
Valid
invalid
Emails
Are
Invalid
valid
Emails
Are
Not
Invalid
set
Up
test
Convert
To
Database
Column
Null
Enumeration
verify
Correct
Enum
Mapping
test
Convert
To
Database
Column
verify
Convert
To
Entity
Attribute
With
Not
Correct
Input
test
Convert
To
Entity
Attribute
With
Not
Correct
Input
test
Convert
To
Entity
Attribute
set
Up
send
Mail
Sender
Catch
Mail
Exception
success
Get
Model
success
Get
Models
success
Create
Model
fail
Create
Model
Name
Is
Not
Unique
success
Clone
Model
fail
Clone
Model
Name
Is
Not
Unique
success
Update
Model
fail
Update
Model
Name
Is
Not
Unique
success
Regenerate
Api
Key
success
Delete
Model
clean
DB
get
Enabled
User
By
Email
Returns
Active
User
get
Enabled
User
By
Email
Throws
Exception
If
User
Is
Disabled
get
User
By
Email
Returns
User
get
User
By
Email
Throws
Exception
If
No
User
get
User
By
Guid
Returns
User
get
User
By
Guid
Throws
Exception
If
No
User
autocomplete
Returns
Empty
List
autocomplete
Returns
Users
confirm
Registration
There
Are
Two
Unconfirmed
Users
First
Of
Them
Should
Become
An
Owner
create
And
Enable
User
create
User
confirm
Registration
delete
User
If
Exists
set
Up
user
success
Get
App
success
Get
Apps
For
Global
Admin
success
Get
Apps
For
Global
User
success
Create
App
fail
Create
App
Name
Is
Not
Unique
success
Update
App
fail
Update
User
App
Self
Role
Owner
Change
fail
Update
App
Name
Is
Not
Unique
success
Regenerate
Guid
success
Delete
App
success
Get
App
Roles
success
App
Users
Search
success
User
Invite
success
User
With
App
Role
Owner
Invite
fail
User
Invite
User
Already
Has
Access
To
App
delete
User
From
App
success
Pass
All
Owned
Apps
To
New
Owner
And
Leave
get
App
Roles
To
Assign
Returns
To
Owner
get
App
Roles
To
Assign
Returns
To
User
get
App
Roles
To
Assign
Returns
Default
success
Update
User
App
Role
success
Update
User
App
Role
By
Global
Admin
fail
Update
Owner
App
Role
By
Admin
success
Update
App
Role
To
Owner
By
Admin
success
Update
App
Role
To
Owner
By
Global
Owner
success
Update
App
Role
To
Owner
By
App
Owner
set
Up
success
Get
User
fail
Get
User
success
Create
User
When
Mail
Server
Enabled
success
Create
User
When
Mail
Server
Disabled
fail
Create
User
Empty
Password
fail
Create
User
Empty
Email
fail
Create
User
Duplicate
Email
success
Update
User
cannot
Create
New
User
With
Incorrect
Email
cannot
Create
New
User
Without
First
Name
cannot
Create
New
User
Without
Last
Name
confirm
Registration
Returns403When
Token
Is
Expired
confirm
Registration
Enables
User
And
Removes
Token
When
Success
creates
User
With
Lower
Case
Email
success
Delete
User
When
Deleter
Is
Replacer
success
Delete
User
When
Global
Owner
Is
Replacer
exception
When
Wrong
Replacer
Param
Is
Passed
make
User
test
Change
Password
Not
Existing
User
test
Change
Password
Incorrect
Password
test
Change
Password
test
Get
Summarized
By
Day
Model
Statistics
test
Clone
Subjects
compare
Embeddings
compare
Subjects
clean
Up
record
Statistics
User
Does
Not
Exist
Should
Exit
record
Statistics
User
Is
Not
Owner
Should
Exit
record
Statistics
Install
Info
Does
Not
Exist
Should
Exit
record
Statistics
There
Is
One
Model
That
Has
Three
Subjects
Should
Record
Statistic
With
Range
Between
One
And
Ten
record
Statistics
Something
Went
Wrong
While
Sending
Statistics
Should
Throw
Appery
Service
Exception
should
Assign
And
Send
Token
When
User
Does
Not
Hava
One
should
Reassign
And
Send
Token
When
User
Has
One
should
Throw
User
Does
Not
Exist
Exception
When
There
Is
No
Active
User
With
Provided
Email
should
Return
User
By
Token
When
Both
Exist
should
Throw
Invalid
Reset
Password
Token
Exception
When
Token
Does
Not
Exist
should
Throw
Invalid
Reset
Password
Token
Exception
When
Invalid
Token
Provided
should
Throw
Invalid
Reset
Password
Token
Exception
When
Expired
Token
Provided
should
Delete
All
Expired
Tokens
build
Mail
Body
setup
clean
get
Cookie
available
Only
With
Cookie
ignores
Case
When
Login
create
User
confirm
Registration
find
By
Guid
find
All
By
User
App
Roles
Id
User
Id
exists
By
Name
find
All
By
Order
By
Name
Asc
delete
By
User
Email
delete
All
By
Expires
In
Before
get
App
get
Apps
create
App
update
App
regenerate
Api
Key
delete
App
get
App
Roles
To
Assign
get
App
Users
invite
User
update
User
App
Role
delete
User
App
get
Model
get
Models
create
Model
clone
Model
update
Model
regenerate
Api
Key
delete
Model
get
Summarized
By
Day
Model
Statistics
get
App
Status
get
Config
set
Env
get
User
change
Password
create
User
update
User
delete
User
autocomplete
confirm
Registration
get
Demo
Model
update
User
Global
Role
get
Global
Roles
get
Global
Roles
To
Assign
get
Users
assign
And
Send
Reset
Password
Token
reset
Password
redirect
To
Login
Page
main
api
security
Schema
security
Context
default
Auth
security
Info
get
Api
Info
load
User
By
Username
token
Endpoint
token
Services
configure
configure
configure
password
Encoder
configure
configure
authentication
Manager
Bean
configure
configure
configure
extract
extract
Token
verify
Global
Write
Privileges
verify
Read
Privileges
To
App
verify
Write
Privileges
To
App
verify
Write
Privileges
To
App
verify
User
Deletion
From
App
is
App
Owner
Removal
verify
App
Has
The
Model
verify
Can
Delete
User
authenticate
get
Auth
Data
supports
extract
Key
load
Client
By
Client
Id
save
All
find
By
Client
Id
is
Secret
Required
is
Scoped
get
Scope
get
Resource
Ids
get
Authorized
Grant
Types
get
Registered
Redirect
Uri
get
Authorities
get
Access
Token
Validity
Seconds
get
Refresh
Token
Validity
Seconds
is
Auto
Approve
get
Additional
Information
post
Access
Token
extract
Refresh
Token
Cookie
Value
From
Request
is
Refresh
Token
Grant
Type
build
Access
Token
Cookie
build
Refresh
Token
Cookie
extract
Expires
In
From
Refresh
Token
revoke
Token
build
Empty
Cookie
is
Access
Token
Blank
create
Access
Token
store
Access
Token
store
Refresh
Token
remove
Expired
Tokens
initialize
is
Valid
is
Valid
is
Invalid
send
Mail
get
Principal
get
Principal
Id
get
User
get
User
get
Enabled
User
By
Email
get
User
By
Guid
create
User
generate
Registration
Token
send
Registration
Token
To
User
validate
User
Create
Dto
update
User
delete
User
autocomplete
remove
Expired
Registration
Tokens
confirm
Registration
manage
Owned
Apps
By
User
Being
Deleted
has
Only
Demo
User
update
Demo
User
update
Apps
Ownership
update
User
Global
Role
get
Global
Roles
To
Assign
get
Users
decide
New
Owner
change
Password
reset
Password
get
App
pass
All
Owned
Apps
To
New
Owner
And
Leave
All
Apps
verify
Name
Is
Unique
get
App
get
Apps
get
App
Roles
To
Assign
get
App
Users
invite
User
create
App
update
App
update
User
App
Role
delete
User
From
App
regenerate
Api
Key
delete
App
clone
Model
get
Model
validate
Name
verify
Name
Is
Unique
get
Model
get
Model
Dto
get
Model
Response
Dto
get
Models
create
Model
build
Model
create
Recognition
Model
create
Verification
Model
create
Detection
Model
clone
Model
clone
Subjects
clone
Subject
update
Model
regenerate
Api
Key
delete
Model
get
Summarized
By
Day
Model
Statistics
record
Statistics
are
Statistics
Allowed
create
Statistics
create
Statistic
get
Subject
Range
send
Statistics
delete
Expired
Tokens
exchange
Token
On
User
assign
And
Send
Token
assign
Token
send
Token
to
User
Role
Response
Dto
to
User
Role
Response
Dto
to
App
Owner
Dto
to
Response
Dto
to
Response
Dto
to
Response
Dto
to
Response
Dto
get
Owner
get
Role
to
Response
Dto
to
Response
Dto
to
Response
Dto
to
User
Role
Response
Dto
to
User
Role
Response
Dto
test
Find
By
Subject
Id
test
Get
With
Img
And
Calculator
Not
Eq
test
Update
Embedding
test
Delete
By
Subject
Id
test
Delete
By
Subject
Api
Key
test
Reassign
Embeddings
test
Find
By
Subject
Api
Key
test
Get
Unique
Calculators
test
Count
By
Subject
Api
Key
And
Calculator
Not
Eq
test
Count
By
Subject
Api
Key
Not
Eq
And
Calculator
Not
Eq
test
Find
By
Api
Key
test
Get
Subject
Names
test
Find
By
Api
Key
And
Subject
Name
Ignore
Case
test
Delete
By
Api
Key
init
Database
set
Liquibase
Change
Log
Params
insert
Model
insert
Model
insert
Subject
insert
Subject
insert
Subject
insert
Model
Statistic
insert
Embedding
No
Img
insert
Embedding
No
Img
insert
Embedding
No
Img
insert
Embedding
With
Img
insert
Embedding
With
Img
insert
Embedding
With
Img
insert
Embedding
With
Img
insert
Img
make
App
make
Model
make
Embedding
make
Embedding
make
Embedding
make
Embedding
make
Embedding
make
Enhanced
Embedding
Projection
make
Img
make
Img
make
Subject
test
Remove
From
Empty
test
Add
To
Empty
test
Create
test
Add
test
Remove
cleanup
should
Increment
Cache
Value
When
Increment
Request
Count
Method
Invoked
should
Invalidate
All
Cache
When
Invalidate
Cache
Method
Invoked
get
Or
Load
recognize
recognize
Base64
test
Detect
File
Extension
Exception
verify
Client
Returns
Exception
test
Detect
Faces
Exception
test
Detect
test
Detect
Base64
get
Img
should
Return
Status
Without
Auth
verify
Faces
verify
Faces
Base64
pair
test
Add
Embedding
test
Add
Embedding
Base64
test
Download
Img
test
Download
Img
Not
Found
test
List
Embeddings
test
List
Embeddings
With
Subject
Name
test
List
Embeddings
Fail
test
Remove
Subject
Embedding
test
Delete
Embedding
By
Id
test
Delete
Embedding
By
Id
Not
Found
verify
Faces
verification
Result
verify
Faces
Base64
verify
Faces
With
Incorrect
Part
Name
migrate
set
Up
test
Do
Filter
With
Short
Api
Key
test
Do
Filter
Without
Api
Key
test
Do
Filter
With
Valid
Api
Key
test
Do
Filter
With
Non
Existent
Api
Key
test
Do
Filter
With
Not
Valid
Api
Key
verify
Find
Faces
Exceptions
test
Find
Faces
With
Exception
test
Find
Faces
verify
Find
Faces
With
Calculator
test
Find
Faces
With
Calculator
test
Find
Faces
With
Calculator
With
Exception
test
Get
Status
With
Exception
test
Get
Status
test
Create
Subject
By
Name
Already
Exists
test
Create
Subject
By
Name
test
Delete
Subject
By
Name
Not
Found
test
Delete
Subject
By
Name
test
Remove
All
Subject
Embeddings
test
Remove
Subject
Embedding
Img
Deleted
test
Remove
Subject
Embedding
Img
Not
Deleted
test
Delete
Subjects
By
Api
Key
test
Add
Embedding
No
Embedding
test
Add
Embedding
Embedding
No
Img
test
Add
Embedding
Embedding
With
Img
name
Pairs
test
Is
Able
To
Update
Subject
Name
test
Is
Able
To
Update
Subject
Name
With
Reassign
set
Up
validate
File
With
Expected
Extension
validate
File
Uppercase
Extension
validate
Null
exception
If
File
With
Wrong
Extension
set
Up
predict
verify
Test
test
Recalculate
Embeddings
With
Outdated
Calculator
should
Terminate
Execution
Without
Update
Or
Record
Statistic
should
Record
One
Statistic
should
Record
Three
Statistics
should
Update
One
Statistic
should
Update
Three
Statistics
should
Update
One
Statistic
And
Record
One
Statistic
should
Update
Three
Statistics
And
Record
Three
Statistics
get
Create
Date
set
Up
validate
Model
Key
Ok
Validation
Result
validate
Model
Key
Forbidden
Validation
Result
clean
Up
process
Embeddings
There
Are
Two
Embeddings
In
The
Database
Should
Return
Two
Similarity
Result
In
Sorted
Order
process
Embeddings
Too
Few
Targets
Should
Throw
Wrong
Embedding
Count
Exception
process
Embeddings
Embeddings
Are
Null
Should
Throw
Wrong
Embedding
Count
Exception
build
Params
clean
Up
process
Embeddings
The
Input
Embedding
Exists
In
The
Database
Should
Return
Complete
Similarity
process
Embeddings
The
Input
Embedding
Does
Not
Exist
In
The
Database
Should
Not
Return
Complete
Similarity
process
Embeddings
Prediction
Count
Is
Incorrect
Should
Throw
Incorrect
Prediction
Count
Exception
process
Embeddings
Prediction
Count
Is
Null
Should
Throw
Incorrect
Prediction
Count
Exception
set
Up
test
Delete
Subject
By
Api
Key
test
Remove
All
Subject
Embeddings
delete
Subject
By
Name
test
Remove
Subject
Embedding
subject
Name
Pairs
Failed
test
Update
Subject
Name
Failed
subject
Name
Pairs
Success
test
Update
Subject
Name
Success
test
Save
Calculated
Embedding
too
Many
Faces
Found
test
Verify
Faces
verify
Embedding
There
Are
Two
Targets
And
One
Source
In
The
Database
Should
Return
Two
Similarity
Results
In
Sorted
Order
verify
Embedding
There
Are
No
Targets
Should
Throw
Wrong
Embedding
Count
Exception
test
Invalid
Image
Id
Exception
find
Faces
Response
test
List
Embeddings
test
List
Embeddings
With
Subject
Name
test
Count
Embeddings
By
Api
Key
And
Calculator
Not
Eq
test
Is
Db
Inconsistent
delete
Subject
test
Get
Img
main
pg
Entity
Manager
pg
Data
Source
data
Source
Properties
pg
Transaction
Manager
pg
Notification
Datasource
api
handle
Cache
Get
Error
handle
Cache
Put
Error
handle
Cache
Evict
Error
handle
Cache
Clear
Error
cache
Manager
error
Handler
increment
Request
Count
get
Cache
Copy
As
Map
is
Empty
invalidate
Cache
get
Or
Load
if
Present
invalidate
receive
Put
On
Cache
receive
Invalidate
Cache
notify
Cache
Event
from
get
Index
Map
get
Projections
get
Size
get
Embeddings
update
Subject
Name
add
Embedding
remove
Embeddings
By
Subject
Name
remove
Embedding
remove
Embedding
get
Raw
Embedding
By
Id
get
Subject
Name
By
Embedding
Id
find
By
Embedding
Id
valid
Image
Id
get
Check
Demo
add
Embedding
add
Embedding
Base64
download
Img
list
Embeddings
remove
All
Subject
Embeddings
delete
Embedding
By
Id
delete
Embeddings
By
Id
recognize
File
recognize
Base64
recognize
Embeddings
get
Faces
get
Total
Pages
get
Total
Elements
get
Number
get
Size
detect
detect
Base64
get
Config
get
Numeric
Property
As
Bytes
verify
verify
Base64
verify
Embeddings
recognize
recognize
Base64
recognize
Embeddings
migrate
create
Subject
list
Subjects
rename
Subject
delete
Subject
delete
Subjects
download
Img
prepare
Response
prepare
Response
prepare
Response
prepare
Response
prepare
Response
get
Last
Execution
Before
get
Name
get
Original
Filename
get
Content
Type
is
Empty
get
Size
get
Bytes
get
Input
Stream
transfer
To
endpoint
write
write
Endpoint
init
do
Filter
destroy
build
Exception
get
Model
Type
By
Url
get
Subject
Names
delete
Subject
By
Name
remove
All
Subject
Embeddings
remove
All
Subject
Embeddings
remove
Subject
Embedding
update
Subject
Name
delete
Subjects
By
Api
Key
create
Subject
add
Embedding
save
Subject
save
Embedding
Info
swagger
Api
get
Api
Info
validate
validate
Base64
predict
verify
verify
migrate
recalculate
Embeddings
With
Outdated
Calculator
recalculate
start
Migration
finish
Migration
is
Migrating
predict
get
Prediction
Count
verify
verify
normalize
One
normalize
One
normalize
recognize
calculate
Similarities
euclidean
distance
sorted
Indexes
predict
verify
verify
set
Up
Notification
notification
closed
synchronize
Cache
With
Notification
process
Image
validate
Model
Key
process
Embeddings
process
Embedding
process
Prediction
set
Up
notify
Cache
Change
process
Image
process
Face
Result
update
Embedding
do
With
Enhanced
Embedding
Projection
Stream
get
With
Img
And
Calculator
Not
Eq
get
Img
get
Img
list
Embeddings
is
Demo
Collection
Inconsistent
is
Db
Inconsistent
get
Subjects
Names
create
Subject
delete
Subjects
By
Api
Key
remove
All
Subject
Embeddings
delete
Subject
By
Name
delete
Subject
By
Name
And
Api
Key
remove
Subject
Embedding
remove
Subject
Embeddings
update
Subject
Name
save
Calculated
Embedding
save
Calculated
Embedding
save
Calculated
Embedding
verify
Face
verify
Embedding
process
Target
process
Image
get
Face
Result
validate
find
Face
validate
find
Face
find
Faces
validate
find
Face
get
Result
round
Probability
get
Face
Match
is
Multipart
File
is
String
process
Embeddings
post
Construct
update
And
Record
Statistics
update
Statistics
record
Statistics
get
Last
Execution
process
Image
process
Embeddings
process
Embedding
to
Faces
Detection
Response
Dto
to
Faces
Recognition
Response
Dto
to
Verify
Faces
Result
Dto
to
Plugin
Versions
Dto
to
Response
Dto
to
Response
Dto
map
