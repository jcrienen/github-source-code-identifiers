hexa
Decimal
To
Binary
processes
fcfs
Scheduling
process1
process2
process3
process
Details
a
a
a
a
a
a
a
processes
expected
Gantt
Chart
actual
Gantt
Chart
processes
rr
Scheduling
process1
process2
process3
process4
process5
process6
process
Details
plain
Text
key
expected
Output
cipher
Text
cipher
Text
key
expected
Output
plain
Text
text
To
Encrypt
cipher
Text
encrypted
Text
cipher
Text
encrypted
Text
all
Possible
Answers
text
To
Encrypt
cipher
Text
decrypted
Text
plain
Text
expected
Output
cipher
Text
cipher
Text
expected
Output
plain
Text
session
Key
frame
Counter
expected
lfsr0
session
Key
frame
Counter
lfsr0
expected
session
Key
frame
Counter
lfsr0
text
key
cipher
Text
encrypted
Text
key
decrypted
Text
message
key
actual
message
key
actual
text
key
encoded
Text
decoded
Text
text
cipher
Small
cipher
Text
encrypted
Text
cipher
Small
decrypted
Text
plaintext
actual
ciphertext
actual
plaintext
encrypted
Text
actual
txt
pat
kmp
Search
value
txt
pat
kmp
Search
value
txt
pat
kmp
Search
value
txt
pat
kmp
Search
value
txt
pat
kmp
Search
value
node
B
node
C
node
D
node
E
node
F
expected
Value
expected
Path
value
expected
Value
expected
Path
value
expected
Path
node
value
expected
Path
value
index
From
Our
Algorithm
index
From
Linear
Search
searcher
arr1
target1
result1
arr2
target2
result2
arr3
target3
result3
arr4
target4
result4
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
array
binary
Search
array
binary
Search
node
B
node
C
node
D
node
E
node
F
expected
Value
expected
Path
value
expected
Value
expected
Path
value
value
expected
Path
value
elements
minimum
elements1
elements2
minimum1
minimum2
elements1
elements2
elements3
minimum1
minimum2
minimum3
elements
actual
expected
elements
maximum
elements1
elements2
maximum1
maximum2
elements1
elements2
elements3
maximum1
maximum2
maximum3
elements
actual
expected
elements
median
elements1
elements2
elements3
median1
median2
median3
median
Index
elements
actual
elements
Sorted
elements
actual
elements
Sorted
percentile30th
elements
actual
elements
Sorted
elements
actual
elements
Sorted
percentile70th
elements
actual
elements
Sorted
elements
actual
elements
actual
elements
Sorted
exception
expected
Msg
objects
exception
expected
Msg
exception
expected
Msg
exception
expected
Msg
arr1
arr2
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
matrix
test
res
expected
Result
matrix
test
res
expected
Result
arr
target
ans
excepted
arr
target
ans
excepted
arr
answer
expected
arr
answer
expected
arr
answer
expected
arr
answer
expected
arr
answer
expected
arr
answer
expected
wiggle
Sort
values
result
wiggle
Sort
values
result
wiggle
Sort
values
result
wiggle
Sort
values
result
wiggle
Sort
values
result
wiggle
Sort
values
result
wiggle
Sort
values
result
graph
expected
graph
exception
expected
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
empty
Array
single
Element
Array
array
identical
Array
doubles
array
array2
array3
list
identical
List
doubles
list
array2
array3
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
input
Array
output
Array
input
Array
output
Array
input
Array
expected
Output
output
Array
input
Array
expected
Output
output
Array
input
Array
expected
Output
output
Array
input
Array
output
Array
input
Array
expected
Output
output
Array
input
Array
expected
Output
output
Array
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
array
exp
Result
act
Result
array
exp
Result
act
Result
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
random
Size
array
sorted
random
Size
array
list
sorted
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
random
Size
array
sorted
arr
selection
Sort
arr
selection
Sort
arr
selection
Sort
expected
Array
actual
List
expected
Array
actual
List
expected
Array
actual
List
expected
Array
expected
Array
actual
List
expected
Array
actual
List
expected
Array
actual
List
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Array
input
Array
output
Array
expected
Array
integers
integers
Result
dutch
National
Flag
Sort
integers
integers
Result
dutch
National
Flag
Sort
strings
strings
Result
dutch
National
Flag
Sort
strings
strings
Result
dutch
National
Flag
Sort
integers
integers
Result
dutch
National
Flag
Sort
integers
integers
Result
dutch
National
Flag
Sort
strings
strings
Result
dutch
National
Flag
Sort
strings
strings
Result
dutch
National
Flag
Sort
expected
Array
actual
List
actual
Array
i
expected
Array
actual
List
actual
Array
i
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
output
Array
expected
Output
input
Array
input
Array
expected
Output
input
Array
expected
Output
input
Array
expected
Output
input
Array
expected
Output
input
Array
expected
Output
input
Array
expected
Output
input
Array
expected
Output
merge
Sort
Recursive
expected
sorted
merge
Sort
Recursive
expected
sorted
input
Array
expected
Output
input
Array
expected
Output
input
Array
expected
Output
size
doubles
size
doubles
random
Double
dsu
node
dsu
node1
node2
node3
node4
root1
root2
root3
root4
heap
fibonacci
Heap
bloom
Filter
bloom
Filter
map
map
i
i
i
map
i
i
i
map
i
i
i
map
i
i
map
keys
i
i
map
test
Size
random
i
random
Int
hash
Index
negate
Hash
Index
map
map
map
nums
expected
actual
nums
expected
actual
nums
expected
actual
nums
expected
actual
map
map
map
hash
Table
hash
Table
hash
Table
contains
hash
Table
initial
Size
hash
Table
hash
Table
initial
Size
hash
Table
hash
Table
edges
graph
result
edges
graph
result
edges
graph
result
exception1
expected
Message
actual
Message
exception
expected
Message
actual
Message
exception
expected
Message
actual
Message
valid
Edges
valid
Graph
exception1
invalid
Edges
invalid
Graph
expected
Message1
actual
Message1
exception2
invalid
Edges
invalid
Graph
expected
Message2
actual
Message2
exception3
invalid
Edges
invalid
Graph
expected
Message3
actual
Message3
exception4
invalid
Edges
invalid
Graph
expected
Message4
actual
Message4
total
Weight
v
graph
i
actual
Result
expected
Result
n
adj
List
i
actual
Result
expected
Result
expected
Array
input
Array
expected
Array
input
Array
n
adj
List
i
actual
Result
expected
Result
n
adj
List
i
actual
Result
expected
Result
queue
i
element
my
Queue
my
Queue
my
Queue
skip
List
skip
List
actual
Value
skip
List
contains
skip
List
most
Left
Element
initial
Size
skip
List
most
Right
Value
initial
Size
skip
List
values
actual
Order
skip
List
values
reverser
reverser
single
Node
result
reverser
head
result1
reverser
head
result
rotator
rotator
single
Node
rotated
Single
Node
rotator
head
rotated1
rotator
head
rotated3
node
List
i
node
i
first
Node
second
Node
third
Node
fourth
Node
list
Has
Loop
list
Has
No
Loop
odd
Number
Of
Node
list
even
Number
Of
Node
list
list
list
list
list
head
first
Node
second
Node
third
Node
fourth
Node
list
first
head
list
head
temp
i
list
head
list
first
head
list
head
i
temp
expeced
list
read
Elements
list
list
list
list
empty
List
sorter
single
Node
List
sorter
list
sorter
g
Set
g
Set
g
Set1
g
Set2
g
Set3
g
Set1
g
Set2
merged
Set
counter
counter1
counter2
counter3
counter1
counter2
counter
counter
counter
counter1
counter2
counter1
counter2
lru
Cache
i
i
lru
Cache
i
i
mru
Cache
mru
Cache
i
lfu
Cache
lfu
Cache
lfu
Cache
lru
Cache
i
i
lru
Cache
i
i
mru
Cache
mru
Cache
i
root
root
root
root
root
expected
root
expected
root
root
root
root
root
root
coordinates
kd
Tree
coordinates
kd
Tree
coordinates
kd
Tree
root
root
root
tree
tree
tree
tree
root
queue
end
node
root
root
root
actual
BST
actual
BST
actual
BST
actual
BST
array
actual
BST
array
actual
BST
root
expected
root
expected
root
root
root
root
root
root
root
Opt
preorder
inorder
root
root
Opt
preorder
inorder
root
root
Opt
preorder
inorder
root
root
Opt
preorder
inorder
root
root
Opt
preorder
inorder
root
root
Opt
root
root
root
root
expected
root
expected
t
t
t
t
root
p
q
p
q
p
q
p
q
arr
lazy
Segment
Tree
arr
lazy
Segment
Tree
arr
lazy
Segment
Tree
arr
lazy
Segment
Tree
i
j
root
root
root
tree
tree
tree
tree
i
i
i
i
number
Of
Threads
For
Producers
number
Of
Threads
For
Consumers
number
Of
Items
producer
Count
Down
Latch
consumer
Count
Down
Latch
result
Atomic
Array
put
Executors
count
put
get
Executors
count
item
result
Array
i
expected
Item
length
result
i
n
graph
m
n
graph
m
n
graph
m
n
nodes
i
i
j
vertices
a
source
destination
list2
list1
vertices
a
source
destination
list2
list1
vertices
a
source
destination
list2
list1
vertices
a
source
destination
list2
list1
map
map2
i
i
i
j
expected
Map
expected
Map2
power
Sum
result
power
Sum
result
power
Sum
result
result
result
result
zero
Result
negative
Result
result
result
result
arr
result
arr
ws
board
word
ws
board
word
ws
board
word
result
result
result
arr
image
expected
image
expected
image
expected
image
expected
image
expected
image
expected
points
expected
Result
graham
weight
value
capacity
weight
value
capacity
weight
value
capacity
weights
values
weight
Capacity
expected
result
weights
values
weight
Capacity
expected
result
weights
values
weight
Capacity
expected
result
weights
values
weight
Capacity
expected
result
weights
values
weight
Capacity
weights
values
weight
Capacity
weights
values
weight
Capacity
weights
values
weight
Capacity
arr
arr
arr
arr
number
Processes
number
Machines
Run
Transfer
opt
costs
i
j
number
Processes
number
Machines
Run
Transfer
opt
costs
i
j
number
Processes
number
Machines
Run
Transfer
opt
costs
i
j
grid
grid
grid
grid
grid
grid
grid
result
array
array
array
array
array
array
weight
value
capacity
weight
value
capacity
weight
value
capacity
jobs
job
Sequence
start
end
result
expected
start
end
result
expected
start
end
result
expected
expected
coins
expected
coins
expected
coins
expected
coins
expected
coins
expected
coins
expected
coins
arr
arr1
arr2
A
B
exp
Result
act
Result
A
B
exp
Result
act
Result
A
B
exp
Result
act
Result
text
len
bytes
input
reader
text
len
bytes
input
reader
i
text
bytes
len
input
reader
test
String1
test
String2
test
String1
test
String2
test
String1
test
String1
test
String2
exception
str1
str2
str3
str4
str5
str6
str7
str8
expected
empty
Patterns
search
Patterns
expected
search
Patterns
expected
search
Patterns
expected
search
Patterns
expected
search
Patterns
expected
word
List1
word
List2
input1
input2
input3
input4
input5
input6
expected
reversed
expected
reversed
expected
reversed
input1
input2
input3
input1
input2
input1
input2
input3
numbers1
output1
numbers2
output2
numbers3
output3
numbers4
output4
input1
input2
input3
input4
input5
input6
input7
input1
input2
exception
palindromes
not
Palindromes
input1
anagrams
input1
input2
input3
input4
expected
Output1
expected
Output2
expected
Output3
expected
Output4
output
index
index
index
index
index
index
index
index
index
last
Search
Number
last
Search
Number
test
Cases
a
k
a
k
a
k
a
k
a
k
a
k
a
k
one
Word
Sentence
result
multiple
Word
Sentence
result
matrix
result
matrix
result
stream
exception
stream
stream
stream
stream
stream
stream
stream
stream
i
stream
stream
stream
stream
stream
stream
stream
stream
original
Matrix
expected
Mirror
Matrix
mirrored
Matrix
original
Matrix
expected
Mirror
Matrix
mirrored
Matrix
original
Matrix
expected
Mirror
Matrix
mirrored
Matrix
original
Matrix
expected
Mirror
Matrix
mirrored
Matrix
original
Matrix
values
target
expected
values
target
values
target
expected
values
target
expected
values
target
expected
values
target
example
List
example
List
example
List
example
List
example
List
example
List
arr
key
arr
key
arr
key
arr
key
arr
key
a
a
a
a
a
a
a
a
input
expected
Value
arr
result
arr
result
arr
result
arr
n
expected
result
arr
n
expected
result
arr
arr
arr
arr
test
Cases
test
Cases
csb
a
a
a
a
a
a
a
a
primes
Till4
primes
Till40
primes
Till240
length
temp
Password
min
Length
max
Length
temp
Password
text
To
CRC16
result
CRC16
test
Cases
matrix
print
Class
res
list
matrix
print
Class
res
list
c
c
a
a
a
a
a
a
a
a
answer
answer
some
Bits
answer
answer
ex
ex
some
Bits
answer
some
Bits
answer
some
Bits
answer
ex
test
Cases
arr
arr
arr
arr
arr
expected
exception
fraction3
exception
result
original
Hash
Code
rank
new
Hash
Code
true
Test
Cases
false
Test
Cases
exception
exception
exception
number
result
number
result
valid
Dudeney
Number
invalid
Dudeney
Number
n
actual
expected
exception
number
expected
Result
actual
Result
number
expected
Result
actual
Result
number
expected
Result
actual
Result
number
expected
Result
actual
Result
i
list
Of
Square
Free
Integers
i
is
Number
Square
Free
is
Number
Present
In
List
number
expected
Message
exception
actual
Message
number
expected
Message
exception
actual
Message
number
result
number
result
number
result
numbers
numbers
numbers
numbers
numbers
numbers
numbers
numbers
numbers
test
Cases
exception
exception
exception
list
gaussian
answer
matrix
Size
n
n
expected
List
Size
actual
Result
List
strobogrammatic
Number
exception
complex
complex
complex1
complex2
add
complex1
complex2
add
complex1
complex2
sub
complex1
complex2
multi
Real
multi
Img
complex1
multi
Real
multi
Img
complex1
con
Real
con
Img
complex1
abs
complex1
complex2
div
Real
div
Img
complex1
div
Real
div
Img
arr
complex1
complex2
complex3
complex4
real
V1
real
V2
img
V1
img
V2
powers
Of
Two
not
Powers
Of
Two
number
expected
Result
actual
Result
number
expected
Result
actual
Result
number
expected
Message
exception
actual
Message
number
expected
Message
exception
actual
Message
number
expected
Message
exception
actual
Message
number
expected
Output
actual
Output
number
expected
Output
actual
Output
ranged
Numbers
all
The
Numbers
number
expected
Message
exception
actual
Message
number
expected
Message
exception
actual
Message
expected
Result
Array
i
expected
Value
actual
Value
numbers
numbers
numbers
numbers
expected
Result
result
exception
exception
test
Cases
ugly
Numbers
other
Ugly
Numbers
test
Cases
ugly
Numbers
ugly
Numbers
ugly
Numbers
ugly
Numbers
t1
t2
t3
t4
exception
result
expected
result
expected
result
expected
result
expected
result
expected
result
expected
true
Test
Cases
false
Test
Cases
armstrong
armstrong
array1
array2
array1
array2
array1
array2
array1
array2
array1
array2
array1
array2
sc
b
octal
curr
Bit
j
code3
i
sc
input
Octal
result
sc
b
turkish
Chars
latin
Chars
i
hex
Builder
i
j
dec
library
Dec
To
Hex
dec
To
Hex
chroma
hue
Section
second
Largest
Component
match
Value
d
Red
d
Green
d
Blue
value
chroma
saturation
hue
b
Hue
b
Saturation
b
Value
red
green
blue
binary
Number
digit
Position
octal
Digit
binary
Digit
binary
Digit
binary
Multiplier
octal
Digit
Remainder
digits
val
i
d
hexa
Input
dec
output
scan
prev
sum
new
Prev
i
c
current
Num
sum
num
pow
i
digit
bin
Copy
d
s
power
sc
builder
a
times
b
n
b
c
d
input
n
b
c
d
input
sc
n
k
d
s
c
br
dec
Input
base
char
Arr
str
i
j
num
digits
hex
digit
input
oct
decimal
hex
str
val
i
a
n
now
i
octnum
hexadecnum
decnum
octalnum
scan
in
n
b1
b2
valid
Digits
digits
For
Base
digits
List
i
decimal
Value
char
B2
char
B1
output
i
scn
sn
sb
db
m
dec
dn
con
Hex
binary
i
hex
Nums
obj
Convert
hm
hex
i
currbit
code4
sc
binary
hex
processes
Number
waiting
Time
burst
Time
i
i
gantt
Chart
ready
Queue
current
Time
current
Process
processes
Number
queue
current
Time
completed
mark
remaining
Burst
Time
i
index
i
i
i
size
i
j
temp
ready
size
runtime
time
executed
j
k
running
i
size
min
Burst
Time
temp
position
Of
Shortest
Job
encoded
cipher
Map
begin
Small
Letter
begin
Capital
Letter
cipher
Capital
i
i
decoded
cipher
Map
begin
Small
Letter
begin
Capital
Letter
cipher
Capital
i
i
r
Bytes
rotating
Bytes
fixed
Bytes
i
current
Byte
Bits
current
Byte
round
Keys
rcon
Counter
i
t
prev
Key
t0
t1
t2
t3
cells
block
Bits
i
cell
Bits
block
Bits
i
cell
Bits
cells
i
cells
i
cells
output
cells
output
cells
output
Cells
i
row
cells
output
Cells
i
row
round
Keys
i
round
Keys
i
choice
in
plaintext
encryption
Key
ciphertext
decryption
Key
location
i
j
chars
ciphertext
location
chars
plaintext
i
pozition
X
pozition
Y
sc
substitution
Input
n
substitution
Output
i
c
transposition
Input
modulus
transposition
Output
i
j
c
transposition
Plaintext
i
j
c
plaintext
i
c
result
key
lfsr1
lfsr2
lfsr3
cycle
result
cycle
output
Bit
i
i
new
Bit
result
discarded
Bit
discarded
Bit
i
majority
Bit
result
bit
Count
result
j
i
c
result
j
i
c
r
p
q
m
sorted
Table
word
Encrypted
i
j
sorted
Table
word
Encrypted
i
j
word
Decrypted
i
table
word
In
Chards
char
Element
i
j
char
Values
i
char
Value
Index
table
Sorted
i
i
j
column
column
Array
i
i
t
i
keyword
For
Example
word
Being
Encrypted
matrix
Size
key
Matrix
i
j
message
Vector
Cipher
Text
cipher
Matrix
j
i
x
i
n
key
Matrix
i
j
message
Vector
Plain
Text
plain
Matrix
j
i
x
i
det
sign
p
q
b
x
i
j
sc
message
encoded
cipher
Map
begin
Small
Letter
begin
Capital
Letter
cipher
Capital
i
i
decoded
cipher
Map
begin
Small
Letter
begin
Capital
Letter
cipher
Capital
i
i
cipher
i
msg
a
inv
flag
i
i
msg
cipher
Text
plain
Text
sec
Key
cipher
Text
decrypted
Text
aes
Key
Generator
decryption
Cipher
gcm
Parameter
Spec
byte
Plain
Text
hex
Chars
j
v
encoded
length
i
current
decoded
length
i
current
list
Of
All
The
Answers
i
binary
num
binary4B
n
i
num
hex
ans
i
ans
n1
n2
a
ans
i
col
j
i
left
right
f
Out
i
right
left
i
right
left
length
permuted
Key
i
j
sub
Keys
initial
Permuted
Key
C0
D0
Cn
Dn
key
i
l
xor
first
Bit
second
Bit
i
l
padded
String
diff
i
expanded
Key
mixed
Key
substituted
String
block
row
col
substituted
Block
permuted
String
permuted
Message
i
L0
R0
Ln
Rn
combined
Block
reversed
Keys
i
encrypted
Message
l
i
j
desired
Length
block
bit
Block
bytes
decrypted
Message
l
i
j
block
result
res
n
i
j
result
queue
current
left
right
left
Cmp
right
Cmp
left
Third
right
Third
r
size
max
Element
integers
should
Be
Found
search
at
Index
to
Check
row
Count
col
Count
start
Row
end
Row
mid
Col
mid
Row
mid
Index
r
size
max
Element
integers
val
search
at
Index
to
Check
median
comp
sc
num
ans
l
r
ans
mid
start
end
arr
Descending
mid
list
j
in
x
t
t1
t2
t3
found
k
Asc
Ord
middle
median
comp
r
size
max
Element
integers
should
Be
Found
search
at
Index
to
Check
i
parent
r0
r1
parents
i
uf
r
size
max
Element
integers
val
search
at
Index
to
Check
median
comp
sc
n
a
i
low
high
mid
jump
Search
array
i
length
block
Size
limit
i
M
N
lps
j
i
index
len
i
i
r
size
max
Element
integers
should
Be
Found
search
at
Index
index
pattern
Length
text
Length
hash
For
Pattern
hash
For
Text
h
i
i
i
j
fib
Minus1
fib
Minus2
fib
Number
n
offset
i
integers
size
should
Be
Found
fsearch
at
Index
start
end
pos
r
size
max
Element
integers
should
Be
Found
search
at
Index
to
Check
ans
sc
arr
i
j
rows
col
ele
ans
msg
msg
msg
index
pivot
Index
pivot
Value
store
Index
i
store
Index
Eq
i
i
sub
Right
median5
right
Index
mid
right
Index
ts
mcts
winner
Node
time
Limit
promising
Node
i
promising
Node
uct
Index
node
Index
i
child
Node
uct
Temp
rand
temp
Node
is
Player
Winner
i
r
size
max
Element
integers
should
Be
Found
search
at
Index
to
Check
range
l
r
k
cmp
r
size
max
Element
integers
should
Be
Found
search
at
Index
to
Check
mid
comparison
sc
n
a
i
t
searcher
res
mid1
mid2
r
size
max
Element
integers
should
Be
Found
search
at
Index
to
Check
median
comp
row
Pointer
col
Pointer
comp
pivot
random
Index
mid
pivot
low
high
mid
temp
i
arr
arr
size
temp
result
i
i
arr
i
i
size
swapped
j
length
left
right
swapped
Left
swapped
Right
i
j
integers
shaker
Sort
strings
i
length
i
random
Index
integers
bogo
Sort
strings
pivots
pivot1
pivot2
j
less
great
temp
array
dual
Pivot
Quick
Sort
i
length
gap
i
j
temp
to
Sort
sort
i
n
swapped
low
high
mid
left
Half
right
Half
C
Sort
arr
i
string
Array
i
size
gap
swapped
i
ob
arr
arr
random
i
i
sorted
i
i
temp
result
sorted
it
elem
result
LENGTH
i
j
element
a
b
size
i
max
index
j
arr
pancake
Sort
mid
i
j
k
mx
i
output
i
count
m
exp
i
arr
n
n
temp
pivot
Index
pivot
Index
pivot
i
j
i
key
j
i
i
left
right
largest
i
j
min
Elem
Index
n
i
i
j
current
Value
size
random
Array
copy
Random
Array
insertion
Sort
insertion
Time
insertion
Sentinel
Time
start
end
maxele
mid
i
j
k
inp
n
a
i
i
temp
len
third
stooge
Sort
integer
Array
string
Array
i
j
integers
strings
gnome
Sort
array
random
i
bubble
Sort
Recursion
i
swapped
i
n
insertion
Sort
i
sz
lo
i
j
k
arr
Length
half
arr
A
arr
B
new
Al
new
Al
sort
list
a
b
ch
nm
start
prev
fresh
ptr
i
i
uu
start1
prev1
fresh1
ptr1
i1
kk
i1
uu1
mm
start2
prev2
fresh2
ptr2
i2
i3
uu2
i
c
i
ptr
ptr
c
ptr
m
i
k
j
b
p
c
a
i
ptr
j
ptr
c
c
i
ptr
ptr
c
ptr
k
i
i
d
p
l
r
d
m
temp
n
k
j
swap
frequency
sorted
Array
j
unsorted
Ints
counting
Sort
unsorted
Strings
max
Element
num
Of
Pigeonholes
pigeon
Hole
k
k
pigeonhole
Sort
arr
i
n
i
j
k
median
num
Medians
smallest
Value
n
i
min
Index
j
arr
selection
Sort
sorted
i
strings
sorted
Strings
i
LENGTH
index
amount
Smaller
Elements
element
counter
i
a
b
arr
random
i
i
limit
max
min
number
Of
Buckets
buckets
i
hash
index
max
min
sorted
max
i
grid
count
i
j
i
i
k
j
i
k
j
i
temp
low
high
mid
j
i
j
k
n
j
item
pos
i
i
temp
arr
cycle
Sort
tree
sorted
List
i
tree
tree
Sort
a
int
List
b
string
List
temp
k
i
k
n
i
a
up
ob
nx
ny
temporary
Element
key
key
wrong
Order
result
temp
temp
min
lst
k
temp
i
i
k
min
Index
temp
min
q
temporary
Element
key
key
wrong
Order
result
other
Heap
Element
result
pi
rv
lci
rci
mini
ith
jth
index
to
Insert
child
tmp
Child
rank
Array
curr
new
Key
prev
Parent
prev
Parent
buckets
buckets
tmp
Curr
tmp
Min
i
c3
tmp
Next
i
position
position
number
i
choice
key
h
In
num
To
Count
n
i
majority
Elements
i
hash
hash
hash
i
temp
temp
next
i
hash
nodes
old
i
hash
nodes
hash
nodes
target
builder
hash
hash
wrapped
Int
temp
hash
loop
Counter
new
T
i
wrapped
Int
hash
i
wrapped
Int
hash
factor
response
i
response
i
cnt
res
key
Index
i
i
key
To
Rehash
val
To
Rehash
list
Of
Keys
i
tmp
i
choice
key
h
In
i
bucket
Index
nodes
hc
old
bucket
Index
nodes
target
bucket
Index
nodes
builder
graph
i
i
k
sol
Graph
i
nodes
captain
connected
Groups
min
Graph
edges
i
connected
Elements
edge
in
i
i
start
end
i
temp
j
i
i
j
c
transpose
Graph
vis
i
transpose
Graph
i
i
vis
node
obj
sc
i
v
e
u
ve
w
j
neg
arr
dist
p
i
j
v
e
neg
dist
p
low
Time
insertion
Time
i
is
In
Stack
st
i
w
scc
i
component1
component2
cheapest
set1
set2
components
v
xroot
yroot
boruvka
State
cheapest
source
destination
intermediate
source
destination
source
source
destination
scan
number
Of
Vertices
adjacency
Matrix
source
destination
floydwarshall
i
i
is
Last
Vertex
Connected
To
Start
v
i
color
i
read
t
S
V
E
adj
i
i
s
u
v
ans
min
min
index
r
i
dist
Set
i
c
u
v
graph
t
q
answer
current
graph
top
Sort
min
min
index
v
i
parent
key
mst
Set
i
count
u
v
t
graph
graph
i
j
visited
order
List
adjacent
i
visited
order
List
queue
current
Vertex
adjacent
vertex
s
i
i
j
i
from
V
from
V
to
V
sb
graph
i
i
heuristic
graph
graph
Data
solution
queue
solution
Found
current
Data
current
Position
updated
Path
start
end
count
marked
Nodes
graph
Chars
graph
Ints
new
Node
destroy
ret
Value
node
join
travel
queue
temp
sb
i
my
Queue
result
result
queue
new
Node
new
Node
old
Head
Val
old
Head
old
Tail
Val
old
Tail
deque
String
curr
Node
my
Deque
i
deque
Size
i
removing
size
temp
current
temp
max
temp
res
cq
oldfirst
element
bag
list
i
curr
count
prev
count1
curr
Next
count
ans
i
start
element
iterator
i
start
counter
element
element
temp
element
temp
next
prev
index
current
index
current
element
os
node
os
next
available
Index
iterator
available
Node
Index
temp
index
head
list
random
Num
list
A
list
B
i
head
A
head
B
size
head
tail
min
head
curr
temp
list
i
i
cur
temp
count
connected
Point
sptr
fptr
singly
Linked
List
sc
n
k
p
s
before
i
destroy
saved
cl
pivot
less
Head
less
Tail
greater
Head
greater
Tail
sorted
Less
sorted
Greater
current
current
current
my
List
link
Operations
new
Link
new
Link
new
Link
previous
Link
i
temp
temp
current
new
Link
current
link
One
link
Two
this
Head
this
Tail
next
Link
next
Link
Next
next
Link
Previous
current
layer
to
Fix
next
node
Height
node
i
counter
current
current
layer
next
i
current
layer
next
layers
size
With
Header
i
current
position
i
result
acc
positions
height
level
border
curr
len
current
Node
Fast
current
Node
Slow
first
Counter
second
Counter
previous
A
current
A
previous
B
current
B
temp
prev
curr
next
prev
h2
cur
count
joiner
pred
new
Head
temp
new
Node
cur
i
cur
i
cur
i
list
instance
head
value
list
A
list
B
list
C
i
pa
pb
i
sum
P
sum
N
i
i
i
sum
i
i
node
node
node
temp
i
evicted
evicted
entry
exiting
Entry
new
Entry
pre
Entry
next
Entry
i
evicted
evicted
entry
pre
Entry
next
Entry
existing
Entry
new
Entry
Stack
x
y
new
Ns
item
n
my
Stack
Array
transfer
Array
i
stack
i
stack
new
Node
destroy
ret
Value
cur
builder
sc
n
i
stack
element
ele
current
new
Node
parent
temp
successor
current
parent
queue
q1
q2
first
second
n
min
max
b
random
current
Node
i
node
current
Node
i
ch
node
current
Node
i
ch
node
obj
word
scan
t
res
S
res
D
bad
Input
result
result
stack
temp
y
right
left
x
y
yorigcolor
w
w
scan
item
node
scan
item
node
mid
root
bf
str
b
T3
b
T3
root
sc
input
X0
to
Print
random
X
root
i
temp
result
q
nodes
On
Level
level
i
temp
Node
result
set
Q
qi
hd
n
root
t
integer
Tree
string
Tree
temp
temp
temp
sorted
List
result
q
prev
Level
From
Left
To
Right
nodes
On
Level
level
i
node
parent
temp
right
Or
Left
new
Node
parent
temp
right
Or
Left
replacement
parent2
child
temp
points
distance
i
t
distance
i
t
axis
median
node
axis
left
right
candidates
left
right
candidates
node
min
min
distance
distance
Except
Axis
queue
index
map
max
min
a
ans
i
result
mid
left
right
merge
result
result
result
stack
node
result
result
stack
node
temp
temp
temp
adj
v
e
i
to
from
i
parent
depth
v1
v2
temp
cum
Sum
x
seg
size
mid
mid
diff
mid
n
parent
go
Left
parent
child
node
child
b
b
result
tree
i
scn
number
i
child
i
i
sz
i
maxi
i
h
i
k
i
i
i
i
q
k
i
arr
i
i
inorder
Map
i
root
i
left
Nodes
Count
right
Nodes
Count
root
i
left
Nodes
Count
right
Nodes
Count
is
Balanced
left
Height
right
Height
is
Balanced
node
Stack
last
Visited
subtree
Heights
node
left
Height
right
Height
item
tmp
old
Element
new
Size
element
i
names
visited
i
max
Colors
sv
q
top
array
result
i
i
r
c
row
col
neighbor
neighbour
x
y
num
num
neighbor
arrangements
sol
i
sb
j
row
Index
i
diff
array
result
i
temp
map
map2
i
i
i
j
i
i
j
i
j
arr
i
i
is
Visited
path
List
g
i
xi
yi
exists
i
j
exists
index
Point1
index
Point2
i
top
s
val
res
dx1
dy1
dx2
dy2
sum
n
m
i
j
k
q
arr
a
b
a
LPS
b
LPS
reverse
best
Result
best
Sub
Result
best
Sub
Result1
best
Sub
Result2
arr1
arr2
lcs
Matrix
i
j
i
j
lcs
i
j
str1
str2
lcs
val
wt
W
n
first
second
third
i
next
n
dp
i
t
idx
notpick
pick
n
prev
ind
cur
t
not
Taken
taken
count
dice
count
dice
i
count
dice
catalan
Array
i
j
sc
n
dp
i
i
dp
Table
i
j
arr
n
is
Sum
i
i
j
j
sc
n
arr
i
m
N
tail
length
i
size
arr
lis
i
index
left
right
middle
sc
n
f
fib
i
f
prev
res
next
i
square
Root
Of5
phi
nth
Term
count
m
Size
col
row
matrix
i
i
i
i
i
i
j
i
l
i
j
k
q
len1
len2
distance
Mat
i
j
i
j
str1
str2
i
chs
chp
ros
rop
ans
blank
multiple
i
chs
chp
ans
blank
multiple
i
chs
chp
ans
blank
multiple
strg
row
col
chs
chp
ans
blank
multiple
src
pat
table
j
i
j
k
prev
curr
next
i
a
b
a
LPS
b
LPS
arr
start
end
g
i
j
len
min
Cuts
is
Palindrome
i
j
L
input
word
ans
sum
dp
closest
Partition
Sum
i
j
dp
i
j
dp
i
j
i
j
m
n
l
L
i
j
X
Y
num
Rows
num
Cols
dp
col
row
col
m
n
dp
j
i
j
text
Char
pattern
Char
n
year
start
end
n
year
start
end
ans
n
strg
slide
si
ei
year
start
end
arr
total
Flow
parent
i
q
here
there
amount
printer
sb
p
p
len1
len2
dp
i
j
i
c1
j
c2
replace
insert
delete
min
input
s1
s2
ans
storage
m
n
op1
op2
op3
i
j
running
Costs
k
min
i
i
j
dp
i
w
amount
coins
combinations
i
minimum
Coins
i
i
sub
res
i
val
i
max
Val
j
las
i
result
i
j
arr
n
arr
Key
include
exclude
i
j
image
egg
Floor
result
x
i
j
i
j
n
m
result
chars
n
res
max
i
index
a
i
sum
running
sum
token
in
ch
index
Count
array
i
try
Time
lateness
j
slots
result
i
j
job
Sequence
Builder
i
n
activities
i
last
End
Time
selected
Activities
i
ratio
i
final
Value
current
i
index
coins
count
ans
i
rows
In
Matrix1
columns
In
Matrix1
rows
In
Matrix2
columns
In
Matrix2
product
row
Index
col
Index
matrix
Entry
intermediate
Index
cached
Result
matrix
Exp
Result
sc
n
result
result
ans
result
bit
Count
i
position
index
n
R
A11
A12
A21
A22
B11
B12
B21
B22
M1
M2
M3
M4
M5
M6
M7
C11
C12
C21
C22
n
C
i
j
n
C
i
j
i1
i2
j1
j2
i1
i2
j1
j2
size
left
Half
right
Half
i
left
Sub
Sky
Line
right
Sub
Sky
Line
i
min
i
i
power
sum
pivot
i
temp
j
pivot
i
temp
j
q
q
divide
Array
divide
X
left
Array
right
Array
min
Left
Area
min
Right
Area
min
Value
i
x
Gap
first
Window
k
i
x
Gap
length
i
j
x
Gap
y
Gap
min
Value
length
x
Gap
y
Gap
result
i
j
cp
i
result
available
available
i
j
cloned
read
i
result
i
i
words
max
start
i
map
temp
i
j
set
queue
level
size
i
curr
words
chars
j
original
chars
c
new
word
i
curr
j
c
nn
child
Node
q
current
State
current
Child
parent
Suffix
position
By
String
Index
Value
i
position
By
String
Index
Value
parent
position
Recorder
i
ch
i
j
endpoint
output
Link
trie
position
By
String
Index
Value
position
By
String
i
pattern
positions
text
Index
i
pattern
Char
text
Char
table
i
c
final
I
string
List
i
s
Copy
string
List
number
character
Map
track
Uinque
Character
i
char
1
number
negative
zero
is
Digit
db1
db1
i
string
Length
counter
i
i
length
s
str
sc
n
max
Str
i
j
n
i
b
ch
str
len
i
first
second
nm
c
d
m
n
i
a
b
k
i
i
nm
kk
freq
i
pos1
pos2
i
values
temp
l1
l2
char
Appearances
i
c
num
Of
Appearances
i
c
dict
dict
index
start
index
height
depth
zig
Zaged
Array
pointer
height
space
depth
space
bool
stack
head
strings
values
i
value
i
j
temp
alpha
i
letters
Existing
letter
Index
i
count
compressed
String
i
i
strings
values
i
n
max
Area
st
i
start
tmp
tmp
operand
Count
operator
Count
i
token
infix
stack
value
String
operand
A
operand
B
operator
index
token
st
i
ch
sc
str
result
stack
i
input
result
s
left
right
i
i
i
ans
i
i
len
i
i
arr
target
res
n
ans
arr2
max
Num
index
minimums
i
window
Array
min
Num
tokens
s
tables
bits
result
output
stack
stack
result
i
input
result
paired
Brackets
brackets
Stack
linked
List
Values
a
Color
Luminance
b
Color
Luminance
red
green
blue
s
Rgb
alg
Impl
black
black
Luminance
white
white
Luminance
highest
Color
Ratio
foreground
foreground
Luminance
background
background
Luminance
contrast
Ratio
word
List
word
Counts
result
num
Rows
num
Cols
mirrored
Matrix
i
res
i
i
max
Heap
Top
min
Heap
Top
linear
mid
zero
i
j
in
n
m
mat
i
j
value
To
Index
i
rem
range
mid
mid
count
mid
in
n
divisor
reverse
count
num
sc
i
j
row
column
arr
np
n
a
i
l
h
mid
temp
i
scan
ts
n
arr
i
th
arr
i
j
k
temp
arr
start
end
i
temp
set
ts
hm
i
i
j
t
temp
input
n
a
i
j
d
i
j
n
x
b
index
i
i
j
k
i
j
k
n
c
i
i
c1
j
c0
k
j
pi1
i
pi0
itmp
i
pj
l
trie
final
Words
visited
i
j
ans
letter
neighbors
neighbors
node
i
letter
new
Node
i
a
b
t
p
i
temp
values
numbers
checksum
numbers
checksum
valid
Input
invalid
Input
input
validation
Result
result
scan
n
first
second
next
is
Prime
Array
cap
i
j
number
Of
Primes
primes
prime
Index
cur
Number
numbers
checksum
i
index
b
modified
Digits
numbers
checksum
i
index
b
valid
Input
invalid
Input
input
validation
Result
result
haystack
needle
m
n
pi
q
i
n
pi
q
i
black
And
White
Image
colored
Image
image
figure
Height
image
X
image
Y
figure
X
figure
Y
distance
hue
saturation
val
hi
f
v
p
q
t
a
b
current
Step
step
a
New
dictionary
fis
in
s
cw
dictionary
list
input
k
i
sc
r
n
i
j
i
k
temptop
temp
in
n
res
s
r
max
min
Diff
index
i
mem
Alloc
chosen
Block
Idx
max
index
i
mem
Alloc
chosen
Block
Idx
i
mem
Alloc
chosen
Block
Idx
i
mem
Alloc
chosen
Block
Idx
password
random
upper
lower
numbers
special
Chars
all
Chars
letters
password
i
g
vertex
result
source
q
u
v
alternate
Dist
scn
N
P
rv
root
precision
i
j
need
Array
finish
Processes
safe
Sequence
Array
work
Array
i
count
found
Safe
System
m
j
k
i
number
Of
Processes
number
Of
Resources
sc
processes
i
available
Array
i
max
Array
i
j
allocation
Array
i
j
crc
polynomial
bytes
i
bit
c15
max
s
set
i
i
j
flag
cnt
sc
num
set
Bit
Count
sc
t
n
arr
i
j
i
j
n
i
j
temp
i
k
j
temp
bit
Set
crc32
i
s
n
char
Array
charfreq
q
i
hn
root
x
y
f
scanner
number
Of
Discs
i
p
sc
a
b
s
n
mini
Max
Algorith
is
Maximizer
verbose
best
Score
best
Score
score1
score2
random
Scores
rand
i
i
j
vectors
result
image
Width
offset
X
offset
Y
image
vectors
i
offset
X
offset
Y
vector1
vector2
vector3
initial
Vectors
vectors
new
Vectors
i
start
Vector
end
Vector
difference
Vector
image
g2d
bs
i
x1
y1
x2
y2
x
y
x
y
x
y
radians
ca
sa
x
y
my
Queue
text
pat
m
n
state
i
state
x
ns
i
maximum
End
Point
number
Line
start
end
current
overlaps
d
r
sqrt
box
Row
Start
box
Col
Start
r
d
row
col
is
Empty
i
j
num
r
d
board
N
p
Node
i
p
Crawl
level
index
length
p
Crawl
level
index
i
i
p
Crawl
level
n
index
is
Word
is
Last
prefix
root
comp
sc
num
i
input
data
it
temp
list
mid
sky1
sky2
current
H1
current
H2
skyline
max
H
current
X
current
X
skyline
Problem
nodes
i
j
in
p
Initial
Page
Rank
Outgoing
Links
Damping
Factor
Temp
Page
Rank
External
Node
Number
Internal
Node
Number
k
ITERATION
STEP
lcg
i
cnt
br
inp
Str
sb
n
i
r
c
i
result
numbers
sum
i
temp
valid
Input
invalid
Input
valid
Card
Number
invalid
Card
Number
illegal
Card
Number
validation
Result
trimmed
Card
Number
card
Numbers
is
Valid
result
i
credit
Card
min
Kth
res
index
i
copy
Arr
copy
Arr
i
pivot
pivot
Range
num
offset
m
Arr
i
swap
small
cur
big
pivot
Range
sum
mid
i
j
arr
min
K
result
pos
base
text
pattern
q
m
n
t
p
h
j
i
i
i
x
x
k
i
i
i
x
size
dst
i
s
given
String
subsequence
i
ans
Small
Ans
ans
i
k
numbers
i
stp
result
i
sb
s
size
a
i
insert
pos
ins
size2
b
del
pos
total
Error
Bit
Count
i
candidate
count
count
candidate
count
base
perlin
Noise
noise
Layers
random
x
y
octave
amplitude
total
Amplitude
octave
x
y
x
y
perlin
Noise
Layer
period
frequency
x
x0
x1
horizintal
Blend
y
y0
y1
vertical
Blend
top
bottom
in
width
height
octave
Count
persistence
seed
charset
perlin
Noise
chars
length
step
x
y
value
noise
Value
sum
temp
power
original
Number
digit
prime
Factors
List
number
Copy
reverse
Number
remainder
previous
current
i
next
answer
Array
i
j
mat
x
step
a
j
answer
Array
i
j
sum
remainder
result
my
Int
Array
result
sc
i
res
n
arr
num1
num2
cube
root
sum
of
digits
temp
rem
results
scanner
n
i
limit
a
up
down
i
res
i
arr
line
i
new
dividend
1
new
divisor
1
answer
dividend
string
last
index
remainder
i
part
v1
part
1
quotient
quotient
sc
num
magic
square
row
num
col
num
i
i
j
to
Solve
stub
gcd
Solution
to
Return
x
To
Set
y
To
Set
stub
Wrapper
next
that
that
terms
temp
n
next
term
i
j
in
n
a
cube
Root
result
i
j
t
sum
Of
Digits
n
sum
Of
Digits
length
n
max
i
square
t
number
Ofdigits
last
Digits
square
n
square
product
A
B
cross
Prod
dot
Prod
sum
carry
d
X
d
Y
d
i
d
distance
i
sqrt
mid
left
Min
right
Min
perimeter
numerator
denominator
numerator
denominator
mid
left
Max
right
Max
sum
sum
sqrt5
phi
psi
result
result
convolved
i
k
input
num1
num2
high
num3
cmv
s
tmp
fact
i
br
n
temp
temp
temp
temp
temp
temp
d
temp
N
log2N
direction
len
angle
wlen
i
w
j
u
v
log2N
reverse
i
i
z
reversed
i
n
old
Size
i
nums
kth
kth
Max
Index
target
Max
kth
Min
Index
target
Min
size
array
i
start
end
pivot
pivot
j
i
tmp
var
avg
i
j
pi
div
Counter
i
final1
i
row
Size
column
Size
result
value1
value2
size
matrix1Row
Size
matrix2Column
Size
result
value1
value2
matrix1
matrix2
actual
expected
matrix1
matrix2
actual
expected
matrix1
matrix2
actual
expected
x
y
d
sum
Wrapper
sum
root
i
N
bn
Size
direction
an
bn
i
i
angle
i
angle
convolution
i
angle
bk
i
z
i
j
j
n
example
Equation1
points1
example
Equation2
points2
example
Equation3
points3
points
first
Point
y
Current
x
Current
point
x
xhalf
i
x
xhalf
i
it
a
b
e
n
list
i
number
original
Number
number
Squared
left
Digits1
left
Digits2
right
Digits
x
y
sum
i
sum
root
i
prime
Factors
i
abs
Min
Wrapper
countof
Res
res
i
j
mul
Digits
faktor
Digits
res
digits
num
Rows
num
Columns
rank
row
Marked
matrix
Copy
col
Index
pivot
Row
num
Rows
num
Columns
matrix
Copy
row
Index
num
Columns
num
Rows
pivot
Row
num
Columns
next
Col
num
Rows
num
Columns
other
Row
col2
sum
digits
sum
i
is
Negative
is
Positive
number
i
length
min
i
result
i
s
d
rnd
i
a
r
d
x
r
res
a
Hi
a
Lo
b
Hi
b
Lo
result
x
root
s
count
max
modes
factorial
i
last
Ugly
Number
res
prime
Factor
Count
i
res
numbers
i
digits
abs
Max
i
diff
i
convolved
Size
convolved
i
n
seq
temp
res
diff
i
convolved
Size
convolved
i
strobogrammatic
Map
left
right
left
Char
right
Char
i
prev
current
i
next
best
sec
Best
sqrt
value1
value2
integration
N
a
b
h
integral
Evaluation
data
temp
xi
i
integral
Evaluation
i
det
sign
p
q
b
x
i
j
in
n
a
i
j
solution
i
