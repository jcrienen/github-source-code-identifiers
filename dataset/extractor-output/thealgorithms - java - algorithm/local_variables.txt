hexaDecimalToBinary
processes
fcfsScheduling
process1
process2
process3
processDetails
a
a
a
a
a
a
a
processes
expectedGanttChart
actualGanttChart
processes
rrScheduling
process1
process2
process3
process4
process5
process6
processDetails
plainText
key
expectedOutput
cipherText
cipherText
key
expectedOutput
plainText
textToEncrypt
cipherText
encryptedText
cipherText
encryptedText
allPossibleAnswers
textToEncrypt
cipherText
decryptedText
plainText
expectedOutput
cipherText
cipherText
expectedOutput
plainText
sessionKey
frameCounter
expected
lfsr0
sessionKey
frameCounter
lfsr0
expected
sessionKey
frameCounter
lfsr0
text
key
cipherText
encryptedText
key
decryptedText
message
key
actual
message
key
actual
text
key
encodedText
decodedText
text
cipherSmall
cipherText
encryptedText
cipherSmall
decryptedText
plaintext
actual
ciphertext
actual
plaintext
encryptedText
actual
txt
pat
kmpSearch
value
txt
pat
kmpSearch
value
txt
pat
kmpSearch
value
txt
pat
kmpSearch
value
txt
pat
kmpSearch
value
nodeB
nodeC
nodeD
nodeE
nodeF
expectedValue
expectedPath
value
expectedValue
expectedPath
value
expectedPath
node
value
expectedPath
value
indexFromOurAlgorithm
indexFromLinearSearch
searcher
arr1
target1
result1
arr2
target2
result2
arr3
target3
result3
arr4
target4
result4
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
arr
target
ans
expected
array
binarySearch
array
binarySearch
nodeB
nodeC
nodeD
nodeE
nodeF
expectedValue
expectedPath
value
expectedValue
expectedPath
value
value
expectedPath
value
elements
minimum
elements1
elements2
minimum1
minimum2
elements1
elements2
elements3
minimum1
minimum2
minimum3
elements
actual
expected
elements
maximum
elements1
elements2
maximum1
maximum2
elements1
elements2
elements3
maximum1
maximum2
maximum3
elements
actual
expected
elements
median
elements1
elements2
elements3
median1
median2
median3
medianIndex
elements
actual
elementsSorted
elements
actual
elementsSorted
percentile30th
elements
actual
elementsSorted
elements
actual
elementsSorted
percentile70th
elements
actual
elementsSorted
elements
actual
elements
actual
elementsSorted
exception
expectedMsg
objects
exception
expectedMsg
exception
expectedMsg
exception
expectedMsg
arr1
arr2
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
ans
arr
target
matrix
test
res
expectedResult
matrix
test
res
expectedResult
arr
target
ans
excepted
arr
target
ans
excepted
arr
answer
expected
arr
answer
expected
arr
answer
expected
arr
answer
expected
arr
answer
expected
arr
answer
expected
wiggleSort
values
result
wiggleSort
values
result
wiggleSort
values
result
wiggleSort
values
result
wiggleSort
values
result
wiggleSort
values
result
wiggleSort
values
result
graph
expected
graph
exception
expected
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
emptyArray
singleElementArray
array
identicalArray
doubles
array
array2
array3
list
identicalList
doubles
list
array2
array3
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
inputArray
outputArray
inputArray
outputArray
inputArray
expectedOutput
outputArray
inputArray
expectedOutput
outputArray
inputArray
expectedOutput
outputArray
inputArray
outputArray
inputArray
expectedOutput
outputArray
inputArray
expectedOutput
outputArray
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
array
expResult
actResult
array
expResult
actResult
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
array
expected
sorted
list
expected
sorted
randomSize
array
sorted
randomSize
array
list
sorted
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
array
sorted
expected
randomSize
array
sorted
arr
selectionSort
arr
selectionSort
arr
selectionSort
expectedArray
actualList
expectedArray
actualList
expectedArray
actualList
expectedArray
expectedArray
actualList
expectedArray
actualList
expectedArray
actualList
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedArray
inputArray
outputArray
expectedArray
integers
integersResult
dutchNationalFlagSort
integers
integersResult
dutchNationalFlagSort
strings
stringsResult
dutchNationalFlagSort
strings
stringsResult
dutchNationalFlagSort
integers
integersResult
dutchNationalFlagSort
integers
integersResult
dutchNationalFlagSort
strings
stringsResult
dutchNationalFlagSort
strings
stringsResult
dutchNationalFlagSort
expectedArray
actualList
actualArray
i
expectedArray
actualList
actualArray
i
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
outputArray
expectedOutput
inputArray
inputArray
expectedOutput
inputArray
expectedOutput
inputArray
expectedOutput
inputArray
expectedOutput
inputArray
expectedOutput
inputArray
expectedOutput
inputArray
expectedOutput
mergeSortRecursive
expected
sorted
mergeSortRecursive
expected
sorted
inputArray
expectedOutput
inputArray
expectedOutput
inputArray
expectedOutput
size
doubles
size
doubles
randomDouble
dsu
node
dsu
node1
node2
node3
node4
root1
root2
root3
root4
heap
fibonacciHeap
bloomFilter
bloomFilter
map
map
i
i
i
map
i
i
i
map
i
i
i
map
i
i
map
keys
i
i
map
testSize
random
i
randomInt
hashIndex
negateHashIndex
map
map
map
nums
expected
actual
nums
expected
actual
nums
expected
actual
nums
expected
actual
map
map
map
hashTable
hashTable
hashTable
contains
hashTable
initialSize
hashTable
hashTable
initialSize
hashTable
hashTable
edges
graph
result
edges
graph
result
edges
graph
result
exception1
expectedMessage
actualMessage
exception
expectedMessage
actualMessage
exception
expectedMessage
actualMessage
validEdges
validGraph
exception1
invalidEdges
invalidGraph
expectedMessage1
actualMessage1
exception2
invalidEdges
invalidGraph
expectedMessage2
actualMessage2
exception3
invalidEdges
invalidGraph
expectedMessage3
actualMessage3
exception4
invalidEdges
invalidGraph
expectedMessage4
actualMessage4
totalWeight
v
graph
i
actualResult
expectedResult
n
adjList
i
actualResult
expectedResult
expectedArray
inputArray
expectedArray
inputArray
n
adjList
i
actualResult
expectedResult
n
adjList
i
actualResult
expectedResult
queue
i
element
myQueue
myQueue
myQueue
skipList
skipList
actualValue
skipList
contains
skipList
mostLeftElement
initialSize
skipList
mostRightValue
initialSize
skipList
values
actualOrder
skipList
values
reverser
reverser
singleNode
result
reverser
head
result1
reverser
head
result
rotator
rotator
singleNode
rotatedSingleNode
rotator
head
rotated1
rotator
head
rotated3
nodeList
i
node
i
firstNode
secondNode
thirdNode
fourthNode
listHasLoop
listHasNoLoop
oddNumberOfNode
list
evenNumberOfNode
list
list
list
list
list
head
firstNode
secondNode
thirdNode
fourthNode
list
first
head
list
head
temp
i
list
head
list
first
head
list
head
i
temp
expeced
list
readElements
list
list
list
list
emptyList
sorter
singleNodeList
sorter
list
sorter
gSet
gSet
gSet1
gSet2
gSet3
gSet1
gSet2
mergedSet
counter
counter1
counter2
counter3
counter1
counter2
counter
counter
counter
counter1
counter2
counter1
counter2
lruCache
i
i
lruCache
i
i
mruCache
mruCache
i
lfuCache
lfuCache
lfuCache
lruCache
i
i
lruCache
i
i
mruCache
mruCache
i
root
root
root
root
root
expected
root
expected
root
root
root
root
root
root
coordinates
kdTree
coordinates
kdTree
coordinates
kdTree
root
root
root
tree
tree
tree
tree
root
queue
end
node
root
root
root
actualBST
actualBST
actualBST
actualBST
array
actualBST
array
actualBST
root
expected
root
expected
root
root
root
root
root
root
rootOpt
preorder
inorder
root
rootOpt
preorder
inorder
root
rootOpt
preorder
inorder
root
rootOpt
preorder
inorder
root
rootOpt
preorder
inorder
root
rootOpt
root
root
root
root
expected
root
expected
t
t
t
t
root
p
q
p
q
p
q
p
q
arr
lazySegmentTree
arr
lazySegmentTree
arr
lazySegmentTree
arr
lazySegmentTree
i
j
root
root
root
tree
tree
tree
tree
i
i
i
i
numberOfThreadsForProducers
numberOfThreadsForConsumers
numberOfItems
producerCountDownLatch
consumerCountDownLatch
resultAtomicArray
putExecutors
count
put
getExecutors
count
item
resultArray
i
expectedItem
length
result
i
n
graph
m
n
graph
m
n
graph
m
n
nodes
i
i
j
vertices
a
source
destination
list2
list1
vertices
a
source
destination
list2
list1
vertices
a
source
destination
list2
list1
vertices
a
source
destination
list2
list1
map
map2
i
i
i
j
expectedMap
expectedMap2
powerSum
result
powerSum
result
powerSum
result
result
result
result
zeroResult
negativeResult
result
result
result
arr
result
arr
ws
board
word
ws
board
word
ws
board
word
result
result
result
arr
image
expected
image
expected
image
expected
image
expected
image
expected
image
expected
points
expectedResult
graham
weight
value
capacity
weight
value
capacity
weight
value
capacity
weights
values
weightCapacity
expected
result
weights
values
weightCapacity
expected
result
weights
values
weightCapacity
expected
result
weights
values
weightCapacity
expected
result
weights
values
weightCapacity
weights
values
weightCapacity
weights
values
weightCapacity
weights
values
weightCapacity
arr
arr
arr
arr
numberProcesses
numberMachines
Run
Transfer
opt
costs
i
j
numberProcesses
numberMachines
Run
Transfer
opt
costs
i
j
numberProcesses
numberMachines
Run
Transfer
opt
costs
i
j
grid
grid
grid
grid
grid
grid
grid
result
array
array
array
array
array
array
weight
value
capacity
weight
value
capacity
weight
value
capacity
jobs
jobSequence
start
end
result
expected
start
end
result
expected
start
end
result
expected
expected
coins
expected
coins
expected
coins
expected
coins
expected
coins
expected
coins
expected
coins
arr
arr1
arr2
A
B
expResult
actResult
A
B
expResult
actResult
A
B
expResult
actResult
text
len
bytes
input
reader
text
len
bytes
input
reader
i
text
bytes
len
input
reader
testString1
testString2
testString1
testString2
testString1
testString1
testString2
exception
str1
str2
str3
str4
str5
str6
str7
str8
expected
emptyPatterns
searchPatterns
expected
searchPatterns
expected
searchPatterns
expected
searchPatterns
expected
searchPatterns
expected
wordList1
wordList2
input1
input2
input3
input4
input5
input6
expected
reversed
expected
reversed
expected
reversed
input1
input2
input3
input1
input2
input1
input2
input3
numbers1
output1
numbers2
output2
numbers3
output3
numbers4
output4
input1
input2
input3
input4
input5
input6
input7
input1
input2
exception
palindromes
notPalindromes
input1
anagrams
input1
input2
input3
input4
expectedOutput1
expectedOutput2
expectedOutput3
expectedOutput4
output
index
index
index
index
index
index
index
index
index
lastSearchNumber
lastSearchNumber
testCases
a
k
a
k
a
k
a
k
a
k
a
k
a
k
oneWordSentence
result
multipleWordSentence
result
matrix
result
matrix
result
stream
exception
stream
stream
stream
stream
stream
stream
stream
stream
i
stream
stream
stream
stream
stream
stream
stream
stream
originalMatrix
expectedMirrorMatrix
mirroredMatrix
originalMatrix
expectedMirrorMatrix
mirroredMatrix
originalMatrix
expectedMirrorMatrix
mirroredMatrix
originalMatrix
expectedMirrorMatrix
mirroredMatrix
originalMatrix
values
target
expected
values
target
values
target
expected
values
target
expected
values
target
expected
values
target
exampleList
exampleList
exampleList
exampleList
exampleList
exampleList
arr
key
arr
key
arr
key
arr
key
arr
key
a
a
a
a
a
a
a
a
input
expectedValue
arr
result
arr
result
arr
result
arr
n
expected
result
arr
n
expected
result
arr
arr
arr
arr
testCases
testCases
csb
a
a
a
a
a
a
a
a
primesTill4
primesTill40
primesTill240
length
tempPassword
minLength
maxLength
tempPassword
textToCRC16
resultCRC16
testCases
matrix
printClass
res
list
matrix
printClass
res
list
c
c
a
a
a
a
a
a
a
a
answer
answer
someBits
answer
answer
ex
ex
someBits
answer
someBits
answer
someBits
answer
ex
testCases
arr
arr
arr
arr
arr
expected
exception
fraction3
exception
result
originalHashCode
rank
newHashCode
trueTestCases
falseTestCases
exception
exception
exception
number
result
number
result
validDudeneyNumber
invalidDudeneyNumber
n
actual
expected
exception
number
expectedResult
actualResult
number
expectedResult
actualResult
number
expectedResult
actualResult
number
expectedResult
actualResult
i
listOfSquareFreeIntegers
i
isNumberSquareFree
isNumberPresentInList
number
expectedMessage
exception
actualMessage
number
expectedMessage
exception
actualMessage
number
result
number
result
number
result
numbers
numbers
numbers
numbers
numbers
numbers
numbers
numbers
numbers
testCases
exception
exception
exception
list
gaussian
answer
matrixSize
n
n
expectedListSize
actualResultList
strobogrammaticNumber
exception
complex
complex
complex1
complex2
add
complex1
complex2
add
complex1
complex2
sub
complex1
complex2
multiReal
multiImg
complex1
multiReal
multiImg
complex1
conReal
conImg
complex1
abs
complex1
complex2
divReal
divImg
complex1
divReal
divImg
arr
complex1
complex2
complex3
complex4
realV1
realV2
imgV1
imgV2
powersOfTwo
notPowersOfTwo
number
expectedResult
actualResult
number
expectedResult
actualResult
number
expectedMessage
exception
actualMessage
number
expectedMessage
exception
actualMessage
number
expectedMessage
exception
actualMessage
number
expectedOutput
actualOutput
number
expectedOutput
actualOutput
rangedNumbers
allTheNumbers
number
expectedMessage
exception
actualMessage
number
expectedMessage
exception
actualMessage
expectedResultArray
i
expectedValue
actualValue
numbers
numbers
numbers
numbers
expectedResult
result
exception
exception
testCases
uglyNumbers
otherUglyNumbers
testCases
uglyNumbers
uglyNumbers
uglyNumbers
uglyNumbers
t1
t2
t3
t4
exception
result
expected
result
expected
result
expected
result
expected
result
expected
result
expected
trueTestCases
falseTestCases
armstrong
armstrong
array1
array2
array1
array2
array1
array2
array1
array2
array1
array2
array1
array2
sc
b
octal
currBit
j
code3
i
sc
inputOctal
result
sc
b
turkishChars
latinChars
i
hexBuilder
i
j
dec
libraryDecToHex
decToHex
chroma
hueSection
secondLargestComponent
matchValue
dRed
dGreen
dBlue
value
chroma
saturation
hue
bHue
bSaturation
bValue
red
green
blue
binaryNumber
digitPosition
octalDigit
binaryDigit
binaryDigit
binaryMultiplier
octalDigitRemainder
digits
val
i
d
hexa_Input
dec_output
scan
prev
sum
newPrev
i
c
currentNum
sum
num
pow
i
digit
binCopy
d
s
power
sc
builder
a
times
b
n
b
c
d
input
n
b
c
d
input
sc
n
k
d
s
c
br
decInput
base
charArr
str
i
j
num
digits
hex
digit
input
oct
decimal
hex
str
val
i
a
n
now
i
octnum
hexadecnum
decnum
octalnum
scan
in
n
b1
b2
validDigits
digitsForBase
digitsList
i
decimalValue
charB2
charB1
output
i
scn
sn
sb
db
m
dec
dn
conHex
binary
i
hexNums
objConvert
hm
hex
i
currbit
code4
sc
binary
hex
processesNumber
waitingTime
burstTime
i
i
ganttChart
readyQueue
currentTime
currentProcess
processesNumber
queue
currentTime
completed
mark
remainingBurstTime
i
index
i
i
i
size
i
j
temp
ready
size
runtime
time
executed
j
k
running
i
size
minBurstTime
temp
positionOfShortestJob
encoded
cipherMap
beginSmallLetter
beginCapitalLetter
cipherCapital
i
i
decoded
cipherMap
beginSmallLetter
beginCapitalLetter
cipherCapital
i
i
rBytes
rotatingBytes
fixedBytes
i
currentByteBits
currentByte
roundKeys
rconCounter
i
t
prevKey
t0
t1
t2
t3
cells
blockBits
i
cellBits
blockBits
i
cellBits
cells
i
cells
i
cells
output
cells
output
cells
outputCells
i
row
cells
outputCells
i
row
roundKeys
i
roundKeys
i
choice
in
plaintext
encryptionKey
ciphertext
decryptionKey
location
i
j
chars
ciphertext
location
chars
plaintext
i
pozitionX
pozitionY
sc
substitutionInput
n
substitutionOutput
i
c
transpositionInput
modulus
transpositionOutput
i
j
c
transpositionPlaintext
i
j
c
plaintext
i
c
result
key
lfsr1
lfsr2
lfsr3
cycle
result
cycle
outputBit
i
i
newBit
result
discardedBit
discardedBit
i
majorityBit
result
bitCount
result
j
i
c
result
j
i
c
r
p
q
m
sortedTable
wordEncrypted
i
j
sortedTable
wordEncrypted
i
j
wordDecrypted
i
table
wordInChards
charElement
i
j
charValues
i
charValueIndex
tableSorted
i
i
j
column
columnArray
i
i
t
i
keywordForExample
wordBeingEncrypted
matrixSize
keyMatrix
i
j
messageVector
CipherText
cipherMatrix
j
i
x
i
n
keyMatrix
i
j
messageVector
PlainText
plainMatrix
j
i
x
i
det
sign
p
q
b
x
i
j
sc
message
encoded
cipherMap
beginSmallLetter
beginCapitalLetter
cipherCapital
i
i
decoded
cipherMap
beginSmallLetter
beginCapitalLetter
cipherCapital
i
i
cipher
i
msg
a_inv
flag
i
i
msg
cipherText
plainText
secKey
cipherText
decryptedText
aesKeyGenerator
decryptionCipher
gcmParameterSpec
bytePlainText
hexChars
j
v
encoded
length
i
current
decoded
length
i
current
listOfAllTheAnswers
i
binary
num
binary4B
n
i
num
hex
ans
i
ans
n1
n2
a
ans
i
col
j
i
left
right
fOut
i
right
left
i
right
left
length
permutedKey
i
j
subKeys
initialPermutedKey
C0
D0
Cn
Dn
key
i
l
xor
firstBit
secondBit
i
l
paddedString
diff
i
expandedKey
mixedKey
substitutedString
block
row
col
substitutedBlock
permutedString
permutedMessage
i
L0
R0
Ln
Rn
combinedBlock
reversedKeys
i
encryptedMessage
l
i
j
desiredLength
block
bitBlock
bytes
decryptedMessage
l
i
j
block
result
res
n
i
j
result
queue
current
left
right
leftCmp
rightCmp
leftThird
rightThird
r
size
maxElement
integers
shouldBeFound
search
atIndex
toCheck
rowCount
colCount
startRow
endRow
midCol
midRow
midIndex
r
size
maxElement
integers
val
search
atIndex
toCheck
median
comp
sc
num
ans
l
r
ans
mid
start
end
arrDescending
mid
list
j
in
x
t
t1
t2
t3
found
k
AscOrd
middle
median
comp
r
size
maxElement
integers
shouldBeFound
search
atIndex
toCheck
i
parent
r0
r1
parents
i
uf
r
size
maxElement
integers
val
search
atIndex
toCheck
median
comp
sc
n
a
i
low
high
mid
jumpSearch
array
i
length
blockSize
limit
i
M
N
lps
j
i
index
len
i
i
r
size
maxElement
integers
shouldBeFound
search
atIndex
index
patternLength
textLength
hashForPattern
hashForText
h
i
i
i
j
fibMinus1
fibMinus2
fibNumber
n
offset
i
integers
size
shouldBeFound
fsearch
atIndex
start
end
pos
r
size
maxElement
integers
shouldBeFound
search
atIndex
toCheck
ans
sc
arr
i
j
rows
col
ele
ans
msg
msg
msg
index
pivotIndex
pivotValue
storeIndex
i
storeIndexEq
i
i
subRight
median5
rightIndex
mid
rightIndex
ts
mcts
winnerNode
timeLimit
promisingNode
i
promisingNode
uctIndex
nodeIndex
i
childNode
uctTemp
rand
tempNode
isPlayerWinner
i
r
size
maxElement
integers
shouldBeFound
search
atIndex
toCheck
range
l
r
k
cmp
r
size
maxElement
integers
shouldBeFound
search
atIndex
toCheck
mid
comparison
sc
n
a
i
t
searcher
res
mid1
mid2
r
size
maxElement
integers
shouldBeFound
search
atIndex
toCheck
median
comp
rowPointer
colPointer
comp
pivot
randomIndex
mid
pivot
low
high
mid
temp
i
arr
arr_size
temp
result
i
i
arr
i
i
size
swapped
j
length
left
right
swappedLeft
swappedRight
i
j
integers
shakerSort
strings
i
length
i
randomIndex
integers
bogoSort
strings
pivots
pivot1
pivot2
j
less
great
temp
array
dualPivotQuickSort
i
length
gap
i
j
temp
toSort
sort
i
n
swapped
low
high
mid
leftHalf
rightHalf
CSort
arr
i
stringArray
i
size
gap
swapped
i
ob
arr
arr
random
i
i
sorted
i
i
temp
result
sorted
it
elem
result
LENGTH
i
j
element
a
b
size
i
max
index
j
arr
pancakeSort
mid
i
j
k
mx
i
output
i
count
m
exp
i
arr
n
n
temp
pivotIndex
pivotIndex
pivot
i
j
i
key
j
i
i
left
right
largest
i
j
minElemIndex
n
i
i
j
currentValue
size
randomArray
copyRandomArray
insertionSort
insertionTime
insertionSentinelTime
start
end
maxele
mid
i
j
k
inp
n
a
i
i
temp
len
third
stoogeSort
integerArray
stringArray
i
j
integers
strings
gnomeSort
array
random
i
bubbleSortRecursion
i
swapped
i
n
insertionSort
i
sz
lo
i
j
k
arrLength
half
arrA
arrB
newAl
newAl
sort
list
a
b
ch
nm
start
prev
fresh
ptr
i
i
uu
start1
prev1
fresh1
ptr1
i1
kk
i1
uu1
mm
start2
prev2
fresh2
ptr2
i2
i3
uu2
i
c
i
ptr
ptr
c
ptr
m
i
k
j
b
p
c
a
i
ptr
j
ptr
c
c
i
ptr
ptr
c
ptr
k
i
i
d
p
l
r
d
m
temp
n
k
j
swap
frequency
sortedArray
j
unsortedInts
countingSort
unsortedStrings
maxElement
numOfPigeonholes
pigeonHole
k
k
pigeonholeSort
arr
i
n
i
j
k
median
numMedians
smallestValue
n
i
minIndex
j
arr
selectionSort
sorted
i
strings
sortedStrings
i
LENGTH
index
amountSmallerElements
element
counter
i
a
b
arr
random
i
i
limit
max
min
numberOfBuckets
buckets
i
hash
index
max
min
sorted
max
i
grid
count
i
j
i
i
k
j
i
k
j
i
temp
low
high
mid
j
i
j
k
n
j
item
pos
i
i
temp
arr
cycleSort
tree
sortedList
i
tree
treeSort
a
intList
b
stringList
temp
k
i
k
n
i
a
up
ob
nx
ny
temporaryElement
key
key
wrongOrder
result
temp
temp
min
lst
k
temp
i
i
k
minIndex
temp
min
q
temporaryElement
key
key
wrongOrder
result
otherHeapElement
result
pi
rv
lci
rci
mini
ith
jth
index
toInsert
child
tmpChild
rankArray
curr
newKey
prevParent
prevParent
buckets
buckets
tmpCurr
tmpMin
i
c3
tmpNext
i
position
position
number
i
choice
key
h
In
numToCount
n
i
majorityElements
i
hash
hash
hash
i
temp
temp
next
i
hash
nodes
old
i
hash
nodes
hash
nodes
target
builder
hash
hash
wrappedInt
temp
hash
loopCounter
newT
i
wrappedInt
hash
i
wrappedInt
hash
factor
response
i
response
i
cnt
res
keyIndex
i
i
keyToRehash
valToRehash
listOfKeys
i
tmp
i
choice
key
h
In
i
bucketIndex
nodes
hc
old
bucketIndex
nodes
target
bucketIndex
nodes
builder
graph
i
i
k
solGraph
i
nodes
captain
connectedGroups
minGraph
edges
i
connectedElements
edge
in
i
i
start
end
i
temp
j
i
i
j
c
transposeGraph
vis
i
transposeGraph
i
i
vis
node
obj
sc
i
v
e
u
ve
w
j
neg
arr
dist
p
i
j
v
e
neg
dist
p
lowTime
insertionTime
i
isInStack
st
i
w
scc
i
component1
component2
cheapest
set1
set2
components
v
xroot
yroot
boruvkaState
cheapest
source
destination
intermediate
source
destination
source
source
destination
scan
numberOfVertices
adjacencyMatrix
source
destination
floydwarshall
i
i
isLastVertexConnectedToStart
v
i
color
i
read
t
S
V
E
adj
i
i
s
u
v
ans
min
min_index
r
i
dist
Set
i
c
u
v
graph
t
q
answer
current
graph
topSort
min
min_index
v
i
parent
key
mstSet
i
count
u
v
t
graph
graph
i
j
visited
orderList
adjacent
i
visited
orderList
queue
currentVertex
adjacent
vertex
s
i
i
j
i
fromV
fromV
toV
sb
graph
i
i
heuristic
graph
graphData
solution
queue
solutionFound
currentData
currentPosition
updatedPath
start
end
count
markedNodes
graphChars
graphInts
newNode
destroy
retValue
node
join
travel
queue
temp
sb
i
myQueue
result
result
queue
newNode
newNode
oldHeadVal
oldHead
oldTailVal
oldTail
dequeString
currNode
myDeque
i
dequeSize
i
removing
size
temp
current
temp
max
temp
res
cq
oldfirst
element
bag
list
i
curr
count
prev
count1
curr
Next
count
ans
i
start
element
iterator
i
start
counter
element
element
temp_element
temp_next
prev_index
current_index
current_element
os_node
os_next
availableIndex
iterator
availableNodeIndex
temp
index
head
list
randomNum
listA
listB
i
headA
headB
size
head
tail
min
head
curr
temp
list
i
i
cur
temp
count
connectedPoint
sptr
fptr
singlyLinkedList
sc
n
k
p
s
before
i
destroy
saved
cl
pivot
lessHead
lessTail
greaterHead
greaterTail
sortedLess
sortedGreater
current
current
current
myList
linkOperations
newLink
newLink
newLink
previousLink
i
temp
temp
current
newLink
current
linkOne
linkTwo
thisHead
thisTail
nextLink
nextLinkNext
nextLinkPrevious
current
layer
toFix
next
nodeHeight
node
i
counter
current
current
layer
next
i
current
layer
next
layers
sizeWithHeader
i
current
position
i
result
acc
positions
height
level
border
curr
len
currentNodeFast
currentNodeSlow
firstCounter
secondCounter
previousA
currentA
previousB
currentB
temp
prev
curr
next
prev
h2
cur
count
joiner
pred
newHead
temp
newNode
cur
i
cur
i
cur
i
list
instance
head
value
listA
listB
listC
i
pa
pb
i
sumP
sumN
i
i
i
sum
i
i
node
node
node
temp
i
evicted
evicted
entry
exitingEntry
newEntry
preEntry
nextEntry
i
evicted
evicted
entry
preEntry
nextEntry
existingEntry
newEntry
Stack
x
y
newNs
item
n
myStackArray
transferArray
i
stack
i
stack
newNode
destroy
retValue
cur
builder
sc
n
i
stack
element
ele
current
newNode
parent
temp
successor
current
parent
queue
q1
q2
first
second
n
min
max
b
random
currentNode
i
node
currentNode
i
ch
node
currentNode
i
ch
node
obj
word
scan
t
resS
resD
badInput
result
result
stack
temp
y
right
left
x
y
yorigcolor
w
w
scan
item
node
scan
item
node
mid
root
bf
str
b
T3
b
T3
root
sc
inputX0
toPrint
randomX
root
i
temp
result
q
nodesOnLevel
level
i
tempNode
result
set
Q
qi
hd
n
root
t
integerTree
stringTree
temp
temp
temp
sortedList
result
q
prevLevelFromLeftToRight
nodesOnLevel
level
i
node
parent
temp
rightOrLeft
newNode
parent
temp
rightOrLeft
replacement
parent2
child
temp
points
distance
i
t
distance
i
t
axis
median
node
axis
left
right
candidates
left
right
candidates
node
min
min
distance
distanceExceptAxis
queue
index
map
max
min
a
ans
i
result
mid
left
right
merge
result
result
result
stack
node
result
result
stack
node
temp
temp
temp
adj
v
e
i
to
from
i
parent
depth
v1
v2
temp
cumSum
x
seg_size
mid
mid
diff
mid
n
parent
goLeft
parent
child
node
child
b
b
result
tree
i
scn
number
i
child
i
i
sz
i
maxi
i
h
i
k
i
i
i
i
q
k
i
arr
i
i
inorderMap
i
root
i
leftNodesCount
rightNodesCount
root
i
leftNodesCount
rightNodesCount
isBalanced
leftHeight
rightHeight
isBalanced
nodeStack
lastVisited
subtreeHeights
node
leftHeight
rightHeight
item
tmp
oldElement
newSize
element
i
names
visited
i
maxColors
sv
q
top
array
result
i
i
r
c
row
col
neighbor
neighbour
x
y
num
num
neighbor
arrangements
sol
i
sb
j
rowIndex
i
diff
array
result
i
temp
map
map2
i
i
i
j
i
i
j
i
j
arr
i
i
isVisited
pathList
g
i
xi
yi
exists
i
j
exists
indexPoint1
indexPoint2
i
top
s
val
res
dx1
dy1
dx2
dy2
sum
n
m
i
j
k
q
arr
a
b
aLPS
bLPS
reverse
bestResult
bestSubResult
bestSubResult1
bestSubResult2
arr1
arr2
lcsMatrix
i
j
i
j
lcs
i
j
str1
str2
lcs
val
wt
W
n
first
second
third
i
next
n
dp
i
t
idx
notpick
pick
n
prev
ind
cur
t
notTaken
taken
count
dice
count
dice
i
count
dice
catalanArray
i
j
sc
n
dp
i
i
dpTable
i
j
arr
n
isSum
i
i
j
j
sc
n
arr
i
m
N
tail
length
i
size
arr
lis
i
index
left
right
middle
sc
n
f
fib
i
f
prev
res
next
i
squareRootOf5
phi
nthTerm
count
mSize
col
row
matrix
i
i
i
i
i
i
j
i
l
i
j
k
q
len1
len2
distanceMat
i
j
i
j
str1
str2
i
chs
chp
ros
rop
ans
blank
multiple
i
chs
chp
ans
blank
multiple
i
chs
chp
ans
blank
multiple
strg
row
col
chs
chp
ans
blank
multiple
src
pat
table
j
i
j
k
prev
curr
next
i
a
b
aLPS
bLPS
arr
start
end
g
i
j
len
minCuts
isPalindrome
i
j
L
input
word
ans
sum
dp
closestPartitionSum
i
j
dp
i
j
dp
i
j
i
j
m
n
l
L
i
j
X
Y
numRows
numCols
dp
col
row
col
m
n
dp
j
i
j
textChar
patternChar
n
year
start
end
n
year
start
end
ans
n
strg
slide
si
ei
year
start
end
arr
totalFlow
parent
i
q
here
there
amount
printer
sb
p
p
len1
len2
dp
i
j
i
c1
j
c2
replace
insert
delete
min
input
s1
s2
ans
storage
m
n
op1
op2
op3
i
j
runningCosts
k
min
i
i
j
dp
i
w
amount
coins
combinations
i
minimumCoins
i
i
sub_res
i
val
i
maxVal
j
las
i
result
i
j
arr
n
arr
Key
include
exclude
i
j
image
eggFloor
result
x
i
j
i
j
n
m
result
chars
n
res
max
i
index
a
i
sum
running_sum
token
in
ch
indexCount
array
i
tryTime
lateness
j
slots
result
i
j
jobSequenceBuilder
i
n
activities
i
lastEndTime
selectedActivities
i
ratio
i
finalValue
current
i
index
coins
count
ans
i
rowsInMatrix1
columnsInMatrix1
rowsInMatrix2
columnsInMatrix2
product
rowIndex
colIndex
matrixEntry
intermediateIndex
cachedResult
matrixExpResult
sc
n
result
result
ans
result
bitCount
i
position
index
n
R
A11
A12
A21
A22
B11
B12
B21
B22
M1
M2
M3
M4
M5
M6
M7
C11
C12
C21
C22
n
C
i
j
n
C
i
j
i1
i2
j1
j2
i1
i2
j1
j2
size
leftHalf
rightHalf
i
leftSubSkyLine
rightSubSkyLine
i
min
i
i
power
sum
pivot
i
temp
j
pivot
i
temp
j
q
q
divideArray
divideX
leftArray
rightArray
minLeftArea
minRightArea
minValue
i
xGap
firstWindow
k
i
xGap
length
i
j
xGap
yGap
minValue
length
xGap
yGap
result
i
j
cp
i
result
available
available
i
j
cloned
read
i
result
i
i
words
max
start
i
map
temp
i
j
set
queue
level
size
i
curr
words_chars
j
original_chars
c
new_word
i
curr
j
c
nn
childNode
q
currentState
currentChild
parentSuffix
positionByStringIndexValue
i
positionByStringIndexValue
parent
positionRecorder
i
ch
i
j
endpoint
outputLink
trie
positionByStringIndexValue
positionByString
i
pattern
positions
textIndex
i
patternChar
textChar
table
i
c
finalI
stringList
i
sCopy
stringList
number
characterMap
trackUinqueCharacter
i
char_1
number
negative
zero
isDigit
db1
db1
i
stringLength
counter
i
i
length
s
str
sc
n
maxStr
i
j
n
i
b
ch
str
len
i
first
second
nm
c
d
m
n
i
a
b
k
i
i
nm
kk
freq
i
pos1
pos2
i
values
temp
l1
l2
charAppearances
i
c
numOfAppearances
i
c
dict
dict
index
start
index
height
depth
zigZagedArray
pointer
height_space
depth_space
bool
stack
head
strings
values
i
value
i
j
temp
alpha
i
lettersExisting
letterIndex
i
count
compressedString
i
i
strings
values
i
n
maxArea
st
i
start
tmp
tmp
operandCount
operatorCount
i
token
infix
stack
valueString
operandA
operandB
operator
index
token
st
i
ch
sc
str
result
stack
i
input
result
s
left
right
i
i
i
ans
i
i
len
i
i
arr
target
res
n
ans
arr2
maxNum
index
minimums
i
windowArray
minNum
tokens
s
tables
bits
result
output
stack
stack
result
i
input
result
pairedBrackets
bracketsStack
linkedListValues
aColorLuminance
bColorLuminance
red
green
blue
sRgb
algImpl
black
blackLuminance
white
whiteLuminance
highestColorRatio
foreground
foregroundLuminance
background
backgroundLuminance
contrastRatio
wordList
wordCounts
result
numRows
numCols
mirroredMatrix
i
res
i
i
maxHeapTop
minHeapTop
linear
mid
zero
i
j
in
n
m
mat
i
j
valueToIndex
i
rem
range
mid
mid
count
mid
in
n
divisor
reverse
count
num
sc
i
j
row
column
arr
np
n
a
i
l
h
mid
temp
i
scan
ts
n
arr
i
th
arr
i
j
k
temp
arr
start
end
i
temp
set
ts
hm
i
i
j
t
temp
input
n
a
i
j
d
i
j
n
x
b
index
i
i
j
k
i
j
k
n
c
i
i
c1
j
c0
k
j
pi1
i
pi0
itmp
i
pj
l
trie
finalWords
visited
i
j
ans
letter
neighbors
neighbors
node
i
letter
newNode
i
a
b
t
p
i
temp
values
numbers
checksum
numbers
checksum
validInput
invalidInput
input
validationResult
result
scan
n
first
second
next
isPrimeArray
cap
i
j
numberOfPrimes
primes
primeIndex
curNumber
numbers
checksum
i
index
b
modifiedDigits
numbers
checksum
i
index
b
validInput
invalidInput
input
validationResult
result
haystack
needle
m
n
pi
q
i
n
pi
q
i
blackAndWhiteImage
coloredImage
image
figureHeight
imageX
imageY
figureX
figureY
distance
hue
saturation
val
hi
f
v
p
q
t
a
b
currentStep
step
aNew
dictionary
fis
in
s
cw
dictionary
list
input
k
i
sc
r
n
i
j
i
k
temptop
temp
in
n
res
s
r
max
minDiff
index
i
memAlloc
chosenBlockIdx
max
index
i
memAlloc
chosenBlockIdx
i
memAlloc
chosenBlockIdx
i
memAlloc
chosenBlockIdx
password
random
upper
lower
numbers
specialChars
allChars
letters
password
i
g
vertex
result
source
q
u
v
alternateDist
scn
N
P
rv
root
precision
i
j
needArray
finishProcesses
safeSequenceArray
workArray
i
count
foundSafeSystem
m
j
k
i
numberOfProcesses
numberOfResources
sc
processes
i
availableArray
i
maxArray
i
j
allocationArray
i
j
crc
polynomial
bytes
i
bit
c15
max
s
set
i
i
j
flag
cnt
sc
num
setBitCount
sc
t
n
arr
i
j
i
j
n
i
j
temp
i
k
j
temp
bitSet
crc32
i
s
n
charArray
charfreq
q
i
hn
root
x
y
f
scanner
numberOfDiscs
i
p
sc
a
b
s
n
miniMaxAlgorith
isMaximizer
verbose
bestScore
bestScore
score1
score2
randomScores
rand
i
i
j
vectors
result
imageWidth
offsetX
offsetY
image
vectors
i
offsetX
offsetY
vector1
vector2
vector3
initialVectors
vectors
newVectors
i
startVector
endVector
differenceVector
image
g2d
bs
i
x1
y1
x2
y2
x
y
x
y
x
y
radians
ca
sa
x
y
myQueue
text
pat
m
n
state
i
state
x
ns
i
maximumEndPoint
numberLine
start
end
current
overlaps
d
r
sqrt
boxRowStart
boxColStart
r
d
row
col
isEmpty
i
j
num
r
d
board
N
pNode
i
pCrawl
level
index
length
pCrawl
level
index
i
i
pCrawl
level
n
index
isWord
isLast
prefix
root
comp
sc
num
i
input
data
it
temp
list
mid
sky1
sky2
currentH1
currentH2
skyline
maxH
currentX
currentX
skylineProblem
nodes
i
j
in
p
InitialPageRank
OutgoingLinks
DampingFactor
TempPageRank
ExternalNodeNumber
InternalNodeNumber
k
ITERATION_STEP
lcg
i
cnt
br
inpStr
sb
n
i
r
c
i
result
numbers
sum
i
temp
validInput
invalidInput
validCardNumber
invalidCardNumber
illegalCardNumber
validationResult
trimmedCardNumber
cardNumbers
isValid
result
i
creditCard
minKth
res
index
i
copyArr
copyArr
i
pivot
pivotRange
num
offset
mArr
i
swap
small
cur
big
pivotRange
sum
mid
i
j
arr
minK
result
pos
base
text
pattern
q
m
n
t
p
h
j
i
i
i
x
x
k
i
i
i
x
size
dst
i
s
givenString
subsequence
i
ans
SmallAns
ans
i
k
numbers
i
stp
result
i
sb
s
size
a
i
insert_pos
ins
size2
b
del_pos
totalErrorBitCount
i
candidate
count
count
candidate
count
base
perlinNoise
noiseLayers
random
x
y
octave
amplitude
totalAmplitude
octave
x
y
x
y
perlinNoiseLayer
period
frequency
x
x0
x1
horizintalBlend
y
y0
y1
verticalBlend
top
bottom
in
width
height
octaveCount
persistence
seed
charset
perlinNoise
chars
length
step
x
y
value
noiseValue
sum
temp
power
originalNumber
digit
primeFactorsList
numberCopy
reverseNumber
remainder
previous
current
i
next
answerArray
i
j
mat
x
step
a
j
answerArray
i
j
sum
remainder
result
myIntArray
result
sc
i
res
n
arr
num1
num2
cube_root
sum_of_digits
temp
rem
results
scanner
n
i
limit
a
up
down
i
res
i
arr
line
i
new_dividend_1
new_divisor_1
answer
dividend_string
last_index
remainder
i
part_v1
part_1
quotient
quotient
sc
num
magic_square
row_num
col_num
i
i
j
toSolve
stub
gcdSolution
toReturn
xToSet
yToSet
stubWrapper
next
that
that
terms
temp
n
next_term
i
j
in
n
a
cubeRoot
result
i
j
t
sumOfDigits
n
sumOfDigits
length
n
max
i
square
t
numberOfdigits
lastDigits
square
n
square
product
A
B
crossProd
dotProd
sum
carry
dX
dY
d
i
d
distance
i
sqrt
mid
leftMin
rightMin
perimeter
numerator
denominator
numerator
denominator
mid
leftMax
rightMax
sum
sum
sqrt5
phi
psi
result
result
convolved
i
k
input
num1
num2
high
num3
cmv
s
tmp
fact
i
br
n
temp
temp
temp
temp
temp
temp
d
temp
N
log2N
direction
len
angle
wlen
i
w
j
u
v
log2N
reverse
i
i
z
reversed
i
n
oldSize
i
nums
kth
kthMaxIndex
targetMax
kthMinIndex
targetMin
size
array
i
start
end
pivot
pivot
j
i
tmp
var
avg
i
j
pi
divCounter
i
final1
i
rowSize
columnSize
result
value1
value2
size
matrix1RowSize
matrix2ColumnSize
result
value1
value2
matrix1
matrix2
actual
expected
matrix1
matrix2
actual
expected
matrix1
matrix2
actual
expected
x
y
d
sumWrapper
sum
root
i
N
bnSize
direction
an
bn
i
i
angle
i
angle
convolution
i
angle
bk
i
z
i
j
j
n
exampleEquation1
points1
exampleEquation2
points2
exampleEquation3
points3
points
firstPoint
yCurrent
xCurrent
point
x
xhalf
i
x
xhalf
i
it
a
b
e
n
list
i
number
originalNumber
numberSquared
leftDigits1
leftDigits2
rightDigits
x
y
sum
i
sum
root
i
primeFactors
i
absMinWrapper
countofRes
res
i
j
mulDigits
faktorDigits
res
digits
numRows
numColumns
rank
rowMarked
matrixCopy
colIndex
pivotRow
numRows
numColumns
matrixCopy
rowIndex
numColumns
numRows
pivotRow
numColumns
nextCol
numRows
numColumns
otherRow
col2
sum
digits
sum
i
isNegative
isPositive
number
i
length
min
i
result
i
s
d
rnd
i
a
r
d
x
r
res
aHi
aLo
bHi
bLo
result
x
root
s
count
max
modes
factorial
i
lastUglyNumber
res
primeFactorCount
i
res
numbers
i
digits
absMax
i
diff
i
convolvedSize
convolved
i
n
seq
temp
res
diff
i
convolvedSize
convolved
i
strobogrammaticMap
left
right
leftChar
rightChar
i
prev
current
i
next
best
secBest
sqrt
value1
value2
integration
N
a
b
h
integralEvaluation
data
temp
xi
i
integralEvaluation
i
det
sign
p
q
b
x
i
j
in
n
a
i
j
solution
i
