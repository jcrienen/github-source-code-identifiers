process
blowfish
caesar
rsa
des
session
Key
Bytes
frame
Counter
Bytes
vigenere
simple
Sub
Cipher
root
bfs
root
dfs
NUM
RND
ELEMENTS
RANDOM
ASCII
A
ASCII
Z
bead
Sort
slow
Sort
shell
Sort
cocktail
Shaker
Sort
tree
Sort
bogo
Sort
dual
Pivotquick
Sort
pancake
Sort
simple
Sort
BIS
insertion
Sort
comb
Sort
bubble
Sort
gnome
Sort
tarjans
Algo
hamiltonian
Cycle
kosaraju
SIZE
SIZE
BUFFER
SIZE
buffer
knapsack
Memoization
obj
SMM
MESSAGE
patterns
text
string
Recursive
EXCEPTION
MESSAGE
size
Of
Blocks
size
Of
Processes
mem
Allocation
test
Mem
Allocation
next
Fit
size
Of
Blocks
size
Of
Processes
mem
Allocation
test
Mem
Allocation
best
Fit
size
Of
Blocks
size
Of
Processes
mem
Allocation
test
Mem
Allocation
worst
Fit
crc
size
Of
Blocks
size
Of
Processes
mem
Allocation
test
Mem
Allocation
first
Fit
c
Conjecture
fraction1
fraction2
test
Cases
EXCEPTION
MESSAGE
NULL
PARAMETER
MESSAGE
EMPTY
PARAMETER
MESSAGE
INCORRECT
FORMAT
MESSAGE
EXCEPTION
MESSAGE
So
D
EXP
MSG
ARR
LEN
LESS
2
EXP
MSG
ARR
SAME
ELE
input
Array
second
Min
second
Max
SMALL
VALUE
INVALID
RANGE
EXCEPTION
MESSAGE
INVALID
NUMBERS
EXCEPTION
MESSAGE
obj
size
Of
Int
In
Half
Bytes
number
Of
Bits
In
A
Half
Byte
half
Byte
hex
Digits
map
serial
Version
UID
all
Arabian
Roman
Numbers
all
Roman
Numbers
MINIMUM
BASE
MAXIMUM
BASE
LONG
BITS
processes
name
arrival
Time
burst
Time
priority
processes
quantum
Time
processes
schedule
RCON
SBOX
INVERSE
SBOX
MULT2
MULT3
MULT9
MULT11
MULT13
MULT14
key
key
Stream
Generator
KEY
STREAM
LENGTH
initial
Frame
Counter
frame
Counter
session
Key
INITIAL
CLOCKING
CYCLES
KEY
STREAM
LENGTH
register
length
clock
Bit
Index
tapping
Bits
Indices
registers
modulus
private
Key
public
Key
keyword
table
abecedarium
ABECEDARIUM
ENCRYPTION
FIELD
ENCRYPTION
FIELD
CHAR
user
Input
a
b
HEX
ARRAY
aes
Cipher
S
P
mod
Val
key
sub
Keys
PC1
KEY
SHIFTS
PC2
IP
expansion
s1
s2
s3
s4
s5
s6
s7
s8
s
permutation
I
Pinverse
visited
visited
arr
left
right
x
found
p
r
d
parent
child
Nodes
is
Players
Turn
player
Won
score
visit
Count
WIN
SCORE
TIME
LIMIT
random
seed
random
aux
INSERTION
SORT
THRESHOLD
SUB
ARRAY
SIZE
aux
arr
label
color
next
adj
val
next
a
a
value
children
rank
parent
data
max
Heap
element
npl
left
right
root
heap
capacity
size
min
Heap
key
additional
Info
data
map
GOLDEN
RATIO
min
total
Links
total
Cuts
num
Of
Trees
num
Of
Heap
Nodes
marked
Heap
Noodes
Counter
key
rank
marked
child
next
prev
parent
number
Of
Hash
Functions
bit
Array
hash
Functions
index
hsize
buckets
first
next
key
buckets
lf
size
key
val
table
Size
buckets
AVAILABLE
size
thresh
hsize
keys
values
size
size
buckets
lf
key
value
from
to
weight
nodes
edges
adjacency
Matrix
visited
cycles
stack
scc
sccs
List
vertex
edge
edges
index
u
v
w
Time
SC
Clist
src
dest
weight
vertex
edges
parent
rank
result
components
graph
Distance
Matrix
numberofvertices
INFINITY
V
path
Count
cycle
graph
k
adj
graph
in
Degree
V

number
Of
Vertices

number
Of
Edges

adjacency
EDGE
EXIST
EDGE
NONE
vertices
data
adjacent
Vertices
graph
from
to
weight
distance
path
estimated
name
start
Node
end
Node
edge
List
node
List
data
next
front
rear
size
node
DEFAULT
CAPACITY
max
Size
queue
Array
front
rear
n
Items

queue
val
next
prev
head
tail
size
max
Size
queue
Array
n
Items
arr
top
Of
Queue
beginning
Of
Queue
size
first
Element
size
content
next
Element
current
Element
element
next
os
head
cursor
Space
count
CURSOR
SPACE
SIZE
list
size
rand
val
next
data
next
next
value
size
head
tail
list
head
head
tail
link
Operations
value
next
previous
head
tail
size
head
height
height
Strategy
size
DEFAULT
CAPACITY
value
height
forward
backward
probability
DEFAULT
PROBABILITY
RANDOM
head
size
current
value
next
P
N
my
Id
n
P
my
Id
n
elements
key
value
frequency
previous
next
head
tail
map
capacity
DEFAULT
CAPACITY
data
head
tail
cap
DEFAULT
CAP
pre
Entry
next
Entry
key
value
data
head
tail
cap
DEFAULT
CAP
pre
Entry
next
Entry
key
value
data
head
previous
size
DEFAULT
CAPACITY
max
Size
stack
Array
top
stack
data
next
head
size
data
left
right
parent
root
item
left
right
list
root
child
end
root
R
B
key
color
left
right
p
nil
root
data
height
left
right
root
left
right
data
key
left
right
node
hd
root
root
data
left
right
root
root
k
coordinates
point
axis
left
right
start
end
value
lazy
left
right
root
root
scanner
n
fen
t
seg
t
n
arr
root
key
balance
height
left
right
parent
data
child
root
buffer
put
Pointer
get
Pointer
size
pointer
max
DEFAULT
CAPACITY
capacity
size
elements
cursor
color
edges
length
count
sum
base
moves
grid
total
length
v
nm
adj
List
dx
dy
visited
board
word
hull
start
Time
end
Time
map
scan
m
Array
size
m
s
p
count
col
row
INF
V
capacity
flow
number
Processes
number
Machines
Run
Transfer
Cost
t
d
id
deadline
profit
fib
Matrix
identity
Matrix
base
Fib
Numbers
points
x
y
number
Points
array
point1
point2
min
Num
second
Count
x
y
DEFAULT
BUFFER
SIZE
buffer
Size
buffer
pos
Read
buffer
Pos
found
Eof
input
order
coeffs
A
coeffs
B
history
X
history
Y
child
suffix
Link
output
Link
pattern
Ind
root
patterns
position
By
String
Index
Value
shift
Values
pattern
Length
comparisons
number
To
Char
Map
VOWELS
max
Heap
min
Heap
children
word
root
end
Symbol
DAMM
TABLE
MULTIPLICATION
TABLE
MULTIPLICATIVE
INVERSE
PERMUTATION
TABLE
file
Name
stack
CYCLE
NUMS
NO
ALLOCATION
counter
GRAPH
START
END
graph
v1
v2
dist
name
dist
previous
neighbours
data
c
left
right
scores
height
x
y
in
Stack
out
Stack
CHARS
FA
scanner
ALPHABET
SIZE
children
is
Word
End
building
count
coordinates
height
left
height
right
path
pagerank
a
c
m
previous
Value
DIGITS
COUNT
scanner
d
correct
Mess
wrong
Mess
wrong
Mess
Caught
wrong
Mess
Not
Caught
mess
Size
ber
message
Changed
message
divided
Message
p
random
Generator
builder
child
Nodes
data
parent
Node
depth
next
Node
left
Node
right
Node
process
Id
arrival
Time
burst
Time
waiting
Time
turn
Around
Time
NO
SOLUTION
INFINITE
SOLUTIONS
x
y
gcd
solution
x
y
z
MAX
ARG
real
img
random
value
value
EPSILON
POSITIVE
RADIUS
POSITIVE
HEIGHT
POSITIVE
BASE
MIN
VALUE
MAX
VALUE
RN
M
RN
C
RN
X
RN
I
ugly
Numbers
base
Numbers
positions
base
